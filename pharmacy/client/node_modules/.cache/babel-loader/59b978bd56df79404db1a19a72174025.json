{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/healthcare/client/src/users/userManager.js\";\nimport * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { Select, MenuItem } from '@material-ui/core';\nimport { getUsers, patchUser } from '../auth/usersService';\nimport { UserType, UserStatus } from '../models/user';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Route, Link } from 'react-router-dom';\nexport default class UserManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: []\n    };\n\n    this.getData = () => {\n      return getUsers().then(users => {\n        this.setState({\n          users: users\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const tableRef = React.createRef();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      as: Link,\n      to: \"/\",\n      onClick: this.clickLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-sign-out-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 71\n      }\n    }), \" Logout\"), /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef,\n      options: {\n        sorting: true,\n        search: true,\n        paging: false\n      },\n      title: \"Users\",\n      columns: [// { title: 'Id', field: '_id' },\n      {\n        title: 'Username',\n        field: 'username',\n        editable: false\n      }, {\n        title: 'First Name',\n        field: 'first_name'\n      }, {\n        title: 'Last Name',\n        field: 'last_name'\n      }, {\n        title: 'User Type',\n        field: 'user_type',\n        editable: false,\n        render: u => /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 42\n          }\n        }, UserType.GetTranslation(u.user_type)) // editComponent: props => (\n        //     <Select\n        //         id=\"user-type\"\n        //         value={props.value}\n        //         onChange={e => props.onChange(e.target.value)}\n        //     >\n        //         <MenuItem value={UserType.Physician}>{UserType.GetTranslation(UserType.Physician)}</MenuItem>\n        //         <MenuItem value={UserType.Patient}>{UserType.GetTranslation(UserType.Patient)}</MenuItem>\n        //         <MenuItem value={UserType.Admin}>{UserType.GetTranslation(UserType.Admin)}</MenuItem>\n        //     </Select>),\n\n      }, {\n        title: 'User Status',\n        field: 'user_status',\n        render: u => /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 42\n          }\n        }, UserStatus.GetTranslation(u.user_status)),\n        editComponent: props => /*#__PURE__*/React.createElement(Select, {\n          id: \"user-status\",\n          value: props.value,\n          onChange: e => props.onChange(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(MenuItem, {\n          value: UserStatus.Active,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 37\n          }\n        }, UserStatus.GetTranslation(UserStatus.Active)), /*#__PURE__*/React.createElement(MenuItem, {\n          value: UserStatus.Inactive,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 37\n          }\n        }, UserStatus.GetTranslation(UserStatus.Inactive)), /*#__PURE__*/React.createElement(MenuItem, {\n          value: UserStatus.Disabled,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 37\n          }\n        }, UserStatus.GetTranslation(UserStatus.Disabled)))\n      }],\n      data: this.state.users,\n      editable: {\n        onRowUpdate: (newData, oldData) => {\n          return patchUser(newData.user_id, newData).then(_ => this.getData());\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/healthcare/client/src/users/userManager.js"],"names":["React","MaterialTable","Select","MenuItem","getUsers","patchUser","UserType","UserStatus","Navbar","Nav","Route","Link","UserManager","Component","state","users","getData","then","setState","componentDidMount","render","tableRef","createRef","clickLogout","sorting","search","paging","title","field","editable","u","GetTranslation","user_type","user_status","editComponent","props","value","e","onChange","target","Active","Inactive","Disabled","onRowUpdate","newData","oldData","user_id","_"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { Select, MenuItem } from '@material-ui/core'\nimport { getUsers, patchUser } from '../auth/usersService';\nimport { UserType, UserStatus } from '../models/user';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Route, Link } from 'react-router-dom';\n\nexport default class UserManager extends React.Component {\n    state = {\n        users: []\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData = () => {\n        return getUsers()\n            .then(users => {\n                this.setState({ users: users })\n            })\n    }\n\n    render() {\n        const tableRef = React.createRef();\n        return (\n            <div>\n                <Nav.Link as={Link} to=\"/\" onClick={this.clickLogout}><i className=\"fas fa-sign-out-alt\"></i> Logout</Nav.Link>\n                <MaterialTable\n                    tableRef={tableRef}\n                    options={{\n                        sorting: true,\n                        search: true,\n                        paging: false,\n                    }}\n                    title=\"Users\"\n                    columns={[\n                        // { title: 'Id', field: '_id' },\n                        { title: 'Username', field: 'username', editable: false },\n                        { title: 'First Name', field: 'first_name' },\n                        { title: 'Last Name', field: 'last_name' },\n                        {\n                            title: 'User Type',\n                            field: 'user_type',\n                            editable: false,\n                            render: u => <span>{UserType.GetTranslation(u.user_type)}</span>,\n                            // editComponent: props => (\n                            //     <Select\n                            //         id=\"user-type\"\n                            //         value={props.value}\n                            //         onChange={e => props.onChange(e.target.value)}\n                            //     >\n                            //         <MenuItem value={UserType.Physician}>{UserType.GetTranslation(UserType.Physician)}</MenuItem>\n                            //         <MenuItem value={UserType.Patient}>{UserType.GetTranslation(UserType.Patient)}</MenuItem>\n                            //         <MenuItem value={UserType.Admin}>{UserType.GetTranslation(UserType.Admin)}</MenuItem>\n                            //     </Select>),\n                        },\n                        {\n                            title: 'User Status',\n                            field: 'user_status',\n                            render: u => <span>{UserStatus.GetTranslation(u.user_status)}</span>,\n                            editComponent: props => (\n                                <Select\n                                    id=\"user-status\"\n                                    value={props.value}\n                                    onChange={e => props.onChange(e.target.value)}\n                                >\n                                    <MenuItem value={UserStatus.Active}>{UserStatus.GetTranslation(UserStatus.Active)}</MenuItem>\n                                    <MenuItem value={UserStatus.Inactive}>{UserStatus.GetTranslation(UserStatus.Inactive)}</MenuItem>\n                                    <MenuItem value={UserStatus.Disabled}>{UserStatus.GetTranslation(UserStatus.Disabled)}</MenuItem>\n                                </Select>),\n                        }\n                    ]}\n                    data={this.state.users}\n                    editable={{\n                        onRowUpdate: (newData, oldData) => {\n                            return patchUser(newData.user_id, newData).then(_ => this.getData())\n                        },\n                    }}\n                />\n            </div>\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}