{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/auth/securityQuestion.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Alert from '@material-ui/lab/Alert';\nimport { answerSecurityQuestion, getQuestions } from './usersService';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nconst initState = {\n  answer: \"\",\n  error: \"\"\n};\n\nconst shuffle = array => {\n  let newOrder = new Array();\n\n  while (array.length > 0) {\n    const idx = Math.floor(Math.random() * array.length);\n    newOrder.push(array[idx]);\n    array.splice(idx, 1);\n  }\n\n  return newOrder;\n};\n\nexport class SecurityQuestion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initState\n    };\n\n    this.submitAnswer = async e => {\n      let response = await answerSecurityQuestion(this.props.user, this.state.answer);\n\n      if (response.msg) {\n        this.setState({\n          error: response.msg\n        });\n      }\n\n      this.props.app_login(response.user);\n\n      if (!response.correct) {\n        //Answered incorrectly\n        console.log(\"Incorrect\");\n      } else {\n        //Answered correctly\n        console.log('Correct');\n        this.props.history.push(\"/\");\n      }\n    };\n\n    this.changeForm = e => {\n      let propName = e.target.name;\n      let propValue = e.target.value;\n      let state = { ...this.state\n      };\n      state[propName] = propValue;\n      this.setState(state);\n    };\n  }\n\n  /*async componentDidMount(){\n      let questions = await getQuestions(this.props.user);\n      let state = { ...this.state };\n      state.questions = shuffle(questions);\n      this.setState(state);\n  }*/\n  render() {\n    const classes = {\n      paper: {\n        marginTop: \"10px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      form: {\n        width: '100%',\n        marginTop: \"10px\"\n      },\n      submit: {\n        margin: \"10px\"\n      }\n    };\n    let alert = this.state.error ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 40\n      }\n    }, this.state.error) : \"\";\n    return /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: classes.papper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Security Question\"), this.props.user.answer_attempt <= 3 ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h4\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, this.props.user.questions[this.props.user.answer_attempt - 1].question), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true,\n      name: \"answer\",\n      label: \"Answer\",\n      id: \"security_answer\",\n      required: true,\n      autoFocus: true,\n      autoComplete: \"auto-answer\",\n      onChange: this.changeForm,\n      value: this.state.answer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      style: classes.submit,\n      onClick: this.submitAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, \"Submit\")) : \"\", alert));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {\n  app_login\n};\nexport default connect(mapState, mapDispatch)(SecurityQuestion);","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/auth/securityQuestion.js"],"names":["React","Button","TextField","Grid","Container","Typography","Alert","answerSecurityQuestion","getQuestions","connect","app_login","initState","answer","error","shuffle","array","newOrder","Array","length","idx","Math","floor","random","push","splice","SecurityQuestion","Component","state","submitAnswer","e","response","props","user","msg","setState","correct","console","log","history","changeForm","propName","target","name","propValue","value","render","classes","paper","marginTop","display","flexDirection","alignItems","form","width","submit","margin","alert","papper","answer_attempt","questions","question","mapState","mapDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { answerSecurityQuestion, getQuestions } from './usersService';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nconst initState = {\n    answer: \"\",\n    error: \"\"\n}\n\nconst shuffle = (array) => {\n    let newOrder = new Array();\n    while (array.length > 0) {\n        const idx = Math.floor(Math.random() * (array.length));\n        newOrder.push(array[idx]);\n        array.splice(idx, 1)\n    }\n    return newOrder;\n}\n\nexport class SecurityQuestion extends React.Component {\n    state = {\n        ...initState\n    }\n\n    submitAnswer = async (e) => {\n        let response = await answerSecurityQuestion(this.props.user, this.state.answer);\n\n        if (response.msg) {\n            this.setState({ error: response.msg });\n        }\n\n        this.props.app_login(response.user);\n\n        if (!response.correct) {\n            //Answered incorrectly\n            console.log(\"Incorrect\");\n        } else {\n            //Answered correctly\n            console.log('Correct');\n            this.props.history.push(\"/\");\n        }\n    }\n\n    changeForm = (e) => {\n        let propName = e.target.name;\n        let propValue = e.target.value;\n        let state = { ...this.state };\n        state[propName] = propValue;\n        this.setState(state);\n    }\n\n    /*async componentDidMount(){\n        let questions = await getQuestions(this.props.user);\n        let state = { ...this.state };\n        state.questions = shuffle(questions);\n        this.setState(state);\n    }*/\n\n    render() {\n        const classes = {\n            paper: {\n                marginTop: \"10px\",\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n            },\n            form: {\n                width: '100%',\n                marginTop: \"10px\",\n            },\n            submit: {\n                margin: \"10px\",\n            },\n        };\n\n        let alert = this.state.error ? <Alert severity=\"error\">{this.state.error}</Alert> : \"\";\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <div style={classes.papper}>\n                    <Typography component=\"h1\" variant=\"h5\">Security Question</Typography>\n                    {this.props.user.answer_attempt <= 3 ?\n                        <Grid container justify=\"center\">\n                            <Typography component=\"h4\" variant=\"h5\">{this.props.user.questions[this.props.user.answer_attempt - 1].question}</Typography>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth\n                                name=\"answer\"\n                                label=\"Answer\"\n                                id=\"security_answer\"\n                                required\n                                autoFocus\n                                autoComplete=\"auto-answer\"\n                                onChange={this.changeForm}\n                                value={this.state.answer} />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                style={classes.submit}\n                                onClick={this.submitAnswer}>\n                                Submit\n                            </Button>\n                        </Grid> : \"\"}\n\n                    {alert}\n                </div>\n            </Container>\n        );\n    }\n}\n\nconst mapState = (state) => { return { user: state.user } };\nconst mapDispatch = { app_login };\n\nexport default connect(mapState, mapDispatch)(SecurityQuestion);"]},"metadata":{},"sourceType":"module"}