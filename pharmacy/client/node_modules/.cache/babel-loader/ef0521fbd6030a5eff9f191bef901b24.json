{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/auth/changeSecurityQuestions.js\";\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Alert from '@material-ui/lab/Alert';\nimport { updateSecurityQuestions, getAllSecurityQuestions } from './usersService';\nimport { InputLabel } from '@material-ui/core';\nconst initState = {\n  username: \"\",\n  security_question_1: \"\",\n  security_answer_1: \"\",\n  security_question_2: \"\",\n  security_answer_2: \"\",\n  security_question_3: \"\",\n  security_answer_3: \"\",\n  error: \"\",\n  success: \"\"\n};\nlet menuItems = [/*#__PURE__*/React.createElement(MenuItem, {\n  key: 1,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 18\n  }\n}, \"Question 1\")];\nexport default class changeSecurityQuestions extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initState\n    };\n\n    this.changeSecurityQuestions = async e => {\n      e.preventDefault();\n      const username = this.props.location.state.username;\n\n      if (!this.state.security_question_1) {\n        this.setState({\n          error: 'Please select a security question 1'\n        });\n        return;\n      }\n\n      if (!this.state.security_answer_1) {\n        this.setState({\n          error: 'Please provide a security answer 1'\n        });\n        return;\n      }\n\n      let sa1IsValid = this.state.security_answer_1.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n      this.state.security_answer_1.length >= 4; // is greater or equal to 6 (in length)\n\n      if (!sa1IsValid) {\n        this.setState({\n          error: \"Security answer 1 must be have 4 or more characters and must contain only numbers and letters!\"\n        });\n        return;\n      }\n\n      if (!this.state.security_question_2) {\n        this.setState({\n          error: 'Please select a security question 2'\n        });\n        return;\n      }\n\n      if (this.state.security_question_2 == this.state.security_question_1) {\n        this.setState({\n          error: 'Security question 2 has already been selected in security question 1! Please change security question 2.'\n        });\n        return;\n      }\n\n      if (!this.state.security_answer_2) {\n        this.setState({\n          error: 'Please provide a security answer 2'\n        });\n        return;\n      }\n\n      let sa2IsValid = this.state.security_answer_2.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n      this.state.security_answer_2.length >= 4; // is greater or equal to 6 (in length)\n\n      if (!sa2IsValid) {\n        this.setState({\n          error: \"Security answer 2 must be have 4 or more characters and must contain only numbers and letters!\"\n        });\n        return;\n      }\n\n      if (!this.state.security_question_3) {\n        this.setState({\n          error: 'Please select a security question 3'\n        });\n        return;\n      }\n\n      if (this.state.security_question_3 == this.state.security_question_1) {\n        this.setState({\n          error: 'Security question 3 has already been selected in security question 1! Please change security question 3.'\n        });\n        return;\n      }\n\n      if (this.state.security_question_3 == this.state.security_question_2) {\n        this.setState({\n          error: 'Security question 3 has already been selected in security question 2! Please change security question 3.'\n        });\n        return;\n      }\n\n      if (!this.state.security_answer_3) {\n        this.setState({\n          error: 'Please provide a security answer 3'\n        });\n        return;\n      }\n\n      let sa3IsValid = this.state.security_answer_3.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n      this.state.security_answer_3.length >= 4; // is greater or equal to 6 (in length)\n\n      if (!sa3IsValid) {\n        this.setState({\n          error: \"Security answer 3 must be have 4 or more characters and must contain only numbers and letters!\"\n        });\n        return;\n      } // change questions and answers of user\n\n\n      let res = await updateSecurityQuestions(username, this.state.security_question_1, this.state.security_answer_1, this.state.security_question_2, this.state.security_answer_2, this.state.security_question_3, this.state.security_answer_3);\n\n      if (res.msg == null) {\n        this.setState({ ...initState,\n          success: \"Security questions and answers successfully changed!\"\n        });\n      } else {\n        this.setState({\n          error: res.msg\n        });\n      }\n    };\n\n    this.changeForm = e => {\n      let propName = e.target.name;\n      let propValue = e.target.value;\n      let state = { ...this.state\n      };\n      state[propName] = propValue;\n      this.setState(state);\n    };\n  }\n\n  async componentDidMount() {\n    if (menuItems.length == 1) {\n      let securityQuestions = await getAllSecurityQuestions();\n      let list = securityQuestions.data;\n      menuItems = [];\n\n      for (let i = 0; i < list.length; i++) {\n        menuItems.push( /*#__PURE__*/React.createElement(MenuItem, {\n          key: list[i].question_id,\n          value: list[i].question_id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 32\n          }\n        }, list[i].question));\n      }\n\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    const classes = {\n      paper: {\n        marginTop: \"10px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      form: {\n        width: '100%',\n        marginTop: \"10px\"\n      },\n      submit: {\n        margin: \"10px\"\n      }\n    };\n    let error = this.state.error ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 40\n      }\n    }, this.state.error) : \"\";\n    let success = this.state.success ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 44\n      }\n    }, this.state.success) : \"\";\n    const isPatient = this.state.user_type === 'patient';\n    const isPhysician = this.state.user_type === 'physician';\n    return /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n      style: classes.form,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"sq1-user-type-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 33\n      }\n    }, \"Security Question 1\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"sq1-user-type-label\",\n      required: true,\n      fullWidth: true,\n      name: \"security_question_1\",\n      id: \"security_question_1\",\n      \"auto-complete\": \"sq1\",\n      value: this.state.security_question_1,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    }, menuItems)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"security_answer_1\",\n      label: \"Security Question 1 Answer\",\n      id: \"security_answer_1\",\n      autoComplete: \"current-sa1\",\n      value: this.state.security_answer_1,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"sq2-user-type-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 33\n      }\n    }, \"Security Question 2\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"sq2-user-type-label\",\n      required: true,\n      fullWidth: true,\n      name: \"security_question_2\",\n      id: \"security_question_2\",\n      \"auto-complete\": \"sq2\",\n      value: this.state.security_question_2,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 37\n      }\n    }, menuItems)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"security_answer_2\",\n      label: \"Security Question 2 Answer\",\n      id: \"security_answer_2\",\n      autoComplete: \"current-sa2\",\n      value: this.state.security_answer_2,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"sq3-user-type-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }\n    }, \"Security Question 3\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"sq3-user-type-label\",\n      required: true,\n      fullWidth: true,\n      name: \"security_question_3\",\n      id: \"security_question_3\",\n      \"auto-complete\": \"sq3\",\n      value: this.state.security_question_3,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 37\n      }\n    }, menuItems)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"security_answer_3\",\n      label: \"Security Question 3 Answer\",\n      id: \"security_answer_3\",\n      autoComplete: \"current-sa3\",\n      value: this.state.security_answer_3,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      style: classes.submit,\n      onClick: this.changeSecurityQuestions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }, \"Update Security Questions\")), error, success));\n  }\n\n}","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/auth/changeSecurityQuestions.js"],"names":["React","Avatar","Button","TextField","Link","Grid","Typography","Container","Select","MenuItem","Alert","updateSecurityQuestions","getAllSecurityQuestions","InputLabel","initState","username","security_question_1","security_answer_1","security_question_2","security_answer_2","security_question_3","security_answer_3","error","success","menuItems","changeSecurityQuestions","Component","state","e","preventDefault","props","location","setState","sa1IsValid","match","length","sa2IsValid","sa3IsValid","res","msg","changeForm","propName","target","name","propValue","value","componentDidMount","securityQuestions","list","data","i","push","question_id","question","forceUpdate","render","classes","paper","marginTop","display","flexDirection","alignItems","form","width","submit","margin","isPatient","user_type","isPhysician"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Alert from '@material-ui/lab/Alert';\nimport { updateSecurityQuestions, getAllSecurityQuestions } from './usersService';\n\nimport { InputLabel } from '@material-ui/core';\n\n\n\nconst initState = {\n    username: \"\",\n    security_question_1: \"\",\n    security_answer_1: \"\",\n    security_question_2: \"\",\n    security_answer_2: \"\",\n    security_question_3: \"\",\n    security_answer_3: \"\",\n    error: \"\",\n    success: \"\",\n}\n\nlet menuItems = [<MenuItem key={1}>Question 1</MenuItem>];\n\n\nexport default class changeSecurityQuestions extends React.Component {\n\n    state = {\n        ...initState\n    }\n\n    /**\n     * Called when the User clicks on the change security question button\n     * \n     * @param {*} e \n     * @author Sahee Thao\n     * @date 03/03/2021\n     */\n    changeSecurityQuestions = async (e) => {\n        e.preventDefault();\n        const username = this.props.location.state.username;\n\n\n        if (!this.state.security_question_1) {\n            this.setState({ error: 'Please select a security question 1'});\n            return;\n        }\n\n        if (!this.state.security_answer_1) {\n            this.setState({ error: 'Please provide a security answer 1'});\n            return;\n        }\n\n        let sa1IsValid = \n        this.state.security_answer_1.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n        this.state.security_answer_1.length >= 4; // is greater or equal to 6 (in length)\n\n        if (!sa1IsValid) {\n            this.setState({ error: \"Security answer 1 must be have 4 or more characters and must contain only numbers and letters!\" });\n            return;\n        }\n\n        if (!this.state.security_question_2) {\n            this.setState({ error: 'Please select a security question 2'});\n            return;\n        }\n\n        if (this.state.security_question_2 == this.state.security_question_1) {\n            this.setState({ error: 'Security question 2 has already been selected in security question 1! Please change security question 2.'});\n            return;\n        }\n\n        if (!this.state.security_answer_2) {\n            this.setState({ error: 'Please provide a security answer 2'});\n            return;\n        }\n\n        let sa2IsValid = \n        this.state.security_answer_2.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n        this.state.security_answer_2.length >= 4; // is greater or equal to 6 (in length)\n\n        if (!sa2IsValid) {\n            this.setState({ error: \"Security answer 2 must be have 4 or more characters and must contain only numbers and letters!\" });\n            return;\n        }\n\n        if (!this.state.security_question_3) {\n            this.setState({ error: 'Please select a security question 3'});\n            return;\n        }\n\n        if (this.state.security_question_3 == this.state.security_question_1) {\n            this.setState({ error: 'Security question 3 has already been selected in security question 1! Please change security question 3.'});\n            return;\n        }\n\n        if (this.state.security_question_3 == this.state.security_question_2) {\n            this.setState({ error: 'Security question 3 has already been selected in security question 2! Please change security question 3.'});\n            return;\n        }\n\n        if (!this.state.security_answer_3) {\n            this.setState({ error: 'Please provide a security answer 3'});\n            return;\n        }\n\n        let sa3IsValid = \n        this.state.security_answer_3.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n        this.state.security_answer_3.length >= 4; // is greater or equal to 6 (in length)\n\n        if (!sa3IsValid) {\n            this.setState({ error: \"Security answer 3 must be have 4 or more characters and must contain only numbers and letters!\" });\n            return;\n        }\n        // change questions and answers of user\n        let res = await updateSecurityQuestions(username, \n            this.state.security_question_1, this.state.security_answer_1,\n            this.state.security_question_2, this.state.security_answer_2,\n            this.state.security_question_3, this.state.security_answer_3);\n\n        if (res.msg == null) {\n            this.setState({ ...initState, success: \"Security questions and answers successfully changed!\" });\n        } else {\n            this.setState({error: res.msg});\n        }\n    }\n\n    changeForm = (e) => {\n        let propName = e.target.name;\n        let propValue = e.target.value;\n        let state = { ...this.state };\n        state[propName] = propValue;\n        this.setState(state);\n    }\n    async componentDidMount() {\n        if (menuItems.length == 1) {\n            let securityQuestions = await getAllSecurityQuestions();\n             let list = securityQuestions.data;\n\n            menuItems = [];\n            for (let i = 0; i < list.length; i++) {\n                menuItems.push(<MenuItem key={list[i].question_id} value={list[i].question_id}>{list[i].question}</MenuItem>);\n            }\n            this.forceUpdate();\n        }    \n    }\n    render() {\n        const classes = {\n            paper: {\n                marginTop: \"10px\",\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n            },\n            form: {\n                width: '100%',\n                marginTop: \"10px\"\n            },\n            submit: {\n                margin: \"10px\"\n            },\n        };\n        let error = this.state.error ? <Alert severity=\"error\">{this.state.error}</Alert> : \"\";\n        let success = this.state.success ? <Alert severity=\"success\">{this.state.success}</Alert> : \"\";\n\n        const isPatient = this.state.user_type === 'patient';\n        const isPhysician = this.state.user_type === 'physician';\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\" >\n                <div style={classes.paper}>\n                    <Avatar />\n                    <Typography component=\"h1\" variant=\"h5\">Register</Typography>\n                    <form style={classes.form} noValidate>\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n                                <InputLabel id='sq1-user-type-label'>Security Question 1</InputLabel>\n                                    <Select \n                                        labelId=\"sq1-user-type-label\"\n                                        required\n                                        fullWidth\n                                        name=\"security_question_1\"\n                                        id=\"security_question_1\"\n                                        auto-complete='sq1'\n                                        value={this.state.security_question_1}\n                                        onChange={this.changeForm}>\n                                            {menuItems}\n                                </Select>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"security_answer_1\"\n                                    label=\"Security Question 1 Answer\"\n                                    id=\"security_answer_1\"\n                                    autoComplete=\"current-sa1\"\n                                    value={this.state.security_answer_1}\n                                    onChange={this.changeForm}\n                                    />\n                            </Grid>\n                        </Grid>\n\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n                                <InputLabel id='sq2-user-type-label'>Security Question 2</InputLabel>\n                                    <Select \n                                        labelId=\"sq2-user-type-label\"\n                                        required\n                                        fullWidth\n                                        name=\"security_question_2\"\n                                        id=\"security_question_2\"\n                                        auto-complete='sq2'\n                                        value={this.state.security_question_2}\n                                        onChange={this.changeForm}>\n                                            {menuItems}\n                                </Select>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"security_answer_2\"\n                                    label=\"Security Question 2 Answer\"\n                                    id=\"security_answer_2\"\n                                    autoComplete=\"current-sa2\"\n                                    value={this.state.security_answer_2}\n                                    onChange={this.changeForm}\n                                    />\n                            </Grid>\n                        </Grid>\n\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n                                <InputLabel id='sq3-user-type-label'>Security Question 3</InputLabel>\n                                    <Select \n                                        labelId=\"sq3-user-type-label\"\n                                        required\n                                        fullWidth\n                                        name=\"security_question_3\"\n                                        id=\"security_question_3\"\n                                        auto-complete='sq3'\n                                        value={this.state.security_question_3}\n                                        onChange={this.changeForm}>\n                                            {menuItems}\n                                </Select>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"security_answer_3\"\n                                    label=\"Security Question 3 Answer\"\n                                    id=\"security_answer_3\"\n                                    autoComplete=\"current-sa3\"\n                                    value={this.state.security_answer_3}\n                                    onChange={this.changeForm}\n                                    />\n                            </Grid>\n                        </Grid>\n                        \n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={classes.submit}\n                            onClick={this.changeSecurityQuestions}>\n                            Update Security Questions\n                        </Button>\n                    </form>\n                    {error}\n                    {success}\n                </div>\n            </Container>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}