{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/prescriptionManager.js\";\nimport * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { getPrescriptions, patchPrescription, createPrescription, deletePrescription } from './prescriptionsService';\nimport { PrescriptionStatus } from '../models/prescription';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, children)));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default class PrescriptionManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      prescriptions: [],\n      tab: 0\n    };\n\n    this.handleChange = newValue => {\n      this.setState({\n        tab: newValue\n      });\n    };\n\n    this.getData = () => {\n      return getPrescriptions().then(prescriptions => {\n        this.setState({\n          prescriptions: prescriptions\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const tableRef = React.createRef();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      value: this.state.tab,\n      onChange: this.handleChange,\n      \"aria-label\": \"simple tabs example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n      label: \"Item One\"\n    }, a11yProps(0), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n      label: \"Item Two\"\n    }, a11yProps(1), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n      label: \"Item Three\"\n    }, a11yProps(2), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(TabPanel, {\n      value: this.state.tab,\n      index: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef,\n      options: {\n        sorting: true,\n        search: true,\n        paging: false\n      },\n      title: \"Prescriptions\",\n      columns: [{\n        title: 'Order date',\n        field: 'order_date'\n      }, {\n        title: 'Patient name',\n        render: p => p.patient_first_name + \" \" + p.patient_last_name\n      }, {\n        title: 'Prescription',\n        field: 'prescription'\n      }, {\n        title: 'Status',\n        render: p => PrescriptionStatus.GetTranslation(p.order_status)\n      }],\n      data: this.state.prescriptions,\n      actions: [{\n        icon: 'task_alt',\n        tooltip: 'Process',\n        onClick: (event, row) => {\n          const prescription_id = row.prescription_id;\n\n          switch (row.order_status) {\n            case PrescriptionStatus.Ready:\n              this.props.history.push(\"/verify-patient/\" + prescription_id);\n              break;\n\n            case PrescriptionStatus.Verified_Patient:\n              this.props.history.push(\"/verify-physician/\" + prescription_id);\n              break;\n\n            case PrescriptionStatus.Verified_Physician:\n              this.props.history.push(\"/fill-prescription/\" + prescription_id);\n              break;\n\n            case PrescriptionStatus.Filled:\n              this.props.history.push(\"/verify-insurance-request/\" + prescription_id);\n              break;\n\n            default:\n              console.log('unknown prescription status');\n          }\n        }\n      }, {\n        icon: 'file_copy',\n        tooltip: 'View Details',\n        onClick: (event, row) => {\n          const prescription_id = row.prescription_id;\n          this.props.history.push(\"/prescriptions/\" + prescription_id);\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(TabPanel, {\n      value: value,\n      index: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Item Two\"), /*#__PURE__*/React.createElement(TabPanel, {\n      value: value,\n      index: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"Item Three\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/prescriptionManager.js"],"names":["React","MaterialTable","getPrescriptions","patchPrescription","createPrescription","deletePrescription","PrescriptionStatus","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","PrescriptionManager","Component","state","prescriptions","tab","handleChange","newValue","setState","getData","then","componentDidMount","render","tableRef","createRef","sorting","search","paging","title","field","p","patient_first_name","patient_last_name","GetTranslation","order_status","icon","tooltip","onClick","event","row","prescription_id","Ready","history","push","Verified_Patient","Verified_Physician","Filled","console","log"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { getPrescriptions, patchPrescription, createPrescription, deletePrescription } from './prescriptionsService';\nimport { PrescriptionStatus } from '../models/prescription';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default class PrescriptionManager extends React.Component {\n    state = {\n        prescriptions: [],\n        tab: 0\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    handleChange = (newValue) => {\n        this.setState({ tab: newValue })\n    };\n\n    getData = () => {\n        return getPrescriptions()\n            .then(prescriptions => {\n                this.setState({ prescriptions: prescriptions })\n            })\n    }\n\n    render() {\n        const tableRef = React.createRef();\n        return (\n            <div>\n                <AppBar position=\"static\">\n                    <Tabs value={this.state.tab} onChange={this.handleChange} aria-label=\"simple tabs example\">\n                        <Tab label=\"Item One\" {...a11yProps(0)} />\n                        <Tab label=\"Item Two\" {...a11yProps(1)} />\n                        <Tab label=\"Item Three\" {...a11yProps(2)} />\n                    </Tabs>\n                </AppBar>\n                <TabPanel value={this.state.tab} index={0}>\n                    <MaterialTable\n                        tableRef={tableRef}\n                        options={{\n                            sorting: true,\n                            search: true,\n                            paging: false,\n                        }}\n                        title=\"Prescriptions\"\n                        columns={[\n                            { title: 'Order date', field: 'order_date' },\n                            { title: 'Patient name', render: p => (p.patient_first_name + \" \" + p.patient_last_name) },\n                            { title: 'Prescription', field: 'prescription' },\n                            { title: 'Status', render: p => (PrescriptionStatus.GetTranslation(p.order_status)) },\n                        ]}\n                        data={this.state.prescriptions}\n                        actions={[\n                            {\n                                icon: 'task_alt',\n                                tooltip: 'Process',\n                                onClick: (event, row) => {\n                                    const prescription_id = row.prescription_id;\n                                    switch (row.order_status) {\n                                        case PrescriptionStatus.Ready:\n                                            this.props.history.push(\"/verify-patient/\" + prescription_id);\n                                            break;\n                                        case PrescriptionStatus.Verified_Patient:\n                                            this.props.history.push(\"/verify-physician/\" + prescription_id);\n                                            break;\n                                        case PrescriptionStatus.Verified_Physician:\n                                            this.props.history.push(\"/fill-prescription/\" + prescription_id);\n                                            break;\n                                        case PrescriptionStatus.Filled:\n                                            this.props.history.push(\"/verify-insurance-request/\" + prescription_id);\n                                            break;\n                                        default:\n                                            console.log('unknown prescription status');\n                                    }\n                                }\n                            },\n                            {\n                                icon: 'file_copy',\n                                tooltip: 'View Details',\n                                onClick: (event, row) => {\n                                    const prescription_id = row.prescription_id;\n                                    this.props.history.push(\"/prescriptions/\" + prescription_id);\n                                }\n                            },\n                        ]}\n                    />\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    Item Two\n</TabPanel>\n                <TabPanel value={value} index={2}>\n                    Item Three\n</TabPanel>\n            </div>\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}