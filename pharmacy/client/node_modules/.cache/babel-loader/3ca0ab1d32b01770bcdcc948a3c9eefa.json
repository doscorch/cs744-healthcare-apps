{"ast":null,"code":"var jQueryClient = require('./jquery');\n\nvar SuperagentClient = require('./superagent');\n\nvar RequestClient = require('./request');\n\nvar FetchClient = require('./fetch');\n\nvar AxiosClient = require('./axios');\n\nvar AngularClient = require('./angular');\n\nvar Base = require('./base');\n\nvar AngularHttpClient = require('./angular-http-client');\n\nvar transports = {\n  jquery: jQueryClient,\n  superagent: SuperagentClient,\n  request: RequestClient,\n  fetch: FetchClient,\n  axios: AxiosClient,\n  angular: AngularClient,\n  angularHttpClient: AngularHttpClient\n};\n\nfunction restClient() {\n  var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    Base: Base\n  };\n  Object.keys(transports).forEach(function (key) {\n    result[key] = function (connection) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var Service = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : transports[key];\n\n      if (!connection) {\n        throw new Error(\"\".concat(key, \" has to be provided to feathers-rest\"));\n      }\n\n      if (typeof options === 'function') {\n        Service = options;\n        options = {};\n      }\n\n      var defaultService = function defaultService(name) {\n        return new Service({\n          base: base,\n          name: name,\n          connection: connection,\n          options: options\n        });\n      };\n\n      var initialize = function initialize(app) {\n        if (typeof app.defaultService === 'function') {\n          throw new Error('Only one default client provider can be configured');\n        }\n\n        app.rest = connection;\n        app.defaultService = defaultService;\n      };\n\n      initialize.Service = Service;\n      initialize.service = defaultService;\n      return initialize;\n    };\n  });\n  return result;\n}\n\nmodule.exports = Object.assign(restClient, {\n  SuperagentClient: SuperagentClient,\n  FetchClient: FetchClient,\n  jQueryClient: jQueryClient,\n  RequestClient: RequestClient,\n  AxiosClient: AxiosClient,\n  AngularClient: AngularClient,\n  AngularHttpClient: AngularHttpClient\n});\nmodule.exports.default = restClient;","map":{"version":3,"sources":["/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/@feathersjs/rest-client/lib/index.js"],"names":["jQueryClient","require","SuperagentClient","RequestClient","FetchClient","AxiosClient","AngularClient","Base","AngularHttpClient","transports","jquery","superagent","request","fetch","axios","angular","angularHttpClient","restClient","base","result","Object","keys","forEach","key","connection","options","Service","Error","defaultService","name","initialize","app","rest","service","module","exports","assign","default"],"mappings":"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","sourcesContent":["const jQueryClient = require('./jquery');\nconst SuperagentClient = require('./superagent');\nconst RequestClient = require('./request');\nconst FetchClient = require('./fetch');\nconst AxiosClient = require('./axios');\nconst AngularClient = require('./angular');\nconst Base = require('./base');\nconst AngularHttpClient = require('./angular-http-client');\n\nconst transports = {\n  jquery: jQueryClient,\n  superagent: SuperagentClient,\n  request: RequestClient,\n  fetch: FetchClient,\n  axios: AxiosClient,\n  angular: AngularClient,\n  angularHttpClient: AngularHttpClient\n};\n\nfunction restClient (base = '') {\n  const result = { Base };\n\n  Object.keys(transports).forEach(key => {\n    result[key] = function (connection, options = {}, Service = transports[key]) {\n      if (!connection) {\n        throw new Error(`${key} has to be provided to feathers-rest`);\n      }\n\n      if (typeof options === 'function') {\n        Service = options;\n        options = {};\n      }\n\n      const defaultService = function (name) {\n        return new Service({ base, name, connection, options });\n      };\n\n      const initialize = function (app) {\n        if (typeof app.defaultService === 'function') {\n          throw new Error('Only one default client provider can be configured');\n        }\n\n        app.rest = connection;\n        app.defaultService = defaultService;\n      };\n\n      initialize.Service = Service;\n      initialize.service = defaultService;\n\n      return initialize;\n    };\n  });\n\n  return result;\n}\n\nmodule.exports = Object.assign(restClient, { SuperagentClient, FetchClient, jQueryClient, RequestClient, AxiosClient, AngularClient, AngularHttpClient });\nmodule.exports.default = restClient;\n"]},"metadata":{},"sourceType":"script"}