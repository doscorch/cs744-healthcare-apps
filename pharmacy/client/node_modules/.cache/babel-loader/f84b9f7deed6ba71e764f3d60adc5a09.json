{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/prescriptionManager.js\";\nimport * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { getPrescriptions, patchPrescription, createPrescription, deletePrescription } from './prescriptionsService';\nimport { PrescriptionStatus } from '../models/prescription';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Container } from 'react-bootstrap';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, children)));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nexport default class PrescriptionManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      taskPrescriptions: [],\n      pendingPrescriptions: [],\n      completePrescriptions: [],\n      allPrescriptions: [],\n      tab: 0\n    };\n\n    this.handleChange = (event, newValue) => {\n      this.setState({\n        tab: newValue\n      });\n    };\n\n    this.getData = () => {\n      return getPrescriptions().then(prescriptions => {\n        prescriptions = prescriptions.map(p => {\n          return { ...p,\n            name: p.patient_first_name + ' ' + p.patient_last_name,\n            order_date: new Date(new Date(p.order_date).toDateString())\n          };\n        });\n        const taskPrescriptions = prescriptions.filter(p => p.order_status == PrescriptionStatus.Ready || p.order_status == PrescriptionStatus.Verified_Patient || p.order_status == PrescriptionStatus.Verified_Physician || p.order_status == PrescriptionStatus.Verified_Physician || p.order_status == PrescriptionStatus.Filled);\n        const pendingPrescriptions = prescriptions.filter(p => p.order_status == PrescriptionStatus.Pending_Insurance);\n        const completePrescriptions = prescriptions.filter(p => p.order_status == PrescriptionStatus.Processed);\n        this.setState({\n          taskPrescriptions,\n          pendingPrescriptions,\n          completePrescriptions,\n          allPrescriptions: prescriptions\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const tableRef1 = React.createRef();\n    const tableRef2 = React.createRef();\n    const tableRef3 = React.createRef();\n    const tableRef4 = React.createRef();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      value: this.state.tab,\n      onChange: this.handleChange,\n      \"aria-label\": \"prescription menu\",\n      style: {\n        backgroundColor: \"lightslategrey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n      label: \"Tasks\"\n    }, a11yProps(0), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n      label: \"Pending\"\n    }, a11yProps(1), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n      label: \"Processed\"\n    }, a11yProps(2), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n      label: \"All\"\n    }, a11yProps(3), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"card card-body bg-light\",\n      style: {\n        padding: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TabPanel, {\n      value: this.state.tab,\n      index: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef1,\n      options: {\n        sorting: true,\n        search: true,\n        paging: true\n      },\n      title: \"Prescriptions\",\n      columns: [{\n        title: 'Order date',\n        field: 'order_date'\n      }, {\n        title: 'Patient name',\n        field: 'name'\n      }, {\n        title: 'Prescription',\n        field: 'prescription'\n      }, {\n        title: 'Status',\n        render: p => PrescriptionStatus.GetTranslation(p.order_status)\n      }],\n      data: this.state.taskPrescriptions,\n      actions: [{\n        icon: 'task_alt',\n        tooltip: 'Process',\n        onClick: (event, row) => {\n          const prescription_id = row.prescription_id;\n\n          switch (row.order_status) {\n            case PrescriptionStatus.Ready:\n              this.props.history.push(\"/verify-patient/\" + prescription_id);\n              break;\n\n            case PrescriptionStatus.Verified_Patient:\n              this.props.history.push(\"/verify-physician/\" + prescription_id);\n              break;\n\n            case PrescriptionStatus.Verified_Physician:\n              this.props.history.push(\"/fill-prescription/\" + prescription_id);\n              break;\n\n            case PrescriptionStatus.Filled:\n              this.props.history.push(\"/verify-insurance-request/\" + prescription_id);\n              break;\n\n            default:\n              console.log('unknown prescription status');\n          }\n        }\n      }, {\n        icon: 'info',\n        tooltip: 'View Details',\n        onClick: (event, row) => {\n          const prescription_id = row.prescription_id;\n          this.props.history.push(\"/prescription-details/\" + prescription_id);\n        }\n      } // {\n      //     icon: 'file_copy',\n      //     tooltip: 'View Prescription',\n      //     onClick: (event, row) => {\n      //         const prescription_id = row.prescription_id;\n      //         this.props.history.push(\"/prescriptions/\" + prescription_id);\n      //     }\n      // },\n      ],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(TabPanel, {\n      value: this.state.tab,\n      index: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef2,\n      options: {\n        sorting: true,\n        search: true,\n        paging: true\n      },\n      title: \"Prescriptions\",\n      columns: [{\n        title: 'Order date',\n        field: 'order_date'\n      }, {\n        title: 'Patient name',\n        field: 'name'\n      }, {\n        title: 'Prescription',\n        field: 'prescription'\n      }, {\n        title: 'Status',\n        render: p => PrescriptionStatus.GetTranslation(p.order_status)\n      }],\n      data: this.state.pendingPrescriptions,\n      actions: [{\n        icon: 'info',\n        tooltip: 'View Details',\n        onClick: (event, row) => {\n          const prescription_id = row.prescription_id;\n          this.props.history.push(\"/prescription-details/\" + prescription_id);\n        }\n      } // {\n      //     icon: 'file_copy',\n      //     tooltip: 'View Prescription',\n      //     onClick: (event, row) => {\n      //         const prescription_id = row.prescription_id;\n      //         this.props.history.push(\"/prescriptions/\" + prescription_id);\n      //     }\n      // },\n      ],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(TabPanel, {\n      value: this.state.tab,\n      index: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef3,\n      options: {\n        sorting: true,\n        search: true,\n        paging: true\n      },\n      title: \"Prescriptions\",\n      columns: [{\n        title: 'Order date',\n        field: 'order_date'\n      }, {\n        title: 'Patient name',\n        field: 'name'\n      }, {\n        title: 'Prescription',\n        field: 'prescription'\n      }, {\n        title: 'Status',\n        render: p => PrescriptionStatus.GetTranslation(p.order_status)\n      }],\n      data: this.state.completePrescriptions,\n      actions: [{\n        icon: 'receipt',\n        tooltip: 'View Bill',\n        onClick: (event, row) => {\n          const prescription_id = row.prescription_id;\n          this.props.history.push(\"/prescription-bill/\" + prescription_id);\n        }\n      }, {\n        icon: 'info',\n        tooltip: 'View Details',\n        onClick: (event, row) => {\n          const prescription_id = row.prescription_id;\n          this.props.history.push(\"/prescription-details/\" + prescription_id);\n        }\n      } // {\n      //     icon: 'file_copy',\n      //     tooltip: 'View Prescription',\n      //     onClick: (event, row) => {\n      //         const prescription_id = row.prescription_id;\n      //         this.props.history.push(\"/prescriptions/\" + prescription_id);\n      //     }\n      // },\n      ],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(TabPanel, {\n      value: this.state.tab,\n      index: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef4,\n      options: {\n        sorting: true,\n        search: true,\n        paging: true\n      },\n      title: \"Prescriptions\",\n      columns: [{\n        title: 'Order date',\n        field: 'order_date'\n      }, {\n        title: 'Patient name',\n        field: 'name'\n      }, {\n        title: 'Prescription',\n        field: 'prescription'\n      }, {\n        title: 'Status',\n        render: p => PrescriptionStatus.GetTranslation(p.order_status)\n      }],\n      data: this.state.allPrescriptions,\n      actions: [{\n        icon: 'info',\n        tooltip: 'View Details',\n        onClick: (event, row) => {\n          const prescription_id = row.prescription_id;\n          this.props.history.push(\"/prescription-details/\" + prescription_id);\n        }\n      } // {\n      //     icon: 'file_copy',\n      //     tooltip: 'View Prescription',\n      //     onClick: (event, row) => {\n      //         const prescription_id = row.prescription_id;\n      //         this.props.history.push(\"/prescriptions/\" + prescription_id);\n      //     }\n      // },\n      ],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/prescriptionManager.js"],"names":["React","MaterialTable","getPrescriptions","patchPrescription","createPrescription","deletePrescription","PrescriptionStatus","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","Container","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","PrescriptionManager","Component","state","taskPrescriptions","pendingPrescriptions","completePrescriptions","allPrescriptions","tab","handleChange","event","newValue","setState","getData","then","prescriptions","map","p","name","patient_first_name","patient_last_name","order_date","Date","toDateString","filter","order_status","Ready","Verified_Patient","Verified_Physician","Filled","Pending_Insurance","Processed","componentDidMount","render","tableRef1","createRef","tableRef2","tableRef3","tableRef4","backgroundColor","padding","sorting","search","paging","title","field","GetTranslation","icon","tooltip","onClick","row","prescription_id","history","push","console","log"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { getPrescriptions, patchPrescription, createPrescription, deletePrescription } from './prescriptionsService';\nimport { PrescriptionStatus } from '../models/prescription';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Container } from 'react-bootstrap';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport default class PrescriptionManager extends React.Component {\n    state = {\n        taskPrescriptions: [],\n        pendingPrescriptions: [],\n        completePrescriptions: [],\n        allPrescriptions: [],\n\n        tab: 0\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    handleChange = (event, newValue) => {\n        this.setState({ tab: newValue })\n    };\n\n    getData = () => {\n        return getPrescriptions()\n            .then(prescriptions => {\n                prescriptions = prescriptions.map(p => { return { ...p, name: p.patient_first_name + ' ' + p.patient_last_name, order_date: new Date(new Date(p.order_date).toDateString()) } })\n                const taskPrescriptions = prescriptions.filter(p => p.order_status == PrescriptionStatus.Ready || p.order_status == PrescriptionStatus.Verified_Patient || p.order_status == PrescriptionStatus.Verified_Physician || p.order_status == PrescriptionStatus.Verified_Physician || p.order_status == PrescriptionStatus.Filled);\n                const pendingPrescriptions = prescriptions.filter(p => p.order_status == PrescriptionStatus.Pending_Insurance);\n                const completePrescriptions = prescriptions.filter(p => p.order_status == PrescriptionStatus.Processed);\n                this.setState({ taskPrescriptions, pendingPrescriptions, completePrescriptions, allPrescriptions: prescriptions })\n            })\n    }\n\n    render() {\n        const tableRef1 = React.createRef();\n        const tableRef2 = React.createRef();\n        const tableRef3 = React.createRef();\n        const tableRef4 = React.createRef();\n        return (\n            <div>\n                <AppBar position=\"static\">\n                    <Tabs value={this.state.tab} onChange={this.handleChange} aria-label=\"prescription menu\" style={{ backgroundColor: \"lightslategrey\" }}>\n                        <Tab label=\"Tasks\" {...a11yProps(0)} />\n                        <Tab label=\"Pending\" {...a11yProps(1)} />\n                        <Tab label=\"Processed\" {...a11yProps(2)} />\n                        <Tab label=\"All\" {...a11yProps(3)} />\n                    </Tabs>\n                </AppBar>\n                <Container fluid className=\"card card-body bg-light\" style={{ padding: \"0\" }}>\n                    <TabPanel value={this.state.tab} index={0}>\n                        <MaterialTable\n                            tableRef={tableRef1}\n                            options={{\n                                sorting: true,\n                                search: true,\n                                paging: true,\n                            }}\n                            title=\"Prescriptions\"\n                            columns={[\n                                { title: 'Order date', field: 'order_date' },\n                                { title: 'Patient name', field: 'name' },\n                                { title: 'Prescription', field: 'prescription' },\n                                { title: 'Status', render: p => (PrescriptionStatus.GetTranslation(p.order_status)) },\n                            ]}\n                            data={this.state.taskPrescriptions}\n                            actions={[\n                                {\n                                    icon: 'task_alt',\n                                    tooltip: 'Process',\n                                    onClick: (event, row) => {\n                                        const prescription_id = row.prescription_id;\n                                        switch (row.order_status) {\n                                            case PrescriptionStatus.Ready:\n                                                this.props.history.push(\"/verify-patient/\" + prescription_id);\n                                                break;\n                                            case PrescriptionStatus.Verified_Patient:\n                                                this.props.history.push(\"/verify-physician/\" + prescription_id);\n                                                break;\n                                            case PrescriptionStatus.Verified_Physician:\n                                                this.props.history.push(\"/fill-prescription/\" + prescription_id);\n                                                break;\n                                            case PrescriptionStatus.Filled:\n                                                this.props.history.push(\"/verify-insurance-request/\" + prescription_id);\n                                                break;\n                                            default:\n                                                console.log('unknown prescription status');\n                                        }\n                                    }\n                                },\n                                {\n                                    icon: 'info',\n                                    tooltip: 'View Details',\n                                    onClick: (event, row) => {\n                                        const prescription_id = row.prescription_id;\n                                        this.props.history.push(\"/prescription-details/\" + prescription_id);\n                                    }\n                                },\n                                // {\n                                //     icon: 'file_copy',\n                                //     tooltip: 'View Prescription',\n                                //     onClick: (event, row) => {\n                                //         const prescription_id = row.prescription_id;\n                                //         this.props.history.push(\"/prescriptions/\" + prescription_id);\n                                //     }\n                                // },\n                            ]}\n                        />\n                    </TabPanel>\n                    <TabPanel value={this.state.tab} index={1}>\n                        <MaterialTable\n                            tableRef={tableRef2}\n                            options={{\n                                sorting: true,\n                                search: true,\n                                paging: true,\n                            }}\n                            title=\"Prescriptions\"\n                            columns={[\n                                { title: 'Order date', field: 'order_date' },\n                                { title: 'Patient name', field: 'name' },\n                                { title: 'Prescription', field: 'prescription' },\n                                { title: 'Status', render: p => (PrescriptionStatus.GetTranslation(p.order_status)) },\n                            ]}\n                            data={this.state.pendingPrescriptions}\n                            actions={[\n                                {\n                                    icon: 'info',\n                                    tooltip: 'View Details',\n                                    onClick: (event, row) => {\n                                        const prescription_id = row.prescription_id;\n                                        this.props.history.push(\"/prescription-details/\" + prescription_id);\n                                    }\n                                },\n                                // {\n                                //     icon: 'file_copy',\n                                //     tooltip: 'View Prescription',\n                                //     onClick: (event, row) => {\n                                //         const prescription_id = row.prescription_id;\n                                //         this.props.history.push(\"/prescriptions/\" + prescription_id);\n                                //     }\n                                // },\n                            ]}\n                        />\n                    </TabPanel>\n                    <TabPanel value={this.state.tab} index={2}>\n                        <MaterialTable\n                            tableRef={tableRef3}\n                            options={{\n                                sorting: true,\n                                search: true,\n                                paging: true,\n                            }}\n                            title=\"Prescriptions\"\n                            columns={[\n                                { title: 'Order date', field: 'order_date' },\n                                { title: 'Patient name', field: 'name' },\n                                { title: 'Prescription', field: 'prescription' },\n                                { title: 'Status', render: p => (PrescriptionStatus.GetTranslation(p.order_status)) },\n                            ]}\n                            data={this.state.completePrescriptions}\n                            actions={[\n                                {\n                                    icon: 'receipt',\n                                    tooltip: 'View Bill',\n                                    onClick: (event, row) => {\n                                        const prescription_id = row.prescription_id;\n                                        this.props.history.push(\"/prescription-bill/\" + prescription_id);\n                                    }\n                                },\n                                {\n                                    icon: 'info',\n                                    tooltip: 'View Details',\n                                    onClick: (event, row) => {\n                                        const prescription_id = row.prescription_id;\n                                        this.props.history.push(\"/prescription-details/\" + prescription_id);\n                                    }\n                                },\n                                // {\n                                //     icon: 'file_copy',\n                                //     tooltip: 'View Prescription',\n                                //     onClick: (event, row) => {\n                                //         const prescription_id = row.prescription_id;\n                                //         this.props.history.push(\"/prescriptions/\" + prescription_id);\n                                //     }\n                                // },\n                            ]}\n                        />\n                    </TabPanel>\n                    <TabPanel value={this.state.tab} index={3}>\n                        <MaterialTable\n                            tableRef={tableRef4}\n                            options={{\n                                sorting: true,\n                                search: true,\n                                paging: true,\n                            }}\n                            title=\"Prescriptions\"\n                            columns={[\n                                { title: 'Order date', field: 'order_date' },\n                                { title: 'Patient name', field: 'name' },\n                                { title: 'Prescription', field: 'prescription' },\n                                { title: 'Status', render: p => (PrescriptionStatus.GetTranslation(p.order_status)) },\n                            ]}\n                            data={this.state.allPrescriptions}\n                            actions={[\n                                {\n                                    icon: 'info',\n                                    tooltip: 'View Details',\n                                    onClick: (event, row) => {\n                                        const prescription_id = row.prescription_id;\n                                        this.props.history.push(\"/prescription-details/\" + prescription_id);\n                                    }\n                                },\n                                // {\n                                //     icon: 'file_copy',\n                                //     tooltip: 'View Prescription',\n                                //     onClick: (event, row) => {\n                                //         const prescription_id = row.prescription_id;\n                                //         this.props.history.push(\"/prescriptions/\" + prescription_id);\n                                //     }\n                                // },\n                            ]}\n                        />\n                    </TabPanel>\n                </Container>\n            </div >\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}