{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/patients/patientManager.js\";\nimport * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { getPatients, patchPatient } from './patientsService';\nexport default class PatientManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      patients: []\n    };\n\n    this.getData = () => {\n      return getPatients().then(patients => {\n        this.setState({\n          patients: patients\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const tableRef = React.createRef();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef,\n      options: {\n        sorting: true,\n        search: true,\n        paging: false,\n        editable: true\n      },\n      title: \"Patients\",\n      columns: [{\n        title: 'First name',\n        field: 'first_name',\n        validate: u => u.first_name == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Last name',\n        field: 'last_name',\n        validate: u => u.last_name == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Date of birth',\n        field: 'birth_date',\n        validate: u => u.birth_date == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Address',\n        field: 'address',\n        validate: u => u.address == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'City',\n        field: 'city',\n        validate: u => u.city == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Zipcode',\n        field: 'zipcode',\n        validate: u => u.zipcode == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }],\n      data: this.state.patients,\n      editable: {\n        onRowUpdate: (newData, oldData) => {\n          return patchPatient(newData.patient_id, newData).then(_ => this.getData());\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/patients/patientManager.js"],"names":["React","MaterialTable","getPatients","patchPatient","PatientManager","Component","state","patients","getData","then","setState","componentDidMount","render","tableRef","createRef","sorting","search","paging","editable","title","field","validate","u","first_name","isValid","helperText","last_name","birth_date","address","city","zipcode","onRowUpdate","newData","oldData","patient_id","_"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { getPatients, patchPatient } from './patientsService';\n\nexport default class PatientManager extends React.Component {\n    state = {\n        patients: []\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData = () => {\n        return getPatients()\n            .then(patients => {\n                this.setState({ patients: patients })\n            })\n    }\n\n    render() {\n        const tableRef = React.createRef();\n        return (\n            <div>\n                <MaterialTable\n                    tableRef={tableRef}\n                    options={{\n                        sorting: true,\n                        search: true,\n                        paging: false,\n                        editable: true,\n                    }}\n                    title=\"Patients\"\n                    columns={[\n                        { title: 'First name', field: 'first_name', validate: u => u.first_name == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                        { title: 'Last name', field: 'last_name', validate: u => u.last_name == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                        { title: 'Date of birth', field: 'birth_date', validate: u => u.birth_date == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                        { title: 'Address', field: 'address', validate: u => u.address == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                        { title: 'City', field: 'city', validate: u => u.city == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                        { title: 'Zipcode', field: 'zipcode', validate: u => u.zipcode == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                    ]}\n                    data={this.state.patients}\n                    editable={{\n                        onRowUpdate: (newData, oldData) => {\n                            return patchPatient(newData.patient_id, newData).then(_ => this.getData())\n                        },\n                    }}\n                />\n            </div>\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}