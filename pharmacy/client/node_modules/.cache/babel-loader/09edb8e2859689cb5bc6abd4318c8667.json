{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/prescriptionManager.js\";\nimport * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { getPrescriptions, patchPrescription, createPrescription, deletePrescription } from './prescriptionsService';\nexport default class PrescriptionManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      prescriptions: []\n    };\n\n    this.getData = () => {\n      return getPrescriptions().then(prescriptions => {\n        this.setState({\n          prescriptions: prescriptions\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const tableRef = React.createRef();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef,\n      options: {\n        sorting: true,\n        search: true,\n        paging: false\n      },\n      title: \"Prescriptions\",\n      columns: [// { title: 'Id', field: '_id' },\n      {\n        title: 'First name',\n        field: 'first_name',\n        validate: u => u.first_name == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Last name',\n        field: 'last_name',\n        validate: u => u.last_name == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Institution',\n        field: 'institution',\n        validate: u => u.institution == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'License',\n        field: 'license',\n        validate: u => u.license == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }],\n      data: this.state.prescriptions,\n      editable: {\n        onRowUpdate: (newData, oldData) => {\n          return patchPrescription(newData.prescription_id, newData).then(_ => this.getData());\n        },\n        onRowAdd: newData => {\n          return createPrescription(newData).then(_ => this.getData());\n        },\n        onRowDelete: oldData => {\n          return deletePrescription(oldData.prescription_id).then(_ => this.getData());\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/prescriptionManager.js"],"names":["React","MaterialTable","getPrescriptions","patchPrescription","createPrescription","deletePrescription","PrescriptionManager","Component","state","prescriptions","getData","then","setState","componentDidMount","render","tableRef","createRef","sorting","search","paging","title","field","validate","u","first_name","isValid","helperText","last_name","institution","license","onRowUpdate","newData","oldData","prescription_id","_","onRowAdd","onRowDelete"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { getPrescriptions, patchPrescription, createPrescription, deletePrescription } from './prescriptionsService';\n\nexport default class PrescriptionManager extends React.Component {\n    state = {\n        prescriptions: []\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData = () => {\n        return getPrescriptions()\n            .then(prescriptions => {\n                this.setState({ prescriptions: prescriptions })\n            })\n    }\n\n    render() {\n        const tableRef = React.createRef();\n        return (\n            <div>\n                <MaterialTable\n                    tableRef={tableRef}\n                    options={{\n                        sorting: true,\n                        search: true,\n                        paging: false,\n                    }}\n                    title=\"Prescriptions\"\n                    columns={[\n                        // { title: 'Id', field: '_id' },\n                        { title: 'First name', field: 'first_name', validate: u => u.first_name == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                        { title: 'Last name', field: 'last_name', validate: u => u.last_name == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                        { title: 'Institution', field: 'institution', validate: u => u.institution == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                        { title: 'License', field: 'license', validate: u => u.license == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                    ]}\n                    data={this.state.prescriptions}\n                    editable={{\n                        onRowUpdate: (newData, oldData) => {\n                            return patchPrescription(newData.prescription_id, newData).then(_ => this.getData())\n                        },\n                        onRowAdd: newData => {\n                            return createPrescription(newData).then(_ => this.getData())\n                        },\n                        onRowDelete: oldData => {\n                            return deletePrescription(oldData.prescription_id).then(_ => this.getData())\n                        }\n                    }}\n                />\n            </div>\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}