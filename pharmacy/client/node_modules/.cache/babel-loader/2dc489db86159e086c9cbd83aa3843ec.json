{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/orders/ordersManager.js\";\nimport * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { getOrders, patchOrder, createOrder, deleteOrder } from '../orders/ordersService';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Container } from 'react-bootstrap';\nimport { getPrescriptionsByOrderId } from '../prescriptions/prescriptionsService';\nimport { PrescriptionStatus } from '../models/prescription';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, children)));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nexport default class OrderManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      taskOrders: [],\n      pendingOrders: [],\n      completeOrders: [],\n      allOrders: [],\n      tab: 0\n    };\n\n    this.handleChange = (event, newValue) => {\n      this.setState({\n        tab: newValue\n      });\n    };\n\n    this.getData = () => {\n      return getOrders().then(orders => {\n        const pendingOrders = [];\n        const completeOrders = [];\n        const allOrders = [];\n        orders.forEach(o => {\n          getPrescriptionsByOrderId(o.order_id).then(prescriptions => {\n            if (prescriptions.every(p => p.order_status == PrescriptionStatus.Processed)) {\n              completeOrders.push(o);\n            } else {\n              pendingOrders.push(o);\n            }\n\n            allOrders.push(o);\n            this.setState({\n              completeOrders,\n              pendingOrders,\n              allOrders\n            });\n          });\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const tableRef1 = React.createRef();\n    const tableRef2 = React.createRef();\n    const tableRef3 = React.createRef();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      value: this.state.tab,\n      onChange: this.handleChange,\n      \"aria-label\": \"order menu\",\n      style: {\n        backgroundColor: \"lightslategrey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n      label: \"Pending\"\n    }, a11yProps(0), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n      label: \"Processed\"\n    }, a11yProps(1), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n      label: \"All\"\n    }, a11yProps(2), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"card card-body bg-light\",\n      style: {\n        padding: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TabPanel, {\n      value: this.state.tab,\n      index: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef1,\n      options: {\n        sorting: true,\n        search: true,\n        paging: true\n      },\n      title: \"Orders\",\n      columns: [{\n        title: 'Order date',\n        field: 'order_date'\n      }, {\n        title: 'Patient First Name',\n        field: 'patient_first_name'\n      }, {\n        title: 'Patient Last Name',\n        field: 'patient_last_name'\n      }],\n      data: this.state.pendingOrders,\n      actions: [{\n        icon: 'add',\n        tooltip: 'Add Over the Counter Medicine',\n        onClick: (event, row) => {\n          const order_id = row.order_id;\n          this.props.history.push(\"/order-add/\" + order_id);\n        }\n      }, {\n        icon: 'info',\n        tooltip: 'View Details',\n        onClick: (event, row) => {\n          const order_id = row.order_id;\n          this.props.history.push(\"/order-details/\" + order_id);\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(TabPanel, {\n      value: this.state.tab,\n      index: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef2,\n      options: {\n        sorting: true,\n        search: true,\n        paging: true\n      },\n      title: \"Orders\",\n      columns: [{\n        title: 'Order date',\n        field: 'order_date'\n      }, {\n        title: 'Patient First Name',\n        field: 'patient_first_name'\n      }, {\n        title: 'Patient Last Name',\n        field: 'patient_last_name'\n      }],\n      data: this.state.completeOrders,\n      actions: [{\n        icon: 'add',\n        tooltip: 'Add Over the Counter Medicine',\n        onClick: (event, row) => {\n          const order_id = row.order_id;\n          this.props.history.push(\"/order-add/\" + order_id);\n        }\n      }, {\n        icon: 'receipt',\n        tooltip: 'View Bill',\n        onClick: (event, row) => {\n          const order_id = row.order_id;\n          this.props.history.push(\"/order-bill/\" + order_id);\n        }\n      }, {\n        icon: 'info',\n        tooltip: 'View Details',\n        onClick: (event, row) => {\n          const order_id = row.order_id;\n          this.props.history.push(\"/order-details/\" + order_id);\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(TabPanel, {\n      value: this.state.tab,\n      index: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef3,\n      options: {\n        sorting: true,\n        search: true,\n        paging: true\n      },\n      title: \"Orders\",\n      columns: [{\n        title: 'Order date',\n        field: 'order_date',\n        type: \"date\",\n        validate: u => u.order_date == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Patient First Name',\n        field: 'patient_first_name',\n        validate: u => u.patient_first_name == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Patient Last Name',\n        field: 'patient_last_name',\n        validate: u => u.patient_last_name == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }],\n      data: this.state.allOrders,\n      actions: [{\n        icon: 'add',\n        tooltip: 'Add Over the Counter Medicine',\n        onClick: (event, row) => {\n          const order_id = row.order_id;\n          this.props.history.push(\"/order-add/\" + order_id);\n        }\n      }, {\n        icon: 'info',\n        tooltip: 'View Details',\n        onClick: (event, row) => {\n          const order_id = row.order_id;\n          this.props.history.push(\"/order-details/\" + order_id);\n        }\n      }],\n      editable: {\n        onRowAdd: newData => {\n          return createOrder({ ...newData,\n            order_id: -1\n          }).then(_ => this.getData());\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/orders/ordersManager.js"],"names":["React","MaterialTable","getOrders","patchOrder","createOrder","deleteOrder","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","Container","getPrescriptionsByOrderId","PrescriptionStatus","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","OrderManager","Component","state","taskOrders","pendingOrders","completeOrders","allOrders","tab","handleChange","event","newValue","setState","getData","then","orders","forEach","o","order_id","prescriptions","every","p","order_status","Processed","push","componentDidMount","render","tableRef1","createRef","tableRef2","tableRef3","backgroundColor","padding","sorting","search","paging","title","field","icon","tooltip","onClick","row","history","type","validate","u","order_date","isValid","helperText","patient_first_name","patient_last_name","onRowAdd","newData","_"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { getOrders, patchOrder, createOrder, deleteOrder } from '../orders/ordersService';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Container } from 'react-bootstrap';\nimport { getPrescriptionsByOrderId } from '../prescriptions/prescriptionsService';\nimport { PrescriptionStatus } from '../models/prescription';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport default class OrderManager extends React.Component {\n    state = {\n        taskOrders: [],\n        pendingOrders: [],\n        completeOrders: [],\n        allOrders: [],\n\n        tab: 0\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    handleChange = (event, newValue) => {\n        this.setState({ tab: newValue })\n    };\n\n    getData = () => {\n        return getOrders()\n            .then(orders => {\n                const pendingOrders = [];\n                const completeOrders = [];\n                const allOrders = [];\n                orders.forEach(o => {\n                    getPrescriptionsByOrderId(o.order_id).then((prescriptions) => {\n                        if (prescriptions.every(p => p.order_status == PrescriptionStatus.Processed)) {\n                            completeOrders.push(o);\n                        }\n                        else {\n                            pendingOrders.push(o);\n                        }\n                        allOrders.push(o);\n                        this.setState({ completeOrders, pendingOrders, allOrders });\n                    })\n                })\n            })\n    }\n\n\n    render() {\n        const tableRef1 = React.createRef();\n        const tableRef2 = React.createRef();\n        const tableRef3 = React.createRef();\n        return (\n            <div>\n                <AppBar position=\"static\">\n                    <Tabs value={this.state.tab} onChange={this.handleChange} aria-label=\"order menu\" style={{ backgroundColor: \"lightslategrey\" }}>\n                        <Tab label=\"Pending\" {...a11yProps(0)} />\n                        <Tab label=\"Processed\" {...a11yProps(1)} />\n                        <Tab label=\"All\" {...a11yProps(2)} />\n                    </Tabs>\n                </AppBar>\n                <Container fluid className=\"card card-body bg-light\" style={{ padding: \"0\" }}>\n                    <TabPanel value={this.state.tab} index={0}>\n                        <MaterialTable\n                            tableRef={tableRef1}\n                            options={{\n                                sorting: true,\n                                search: true,\n                                paging: true,\n                            }}\n                            title=\"Orders\"\n                            columns={[\n                                { title: 'Order date', field: 'order_date' },\n                                { title: 'Patient First Name', field: 'patient_first_name' },\n                                { title: 'Patient Last Name', field: 'patient_last_name' },\n                            ]}\n                            data={this.state.pendingOrders}\n                            actions={[\n                                {\n                                    icon: 'add',\n                                    tooltip: 'Add Over the Counter Medicine',\n                                    onClick: (event, row) => {\n                                        const order_id = row.order_id;\n                                        this.props.history.push(\"/order-add/\" + order_id);\n                                    }\n                                },\n                                {\n                                    icon: 'info',\n                                    tooltip: 'View Details',\n                                    onClick: (event, row) => {\n                                        const order_id = row.order_id;\n                                        this.props.history.push(\"/order-details/\" + order_id);\n                                    }\n                                },\n                            ]}\n                        />\n                    </TabPanel>\n                    <TabPanel value={this.state.tab} index={1}>\n                        <MaterialTable\n                            tableRef={tableRef2}\n                            options={{\n                                sorting: true,\n                                search: true,\n                                paging: true,\n                            }}\n                            title=\"Orders\"\n                            columns={[\n                                { title: 'Order date', field: 'order_date' },\n                                { title: 'Patient First Name', field: 'patient_first_name' },\n                                { title: 'Patient Last Name', field: 'patient_last_name' },\n                            ]}\n                            data={this.state.completeOrders}\n                            actions={[\n                                {\n                                    icon: 'add',\n                                    tooltip: 'Add Over the Counter Medicine',\n                                    onClick: (event, row) => {\n                                        const order_id = row.order_id;\n                                        this.props.history.push(\"/order-add/\" + order_id);\n                                    }\n                                },\n                                {\n                                    icon: 'receipt',\n                                    tooltip: 'View Bill',\n                                    onClick: (event, row) => {\n                                        const order_id = row.order_id;\n                                        this.props.history.push(\"/order-bill/\" + order_id);\n                                    }\n                                },\n                                {\n                                    icon: 'info',\n                                    tooltip: 'View Details',\n                                    onClick: (event, row) => {\n                                        const order_id = row.order_id;\n                                        this.props.history.push(\"/order-details/\" + order_id);\n                                    }\n                                },\n                            ]}\n                        />\n                    </TabPanel>\n                    <TabPanel value={this.state.tab} index={2}>\n                        <MaterialTable\n                            tableRef={tableRef3}\n                            options={{\n                                sorting: true,\n                                search: true,\n                                paging: true,\n                            }}\n                            title=\"Orders\"\n                            columns={[\n                                { title: 'Order date', field: 'order_date', type: \"date\", validate: u => u.order_date == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                                { title: 'Patient First Name', field: 'patient_first_name', validate: u => u.patient_first_name == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                                { title: 'Patient Last Name', field: 'patient_last_name', validate: u => u.patient_last_name == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                            ]}\n                            data={this.state.allOrders}\n                            actions={[\n                                {\n                                    icon: 'add',\n                                    tooltip: 'Add Over the Counter Medicine',\n                                    onClick: (event, row) => {\n                                        const order_id = row.order_id;\n                                        this.props.history.push(\"/order-add/\" + order_id);\n                                    }\n                                },\n                                {\n                                    icon: 'info',\n                                    tooltip: 'View Details',\n                                    onClick: (event, row) => {\n                                        const order_id = row.order_id;\n                                        this.props.history.push(\"/order-details/\" + order_id);\n                                    }\n                                },\n                            ]}\n                            editable={{\n                                onRowAdd: newData => {\n                                    return createOrder({ ...newData, order_id: -1 }).then(_ => this.getData())\n                                },\n                            }}\n                        />\n                    </TabPanel>\n                </Container>\n            </div >\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}