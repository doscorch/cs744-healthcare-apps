{"ast":null,"code":"const Base = require('./base');\n\nclass AngularHttpService extends Base {\n  request(options, params) {\n    const httpClient = this.connection;\n    const HttpHeaders = this.options.HttpHeaders;\n\n    if (!httpClient || !HttpHeaders) {\n      throw new Error(`Please pass angular's 'httpClient' (instance) and and object with 'HttpHeaders' (class) to feathers-rest`);\n    }\n\n    const url = options.url;\n    const {\n      connection = {}\n    } = params;\n    const headers = new HttpHeaders(Object.assign({\n      Accept: 'application/json'\n    }, this.options.headers, options.headers, connection.headers));\n    const requestOptions = Object.assign({\n      // method: options.method,\n      body: options.body\n    }, params.connection, {\n      headers\n    });\n    return new Promise((resolve, reject) => {\n      httpClient.request(options.method, url, requestOptions).subscribe(resolve, reject);\n    }).catch(error => {\n      const e = error.error;\n\n      if (e) {\n        throw typeof e === 'string' ? JSON.parse(e) : e;\n      }\n\n      throw error;\n    });\n  }\n\n}\n\nmodule.exports = AngularHttpService;","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/healthcare/client/node_modules/@feathersjs/rest-client/lib/angular-http-client.js"],"names":["Base","require","AngularHttpService","request","options","params","httpClient","connection","HttpHeaders","Error","url","headers","Object","assign","Accept","requestOptions","body","Promise","resolve","reject","method","subscribe","catch","error","e","JSON","parse","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,MAAMC,kBAAN,SAAiCF,IAAjC,CAAsC;AACpCG,EAAAA,OAAO,CAAEC,OAAF,EAAWC,MAAX,EAAmB;AACxB,UAAMC,UAAU,GAAG,KAAKC,UAAxB;AACA,UAAMC,WAAW,GAAG,KAAKJ,OAAL,CAAaI,WAAjC;;AAEA,QAAI,CAACF,UAAD,IAAe,CAACE,WAApB,EAAiC;AAC/B,YAAM,IAAIC,KAAJ,CAAW,0GAAX,CAAN;AACD;;AAED,UAAMC,GAAG,GAAGN,OAAO,CAACM,GAApB;AACA,UAAM;AAAEH,MAAAA,UAAU,GAAG;AAAf,QAAsBF,MAA5B;AACA,UAAMM,OAAO,GAAG,IAAIH,WAAJ,CACdI,MAAM,CAACC,MAAP,CACE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADF,EAEE,KAAKV,OAAL,CAAaO,OAFf,EAGEP,OAAO,CAACO,OAHV,EAIEJ,UAAU,CAACI,OAJb,CADc,CAAhB;AAQA,UAAMI,cAAc,GAAGH,MAAM,CAACC,MAAP,CAAc;AACnC;AACAG,MAAAA,IAAI,EAAEZ,OAAO,CAACY;AAFqB,KAAd,EAGpBX,MAAM,CAACE,UAHa,EAGD;AAAEI,MAAAA;AAAF,KAHC,CAAvB;AAKA,WAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCb,MAAAA,UAAU,CAACH,OAAX,CAAmBC,OAAO,CAACgB,MAA3B,EAAmCV,GAAnC,EAAwCK,cAAxC,EACGM,SADH,CACaH,OADb,EACsBC,MADtB;AAED,KAHM,EAIJG,KAJI,CAIEC,KAAK,IAAI;AACd,YAAMC,CAAC,GAAGD,KAAK,CAACA,KAAhB;;AAEA,UAAIC,CAAJ,EAAO;AACL,cAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBC,IAAI,CAACC,KAAL,CAAWF,CAAX,CAAxB,GAAwCA,CAA/C;AACD;;AAED,YAAMD,KAAN;AACD,KAZI,CAAP;AAaD;;AArCmC;;AAwCtCI,MAAM,CAACC,OAAP,GAAiB1B,kBAAjB","sourcesContent":["const Base = require('./base');\n\nclass AngularHttpService extends Base {\n  request (options, params) {\n    const httpClient = this.connection;\n    const HttpHeaders = this.options.HttpHeaders;\n\n    if (!httpClient || !HttpHeaders) {\n      throw new Error(`Please pass angular's 'httpClient' (instance) and and object with 'HttpHeaders' (class) to feathers-rest`);\n    }\n\n    const url = options.url;\n    const { connection = {} } = params;\n    const headers = new HttpHeaders(\n      Object.assign(\n        { Accept: 'application/json' },\n        this.options.headers,\n        options.headers,\n        connection.headers\n      )\n    );\n    const requestOptions = Object.assign({\n      // method: options.method,\n      body: options.body\n    }, params.connection, { headers });\n\n    return new Promise((resolve, reject) => {\n      httpClient.request(options.method, url, requestOptions)\n        .subscribe(resolve, reject);\n    })\n      .catch(error => {\n        const e = error.error;\n\n        if (e) {\n          throw (typeof e === 'string' ? JSON.parse(e) : e);\n        }\n\n        throw error;\n      });\n  }\n}\n\nmodule.exports = AngularHttpService;\n"]},"metadata":{},"sourceType":"script"}