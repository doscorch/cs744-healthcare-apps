{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/healthcare/client/src/auth/register.js\";\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Alert from '@material-ui/lab/Alert';\nimport { registerUser, getAllSecurityQuestions } from './usersService';\nimport { InputLabel } from '@material-ui/core';\nconst initState = {\n  username: \"\",\n  password: \"\",\n  first_name: \"\",\n  last_name: \"\",\n  user_type: \"\",\n  date_of_birth: \"\",\n  address: \"\",\n  license_number: \"\",\n  security_question_1: \"\",\n  security_answer_1: \"\",\n  security_question_2: \"\",\n  security_answer_2: \"\",\n  security_question_3: \"\",\n  security_answer_3: \"\",\n  error: \"\",\n  success: \"\",\n  questions: null\n};\nlet menuItems = [/*#__PURE__*/React.createElement(MenuItem, {\n  key: 1,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 18\n  }\n}, \"Question 1\")];\nexport default class Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initState\n    };\n\n    this.registerUser = async e => {\n      e.preventDefault(); // error handling\n\n      if (!this.state.first_name) {\n        this.setState({\n          error: \"Please provide a first name\"\n        });\n        return;\n      }\n\n      if (!this.state.last_name) {\n        this.setState({\n          error: \"Please provide a last name\"\n        });\n        return;\n      }\n\n      if (!this.state.username) {\n        this.setState({\n          error: \"Please provide a username\"\n        });\n        return;\n      } // check the username bounds\n\n\n      let usernameIsValid = this.state.username.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n      this.state.username.length >= 6 && // is greater or equal to 6 (in length)\n      !Number.isInteger(this.state.username.charAt(0)); // the first character is NOT a number\n\n      if (!usernameIsValid) {\n        this.setState({\n          error: \"The username must be have 6 or more characters, must contain only numbers and letters, and must start with a letter!\"\n        });\n        return;\n      }\n\n      if (!this.state.password) {\n        this.setState({\n          error: \"Please provide a password\"\n        });\n        return;\n      } // check the password bounds\n\n\n      let containsSpecialChar = function (text) {\n        let chars = ['~', '!', '@', '#', '$', '%', '^', '&', '*', '+'];\n\n        for (let charI = 0; charI < chars.length; charI++) {\n          if (text.includes(chars[charI])) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n\n      let passwordIsValid = this.state.password.match(/^[0-9a-zA-Z~!@#$%^&*+]+$/) && // is alphanumeric\n      this.state.password.length >= 6 && // is greater or equal to 6 (in length)\n      containsSpecialChar(this.state.password); // the first character is NOT a number\n\n      if (!passwordIsValid) {\n        this.setState({\n          error: \"The password must be have 6 or more characters, must contain only numbers and letters and the following special characters: ~!@#$%^&*+, and must start have at least one of the special characters: ~!@#$%^&*+!\"\n        });\n        return;\n      }\n\n      if (!this.state.user_type) {\n        this.setState({\n          error: 'Please select a user type'\n        });\n        return;\n      }\n\n      if (this.state.user_type === 'patient') {\n        if (!this.state.address) {\n          this.setState({\n            error: 'Please provide an address'\n          });\n          return;\n        } // TODO: GUI bug related to date selector\n\n\n        if (!this.state.date_of_birth) {\n          this.setState({\n            error: 'Please provide a date of birth'\n          });\n          return;\n        }\n      } else if (this.state.user_type === 'physician') {\n        if (!this.state.license_number) {\n          this.setState({\n            error: 'Please provide a license number'\n          });\n          return;\n        }\n      } else {// is admin\n      }\n\n      if (!this.state.security_question_1) {\n        this.setState({\n          error: 'Please select a security question 1'\n        });\n        return;\n      }\n\n      if (!this.state.security_answer_1) {\n        this.setState({\n          error: 'Please provide a security answer 1'\n        });\n        return;\n      }\n\n      let sa1IsValid = this.state.security_answer_1.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n      this.state.security_answer_1.length >= 4; // is greater or equal to 6 (in length)\n\n      if (!sa1IsValid) {\n        this.setState({\n          error: \"Security answer 1 must be have 4 or more characters and must contain only numbers and letters!\"\n        });\n        return;\n      }\n\n      if (!this.state.security_question_2) {\n        this.setState({\n          error: 'Please select a security question 2'\n        });\n        return;\n      }\n\n      if (this.state.security_question_2 == this.state.security_question_1) {\n        this.setState({\n          error: 'Security question 2 has already been selected in security question 1! Please change security question 2.'\n        });\n        return;\n      }\n\n      if (!this.state.security_answer_2) {\n        this.setState({\n          error: 'Please provide a security answer 2'\n        });\n        return;\n      }\n\n      let sa2IsValid = this.state.security_answer_2.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n      this.state.security_answer_2.length >= 4; // is greater or equal to 6 (in length)\n\n      if (!sa2IsValid) {\n        this.setState({\n          error: \"Security answer 2 must be have 4 or more characters and must contain only numbers and letters!\"\n        });\n        return;\n      }\n\n      if (!this.state.security_question_3) {\n        this.setState({\n          error: 'Please select a security question 3'\n        });\n        return;\n      }\n\n      if (this.state.security_question_3 == this.state.security_question_1) {\n        this.setState({\n          error: 'Security question 3 has already been selected in security question 1! Please change security question 3.'\n        });\n        return;\n      }\n\n      if (this.state.security_question_3 == this.state.security_question_2) {\n        this.setState({\n          error: 'Security question 3 has already been selected in security question 2! Please change security question 3.'\n        });\n        return;\n      }\n\n      if (!this.state.security_answer_3) {\n        this.setState({\n          error: 'Please provide a security answer 3'\n        });\n        return;\n      }\n\n      let sa3IsValid = this.state.security_answer_3.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n      this.state.security_answer_3.length >= 4; // is greater or equal to 6 (in length)\n\n      if (!sa3IsValid) {\n        this.setState({\n          error: \"Security answer 3 must be have 4 or more characters and must contain only numbers and letters!\"\n        });\n        return;\n      } // register user\n\n\n      let res = await registerUser(this.state.username, this.state.password, this.state.first_name, this.state.last_name, this.state.user_type, this.state.security_answer_1, this.state.security_answer_2, this.state.security_answer_3, this.state.security_question_1, this.state.security_question_2, this.state.security_question_3, this.state.address, this.state.date_of_birth, this.state.license_number);\n\n      if (res.msg == null) {\n        this.setState({ ...initState,\n          success: \"User successfully created! Please login.\"\n        });\n      } else {\n        this.setState({\n          error: res.msg\n        });\n      }\n    };\n\n    this.changeForm = e => {\n      let propName = e.target.name;\n      let propValue = e.target.value;\n      let state = { ...this.state\n      };\n      state[propName] = propValue;\n      this.setState(state);\n    };\n  }\n\n  async componentDidMount() {\n    if (menuItems.length == 1) {\n      let securityQuestions = await getAllSecurityQuestions();\n      let list = securityQuestions.data;\n      menuItems = [];\n\n      for (let i = 0; i < list.length; i++) {\n        menuItems.push( /*#__PURE__*/React.createElement(MenuItem, {\n          key: list[i].question_id,\n          value: list[i].question_id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 32\n          }\n        }, list[i].question));\n      }\n\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    const classes = {\n      paper: {\n        marginTop: \"10px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      form: {\n        width: '100%',\n        marginTop: \"10px\"\n      },\n      submit: {\n        margin: \"10px\"\n      }\n    };\n    let error = this.state.error ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 40\n      }\n    }, this.state.error) : \"\";\n    let success = this.state.success ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 44\n      }\n    }, this.state.success) : \"\";\n    const isPatient = this.state.user_type === 'patient';\n    const isPhysician = this.state.user_type === 'physician';\n    return /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n      style: classes.form,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      autoComplete: \"fname\",\n      name: \"first_name\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"first_name\",\n      label: \"First Name\",\n      autoFocus: true,\n      required: true,\n      value: this.state.first_name,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"last_name\",\n      label: \"Last Name\",\n      name: \"last_name\",\n      autoComplete: \"lname\",\n      value: this.state.last_name,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"username\",\n      label: \"Username\",\n      name: \"username\",\n      autoComplete: \"username\",\n      value: this.state.username,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      value: this.state.password,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"register-user-type-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 33\n      }\n    }, \"User Type\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"register-user-type-label\",\n      required: true,\n      fullWidth: true,\n      name: \"user_type\",\n      id: \"register-user-type\",\n      \"auto-complete\": \"admin\",\n      value: this.state.user_type,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'admin',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 41\n      }\n    }, \"Admin\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'patient',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 41\n      }\n    }, \"Patient\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'physician',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 41\n      }\n    }, \"Physician\")))), isPatient ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"address\",\n      label: \"Address\",\n      id: \"address\",\n      autoComplete: \"current-address\",\n      value: this.state.address,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"date\",\n      format: \"MM/dd/yyyy\",\n      margin: \"normal\",\n      id: \"date-of-birth\",\n      name: \"date_of_birth\",\n      label: \"Date of Birth\",\n      value: this.state.date_of_birth,\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 37\n      }\n    }))) : \"\", isPhysician ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"license_number\",\n      label: \"License Number\",\n      id: \"license_number\",\n      autoComplete: \"current-number\",\n      value: this.state.license_number,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 37\n      }\n    }))) : \"\", /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"sq1-user-type-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 33\n      }\n    }, \"Security Question 1\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"sq1-user-type-label\",\n      required: true,\n      fullWidth: true,\n      name: \"security_question_1\",\n      id: \"security_question_1\",\n      \"auto-complete\": \"sq1\",\n      value: this.state.security_question_1,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 37\n      }\n    }, menuItems)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"security_answer_1\",\n      label: \"Security Question 1 Answer\",\n      id: \"security_answer_1\",\n      autoComplete: \"current-sa1\",\n      value: this.state.security_answer_1,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"sq2-user-type-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 33\n      }\n    }, \"Security Question 2\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"sq2-user-type-label\",\n      required: true,\n      fullWidth: true,\n      name: \"security_question_2\",\n      id: \"security_question_2\",\n      \"auto-complete\": \"sq2\",\n      value: this.state.security_question_2,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 37\n      }\n    }, menuItems)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"security_answer_2\",\n      label: \"Security Question 2 Answer\",\n      id: \"security_answer_2\",\n      autoComplete: \"current-sa2\",\n      value: this.state.security_answer_2,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"sq3-user-type-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 33\n      }\n    }, \"Security Question 3\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"sq3-user-type-label\",\n      required: true,\n      fullWidth: true,\n      name: \"security_question_3\",\n      id: \"security_question_3\",\n      \"auto-complete\": \"sq3\",\n      value: this.state.security_question_3,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 37\n      }\n    }, menuItems)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"security_answer_3\",\n      label: \"Security Question 3 Answer\",\n      id: \"security_answer_3\",\n      autoComplete: \"current-sa3\",\n      value: this.state.security_answer_3,\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      style: classes.submit,\n      onClick: this.registerUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 25\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 33\n      }\n    }, \"Already have an account? Login\")))), error, success));\n  }\n\n}","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/healthcare/client/src/auth/register.js"],"names":["React","Avatar","Button","TextField","Link","Grid","Typography","Container","Select","MenuItem","Alert","registerUser","getAllSecurityQuestions","InputLabel","initState","username","password","first_name","last_name","user_type","date_of_birth","address","license_number","security_question_1","security_answer_1","security_question_2","security_answer_2","security_question_3","security_answer_3","error","success","questions","menuItems","Register","Component","state","e","preventDefault","setState","usernameIsValid","match","length","Number","isInteger","charAt","containsSpecialChar","text","chars","charI","includes","passwordIsValid","sa1IsValid","sa2IsValid","sa3IsValid","res","msg","changeForm","propName","target","name","propValue","value","componentDidMount","securityQuestions","list","data","i","push","question_id","question","forceUpdate","render","classes","paper","marginTop","display","flexDirection","alignItems","form","width","submit","margin","isPatient","isPhysician","shrink"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { registerUser, getAllSecurityQuestions } from './usersService';\nimport { InputLabel } from '@material-ui/core';\nconst initState = {\n    username: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    user_type: \"\",\n    date_of_birth: \"\",\n    address: \"\",\n    license_number: \"\",\n    security_question_1: \"\",\n    security_answer_1: \"\",\n    security_question_2: \"\",\n    security_answer_2: \"\",\n    security_question_3: \"\",\n    security_answer_3: \"\",\n    error: \"\",\n    success: \"\",\n    questions: null,\n}\n\nlet menuItems = [<MenuItem key={1}>Question 1</MenuItem>];\n\n\nexport default class Register extends React.Component {\n\n    state = {\n        ...initState\n    }\n\n    /**\n     * Called when the User clicks on the register button. Posts to server/auth/register\n     * \n     * @param {*} e \n     * @author Sahee Thao\n     * @date 02/21/2021\n     */\n    registerUser = async (e) => {\n\n        e.preventDefault();\n        // error handling\n        if (!this.state.first_name) {\n            this.setState({ error: \"Please provide a first name\" });\n            return;\n        }\n        if (!this.state.last_name) {\n            this.setState({ error: \"Please provide a last name\" });\n            return;\n        }\n        if (!this.state.username) {\n            this.setState({ error: \"Please provide a username\" });\n            return;\n        }\n        // check the username bounds\n        let usernameIsValid = \n        this.state.username.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n        this.state.username.length >= 6 && // is greater or equal to 6 (in length)\n        !Number.isInteger(this.state.username.charAt(0)); // the first character is NOT a number\n\n        if (!usernameIsValid) {\n            this.setState({ error: \"The username must be have 6 or more characters, must contain only numbers and letters, and must start with a letter!\" });\n            return;\n        }\n\n        if (!this.state.password) {\n            this.setState({ error: \"Please provide a password\" });\n            return;\n        }\n\n        // check the password bounds\n\n        let containsSpecialChar = function (text) {\n            let chars = ['~', '!', '@', '#', '$', '%', '^', '&', '*', '+'];\n            for (let charI = 0; charI < chars.length; charI++) {\n                if (text.includes(chars[charI])) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        let passwordIsValid = \n        this.state.password.match(/^[0-9a-zA-Z~!@#$%^&*+]+$/) && // is alphanumeric\n        this.state.password.length >= 6 && // is greater or equal to 6 (in length)\n        containsSpecialChar(this.state.password); // the first character is NOT a number\n\n\n        if (!passwordIsValid) {\n            this.setState({ error: \"The password must be have 6 or more characters, must contain only numbers and letters and the following special characters: ~!@#$%^&*+, and must start have at least one of the special characters: ~!@#$%^&*+!\" });\n            return;\n        }\n\n        if (!this.state.user_type) {\n            this.setState({ error: 'Please select a user type'});\n            return;\n        }\n\n        if (this.state.user_type === 'patient') {\n            if (!this.state.address) {\n                this.setState({ error: 'Please provide an address'});\n                return;\n            }\n            // TODO: GUI bug related to date selector\n            if (!this.state.date_of_birth) {\n                this.setState({ error: 'Please provide a date of birth'});\n                return;\n            }\n        } else if (this.state.user_type === 'physician') {\n            if (!this.state.license_number) {\n                this.setState({ error: 'Please provide a license number'});\n                return;\n            }\n        } else {\n            // is admin\n        }\n\n        if (!this.state.security_question_1) {\n            this.setState({ error: 'Please select a security question 1'});\n            return;\n        }\n\n        if (!this.state.security_answer_1) {\n            this.setState({ error: 'Please provide a security answer 1'});\n            return;\n        }\n\n        let sa1IsValid = \n        this.state.security_answer_1.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n        this.state.security_answer_1.length >= 4; // is greater or equal to 6 (in length)\n\n        if (!sa1IsValid) {\n            this.setState({ error: \"Security answer 1 must be have 4 or more characters and must contain only numbers and letters!\" });\n            return;\n        }\n\n        if (!this.state.security_question_2) {\n            this.setState({ error: 'Please select a security question 2'});\n            return;\n        }\n\n        if (this.state.security_question_2 == this.state.security_question_1) {\n            this.setState({ error: 'Security question 2 has already been selected in security question 1! Please change security question 2.'});\n            return;\n        }\n\n        if (!this.state.security_answer_2) {\n            this.setState({ error: 'Please provide a security answer 2'});\n            return;\n        }\n\n        let sa2IsValid = \n        this.state.security_answer_2.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n        this.state.security_answer_2.length >= 4; // is greater or equal to 6 (in length)\n\n        if (!sa2IsValid) {\n            this.setState({ error: \"Security answer 2 must be have 4 or more characters and must contain only numbers and letters!\" });\n            return;\n        }\n\n        if (!this.state.security_question_3) {\n            this.setState({ error: 'Please select a security question 3'});\n            return;\n        }\n\n        if (this.state.security_question_3 == this.state.security_question_1) {\n            this.setState({ error: 'Security question 3 has already been selected in security question 1! Please change security question 3.'});\n            return;\n        }\n\n        if (this.state.security_question_3 == this.state.security_question_2) {\n            this.setState({ error: 'Security question 3 has already been selected in security question 2! Please change security question 3.'});\n            return;\n        }\n\n        if (!this.state.security_answer_3) {\n            this.setState({ error: 'Please provide a security answer 3'});\n            return;\n        }\n\n        let sa3IsValid = \n        this.state.security_answer_3.match(/^[0-9a-zA-Z]+$/) && // is alphanumeric\n        this.state.security_answer_3.length >= 4; // is greater or equal to 6 (in length)\n\n        if (!sa3IsValid) {\n            this.setState({ error: \"Security answer 3 must be have 4 or more characters and must contain only numbers and letters!\" });\n            return;\n        }\n\n\n\n        // register user\n        let res = await registerUser(this.state.username, this.state.password, this.state.first_name, this.state.last_name, this.state.user_type, \n            this.state.security_answer_1, this.state.security_answer_2, this.state.security_answer_3, this.state.security_question_1, \n            this.state.security_question_2,this.state.security_question_3, this.state.address, this.state.date_of_birth, this.state.license_number)\n        \n        if (res.msg == null) {\n            this.setState({ ...initState, success: \"User successfully created! Please login.\" });\n        } else {\n            this.setState({error: res.msg});\n        }\n    }\n\n    changeForm = (e) => {\n        let propName = e.target.name;\n        let propValue = e.target.value;\n        let state = { ...this.state };\n        state[propName] = propValue;\n        this.setState(state);\n    }\n    async componentDidMount() {\n        if (menuItems.length == 1) {\n            let securityQuestions = await getAllSecurityQuestions();\n             let list = securityQuestions.data;\n\n            menuItems = [];\n            for (let i = 0; i < list.length; i++) {\n                menuItems.push(<MenuItem key={list[i].question_id} value={list[i].question_id}>{list[i].question}</MenuItem>);\n            }\n            this.forceUpdate();\n        }    \n    }\n    render() {\n        const classes = {\n            paper: {\n                marginTop: \"10px\",\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n            },\n            form: {\n                width: '100%',\n                marginTop: \"10px\"\n            },\n            submit: {\n                margin: \"10px\"\n            },\n        };\n        let error = this.state.error ? <Alert severity=\"error\">{this.state.error}</Alert> : \"\";\n        let success = this.state.success ? <Alert severity=\"success\">{this.state.success}</Alert> : \"\";\n\n        const isPatient = this.state.user_type === 'patient';\n        const isPhysician = this.state.user_type === 'physician';\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\" >\n                <div style={classes.paper}>\n                    <Avatar />\n                    <Typography component=\"h1\" variant=\"h5\">Register</Typography>\n                    <form style={classes.form} noValidate>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"fname\"\n                                    name=\"first_name\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"first_name\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    required\n                                    value={this.state.first_name}\n                                    onChange={this.changeForm}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"last_name\"\n                                    label=\"Last Name\"\n                                    name=\"last_name\"\n                                    autoComplete=\"lname\"\n                                    value={this.state.last_name}\n                                    onChange={this.changeForm}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"username\"\n                                    label=\"Username\"\n                                    name=\"username\"\n                                    autoComplete=\"username\"\n                                    value={this.state.username}\n                                    onChange={this.changeForm}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    value={this.state.password}\n                                    onChange={this.changeForm}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid container justify=\"center\" spacing={4}>\n                            <Grid item xs={12} sm={6}>\n                                <InputLabel id='register-user-type-label'>User Type</InputLabel>\n                                <Select \n                                    labelId=\"register-user-type-label\"\n                                    required\n                                    fullWidth\n                                    name=\"user_type\"\n                                    id=\"register-user-type\"\n                                    auto-complete='admin'\n                                    value={this.state.user_type}\n                                    onChange={this.changeForm}>\n                                        <MenuItem value={'admin'}>Admin</MenuItem>\n                                        <MenuItem value={'patient'}>Patient</MenuItem>\n                                        <MenuItem value={'physician'}>Physician</MenuItem>\n                                </Select>\n                            </Grid>\n                        </Grid>\n                        {isPatient ? \n                            <Grid container spacing={2} justify=\"center\">\n                                <Grid item xs={12}>\n                                    <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"address\"\n                                    label=\"Address\"\n                                    id=\"address\"\n                                    autoComplete=\"current-address\"\n                                    value={this.state.address}\n                                    onChange={this.changeForm}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        type=\"date\"\n                                        format=\"MM/dd/yyyy\"\n                                        margin=\"normal\"\n                                        id=\"date-of-birth\"\n                                        name=\"date_of_birth\"\n                                        label=\"Date of Birth\"\n                                        value={this.state.date_of_birth}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                            }}\n                                        onChange={this.changeForm}\n                                    />\n                                </Grid>\n                            </Grid>\n                        : \"\"}\n                        {isPhysician ? \n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"license_number\"\n                                    label=\"License Number\"\n                                    id=\"license_number\"\n                                    autoComplete=\"current-number\"\n                                    value={this.state.license_number}\n                                    onChange={this.changeForm}\n                                    />\n                                </Grid>\n                            </Grid>\n                        : \"\"}\n\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n                                <InputLabel id='sq1-user-type-label'>Security Question 1</InputLabel>\n                                    <Select \n                                        labelId=\"sq1-user-type-label\"\n                                        required\n                                        fullWidth\n                                        name=\"security_question_1\"\n                                        id=\"security_question_1\"\n                                        auto-complete='sq1'\n                                        value={this.state.security_question_1}\n                                        onChange={this.changeForm}>\n                                            {menuItems}\n                                </Select>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"security_answer_1\"\n                                    label=\"Security Question 1 Answer\"\n                                    id=\"security_answer_1\"\n                                    autoComplete=\"current-sa1\"\n                                    value={this.state.security_answer_1}\n                                    onChange={this.changeForm}\n                                    />\n                            </Grid>\n                        </Grid>\n\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n                                <InputLabel id='sq2-user-type-label'>Security Question 2</InputLabel>\n                                    <Select \n                                        labelId=\"sq2-user-type-label\"\n                                        required\n                                        fullWidth\n                                        name=\"security_question_2\"\n                                        id=\"security_question_2\"\n                                        auto-complete='sq2'\n                                        value={this.state.security_question_2}\n                                        onChange={this.changeForm}>\n                                            {menuItems}\n                                </Select>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"security_answer_2\"\n                                    label=\"Security Question 2 Answer\"\n                                    id=\"security_answer_2\"\n                                    autoComplete=\"current-sa2\"\n                                    value={this.state.security_answer_2}\n                                    onChange={this.changeForm}\n                                    />\n                            </Grid>\n                        </Grid>\n\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n                                <InputLabel id='sq3-user-type-label'>Security Question 3</InputLabel>\n                                    <Select \n                                        labelId=\"sq3-user-type-label\"\n                                        required\n                                        fullWidth\n                                        name=\"security_question_3\"\n                                        id=\"security_question_3\"\n                                        auto-complete='sq3'\n                                        value={this.state.security_question_3}\n                                        onChange={this.changeForm}>\n                                            {menuItems}\n                                </Select>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"security_answer_3\"\n                                    label=\"Security Question 3 Answer\"\n                                    id=\"security_answer_3\"\n                                    autoComplete=\"current-sa3\"\n                                    value={this.state.security_answer_3}\n                                    onChange={this.changeForm}\n                                    />\n                            </Grid>\n                        </Grid>\n                        \n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={classes.submit}\n                            onClick={this.registerUser}>\n                            Register\n                        </Button>\n                        <Grid container justify=\"center\">\n                            <Grid item>\n                                <Link href=\"/login\">\n                                    Already have an account? Login\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                    {error}\n                    {success}\n                </div>\n            </Container>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}