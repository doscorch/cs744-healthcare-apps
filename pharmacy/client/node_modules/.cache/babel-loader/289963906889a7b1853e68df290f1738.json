{"ast":null,"code":"var _classCallCheck = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar qs = require('qs');\n\nvar _require = require('@feathersjs/errors'),\n    Unavailable = _require.Unavailable;\n\nvar _require2 = require('@feathersjs/commons'),\n    _ = _require2._;\n\nvar _require3 = require('@feathersjs/commons'),\n    stripSlashes = _require3.stripSlashes;\n\nvar _require4 = require('@feathersjs/errors'),\n    convert = _require4.convert;\n\nfunction toError(error) {\n  if (error.code === 'ECONNREFUSED') {\n    throw new Unavailable(error.message, _.pick(error, 'address', 'port', 'config'));\n  }\n\n  throw convert(error);\n}\n\nvar Base = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Base(settings) {\n    _classCallCheck(this, Base);\n\n    this.name = stripSlashes(settings.name);\n    this.options = settings.options;\n    this.connection = settings.connection;\n    this.base = \"\".concat(settings.base, \"/\").concat(this.name);\n  }\n\n  _createClass(Base, [{\n    key: \"makeUrl\",\n    value: function makeUrl(query, id) {\n      query = query || {};\n      var url = this.base;\n\n      if (typeof id !== 'undefined' && id !== null) {\n        url += \"/\".concat(encodeURIComponent(id));\n      }\n\n      return url + this.getQuery(query);\n    }\n  }, {\n    key: \"getQuery\",\n    value: function getQuery(query) {\n      if (Object.keys(query).length !== 0) {\n        var queryString = qs.stringify(query);\n        return \"?\".concat(queryString);\n      }\n\n      return '';\n    }\n  }, {\n    key: \"find\",\n    value: function find() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.request({\n        url: this.makeUrl(params.query),\n        method: 'GET',\n        headers: Object.assign({}, params.headers)\n      }, params).catch(toError);\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof id === 'undefined') {\n        return Promise.reject(new Error(\"id for 'get' can not be undefined\"));\n      }\n\n      return this.request({\n        url: this.makeUrl(params.query, id),\n        method: 'GET',\n        headers: Object.assign({}, params.headers)\n      }, params).catch(toError);\n    }\n  }, {\n    key: \"create\",\n    value: function create(body) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.request({\n        url: this.makeUrl(params.query),\n        body: body,\n        method: 'POST',\n        headers: Object.assign({\n          'Content-Type': 'application/json'\n        }, params.headers)\n      }, params).catch(toError);\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, body) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (typeof id === 'undefined') {\n        return Promise.reject(new Error(\"id for 'update' can not be undefined, only 'null' when updating multiple entries\"));\n      }\n\n      return this.request({\n        url: this.makeUrl(params.query, id),\n        body: body,\n        method: 'PUT',\n        headers: Object.assign({\n          'Content-Type': 'application/json'\n        }, params.headers)\n      }, params).catch(toError);\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(id, body) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (typeof id === 'undefined') {\n        return Promise.reject(new Error(\"id for 'patch' can not be undefined, only 'null' when updating multiple entries\"));\n      }\n\n      return this.request({\n        url: this.makeUrl(params.query, id),\n        body: body,\n        method: 'PATCH',\n        headers: Object.assign({\n          'Content-Type': 'application/json'\n        }, params.headers)\n      }, params).catch(toError);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(id) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof id === 'undefined') {\n        return Promise.reject(new Error(\"id for 'remove' can not be undefined, only 'null' when removing multiple entries\"));\n      }\n\n      return this.request({\n        url: this.makeUrl(params.query, id),\n        method: 'DELETE',\n        headers: Object.assign({}, params.headers)\n      }, params).catch(toError);\n    }\n  }]);\n\n  return Base;\n}();\n\nmodule.exports = Base;","map":{"version":3,"sources":["/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/@feathersjs/rest-client/lib/base.js"],"names":["qs","require","Unavailable","_","stripSlashes","convert","toError","error","code","message","pick","Base","settings","name","options","connection","base","query","id","url","encodeURIComponent","getQuery","Object","keys","length","queryString","stringify","params","request","makeUrl","method","headers","assign","catch","Promise","reject","Error","body","module","exports"],"mappings":"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","sourcesContent":["const qs = require('qs');\nconst { Unavailable } = require('@feathersjs/errors');\nconst { _ } = require('@feathersjs/commons');\nconst { stripSlashes } = require('@feathersjs/commons');\nconst { convert } = require('@feathersjs/errors');\n\nfunction toError (error) {\n  if (error.code === 'ECONNREFUSED') {\n    throw new Unavailable(error.message, _.pick(error, 'address', 'port', 'config'));\n  }\n\n  throw convert(error);\n}\n\nclass Base {\n  constructor (settings) {\n    this.name = stripSlashes(settings.name);\n    this.options = settings.options;\n    this.connection = settings.connection;\n    this.base = `${settings.base}/${this.name}`;\n  }\n\n  makeUrl (query, id) {\n    query = query || {};\n    let url = this.base;\n\n    if (typeof id !== 'undefined' && id !== null) {\n      url += `/${encodeURIComponent(id)}`;\n    }\n\n    return url + this.getQuery(query);\n  }\n\n  getQuery (query) {\n    if (Object.keys(query).length !== 0) {\n      const queryString = qs.stringify(query);\n\n      return `?${queryString}`;\n    }\n\n    return '';\n  }\n\n  find (params = {}) {\n    return this.request({\n      url: this.makeUrl(params.query),\n      method: 'GET',\n      headers: Object.assign({}, params.headers)\n    }, params).catch(toError);\n  }\n\n  get (id, params = {}) {\n    if (typeof id === 'undefined') {\n      return Promise.reject(new Error(`id for 'get' can not be undefined`));\n    }\n\n    return this.request({\n      url: this.makeUrl(params.query, id),\n      method: 'GET',\n      headers: Object.assign({}, params.headers)\n    }, params).catch(toError);\n  }\n\n  create (body, params = {}) {\n    return this.request({\n      url: this.makeUrl(params.query),\n      body,\n      method: 'POST',\n      headers: Object.assign({ 'Content-Type': 'application/json' }, params.headers)\n    }, params).catch(toError);\n  }\n\n  update (id, body, params = {}) {\n    if (typeof id === 'undefined') {\n      return Promise.reject(new Error(`id for 'update' can not be undefined, only 'null' when updating multiple entries`));\n    }\n\n    return this.request({\n      url: this.makeUrl(params.query, id),\n      body,\n      method: 'PUT',\n      headers: Object.assign({ 'Content-Type': 'application/json' }, params.headers)\n    }, params).catch(toError);\n  }\n\n  patch (id, body, params = {}) {\n    if (typeof id === 'undefined') {\n      return Promise.reject(new Error(`id for 'patch' can not be undefined, only 'null' when updating multiple entries`));\n    }\n\n    return this.request({\n      url: this.makeUrl(params.query, id),\n      body,\n      method: 'PATCH',\n      headers: Object.assign({ 'Content-Type': 'application/json' }, params.headers)\n    }, params).catch(toError);\n  }\n\n  remove (id, params = {}) {\n    if (typeof id === 'undefined') {\n      return Promise.reject(new Error(`id for 'remove' can not be undefined, only 'null' when removing multiple entries`));\n    }\n\n    return this.request({\n      url: this.makeUrl(params.query, id),\n      method: 'DELETE',\n      headers: Object.assign({}, params.headers)\n    }, params).catch(toError);\n  }\n}\n\nmodule.exports = Base;\n"]},"metadata":{},"sourceType":"script"}