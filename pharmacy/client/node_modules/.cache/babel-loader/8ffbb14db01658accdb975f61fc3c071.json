{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/verifyPatient.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getPrescription } from './prescriptionsService';\nimport { Button, Container, Col, Row } from 'react-bootstrap';\nimport MaterialTable from 'material-table';\nimport { getPatients } from '../patients/patientsService';\nconst initState = {\n  prescription: \"\"\n};\nexport class VerifyPatient extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initState,\n      prescription: \"\",\n      patients: []\n    };\n\n    this.changeForm = e => {\n      let propName = e.target.name;\n      let propValue = e.target.value;\n      let state = { ...this.state\n      };\n      state[propName] = propValue;\n      this.setState(state);\n    };\n  }\n\n  async componentDidMount() {\n    const prescription_id = this.props.match.params.prescription;\n    const prescription = await getPrescription(prescription_id);\n\n    if (prescription.error) {\n      this.setState({\n        error: prescription.error\n      });\n      return;\n    }\n\n    this.setState({\n      prescription: prescription\n    });\n    getPatients().then(patients => {\n      this.setState({\n        patients: patients\n      });\n    });\n  }\n\n  render() {\n    const tableRef = React.createRef();\n    const prescription = this.state.prescription;\n    const patient = this.state.patient ? this.state.patient : {};\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef,\n      options: {\n        sorting: true,\n        search: true,\n        paging: true,\n        editable: false,\n        pageSize: 3\n      },\n      title: \"Find Patient\",\n      columns: [{\n        title: 'First name',\n        field: 'first_name'\n      }, {\n        title: 'Last name',\n        field: 'last_name'\n      }, {\n        title: 'Date of birth',\n        type: 'date',\n        field: 'birth_date'\n      }, {\n        title: 'Address',\n        render: p => `${p.address} ${p.city} ${p.state} ${p.zipcode}`\n      }],\n      data: this.state.patients,\n      actions: [{\n        icon: 'view',\n        tooltip: 'View',\n        onClick: (event, row) => {\n          this.setState({\n            patient: row\n          });\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Prescription\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"System\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 26\n      }\n    }, \"Patient Name\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, prescription.patient_first_name, \" \", prescription.patient_last_name), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, patient.first_name, \" \", patient.last_name)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 26\n      }\n    }, \"Date of Birth\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, prescription.patient_date_of_birth), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, patient.birth_date)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 26\n      }\n    }, \"Address\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, prescription.patient_address, \" \", prescription.patient_address), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, patient.address, \" \", patient.city, \" \", patient.state, \" \", patient.zipcode)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Confirm\"))));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {\n  app_login\n};\nexport default connect(mapState, mapDispatch)(VerifyPatient);","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/verifyPatient.js"],"names":["React","connect","app_login","getPrescription","Button","Container","Col","Row","MaterialTable","getPatients","initState","prescription","VerifyPatient","Component","state","patients","changeForm","e","propName","target","name","propValue","value","setState","componentDidMount","prescription_id","props","match","params","error","then","render","tableRef","createRef","patient","sorting","search","paging","editable","pageSize","title","field","type","p","address","city","zipcode","icon","tooltip","onClick","event","row","patient_first_name","patient_last_name","first_name","last_name","patient_date_of_birth","birth_date","patient_address","mapState","user","mapDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getPrescription } from './prescriptionsService';\nimport { Button, Container, Col, Row } from 'react-bootstrap';\nimport MaterialTable from 'material-table';\nimport { getPatients } from '../patients/patientsService';\n\n\nconst initState = {\n    prescription: \"\"\n}\n\nexport class VerifyPatient extends React.Component {\n\n    state = {\n        ...initState,\n        prescription: \"\",\n        patients: []\n    }\n\n    changeForm = (e) => {\n        let propName = e.target.name;\n        let propValue = e.target.value;\n        let state = { ...this.state };\n        state[propName] = propValue;\n        this.setState(state);\n    }\n\n    async componentDidMount() {\n        const prescription_id = this.props.match.params.prescription;\n        const prescription = await getPrescription(prescription_id);\n        if (prescription.error) {\n            this.setState({ error: prescription.error });\n            return;\n        }\n        this.setState({ prescription: prescription })\n\n        getPatients()\n            .then(patients => {\n                this.setState({ patients: patients })\n            })\n    }\n    render() {\n        const tableRef = React.createRef();\n        const prescription = this.state.prescription;\n        const patient = this.state.patient ? this.state.patient : {};\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <MaterialTable\n                            tableRef={tableRef}\n                            options={{\n                                sorting: true,\n                                search: true,\n                                paging: true,\n                                editable: false,\n                                pageSize: 3,\n                            }}\n                            title=\"Find Patient\"\n                            columns={[\n                                { title: 'First name', field: 'first_name' },\n                                { title: 'Last name', field: 'last_name' },\n                                { title: 'Date of birth', type: 'date', field: 'birth_date' },\n                                { title: 'Address', render: p => (`${p.address} ${p.city} ${p.state} ${p.zipcode}`) },\n                            ]}\n                            data={this.state.patients}\n                            actions={[\n                                {\n                                    icon: 'view',\n                                    tooltip: 'View',\n                                    onClick: (event, row) => {\n                                        this.setState({ patient: row });\n                                    }\n                                },\n                            ]}\n                        />\n                    </Col>\n                </Row>\n                <hr />\n                <Row>\n                    <Col></Col>\n                    <Col>Prescription</Col>\n                    <Col>System</Col>\n                </Row>\n                <Row>\n                    <Col><b>Patient Name</b></Col>\n                    <Col>{prescription.patient_first_name} {prescription.patient_last_name}</Col>\n                    <Col>{patient.first_name} {patient.last_name}</Col>\n                </Row>\n                <Row>\n                    <Col><b>Date of Birth</b></Col>\n                    <Col>{prescription.patient_date_of_birth}</Col>\n                    <Col>{patient.birth_date}</Col>\n                </Row>\n                <Row>\n                    <Col><b>Address</b></Col>\n                    <Col>{prescription.patient_address} {prescription.patient_address}</Col>\n                    <Col>{patient.address} {patient.city} {patient.state} {patient.zipcode}</Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Button>Confirm</Button>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n\n}\n\nconst mapState = (state) => { return { user: state.user } };\nconst mapDispatch = { app_login };\n\nexport default connect(mapState, mapDispatch)(VerifyPatient);"]},"metadata":{},"sourceType":"module"}