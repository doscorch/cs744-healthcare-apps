{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/orders/orderBill.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getMedicine } from '../medicines/medicinesService';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { getOrder } from './ordersService';\nimport { getPrescriptionsByOrderId } from '../prescriptions/prescriptionsService';\nimport { getSalesByOrderId } from '../sales/salesService';\nimport { Fragment } from 'react';\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\nexport class OrderBill extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: {},\n      prescriptions: [],\n      sales: []\n    };\n  }\n\n  async componentDidMount() {\n    const medicine_order_id = this.props.match.params.order;\n    const order = await getOrder(medicine_order_id);\n    this.setState({\n      order\n    });\n\n    if (order && order.order_id != -1) {\n      const prescriptions = await getPrescriptionsByOrderId(order.order_id);\n\n      if (prescriptions) {\n        for (var i = 0; i < prescriptions.length; i++) {\n          const prescription = prescriptions[i];\n          prescription.medicine = await getMedicine(prescription.medicine_id);\n        }\n\n        this.setState({\n          prescriptions\n        });\n      }\n    }\n\n    let sales = await getSalesByOrderId(order.medicine_order_id);\n\n    if (sales) {\n      for (var i = 0; i < sales.length; i++) {\n        const sale = sales[i];\n        sale.medicine = await getMedicine(sale.medicine_id);\n      }\n\n      this.setState({\n        sales\n      });\n    }\n  }\n\n  render() {\n    const classes = {\n      paper: {\n        marginTop: \"10px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      form: {\n        width: '100%',\n        marginTop: \"10px\"\n      },\n      submit: {\n        margin: \"10px\"\n      },\n      p_label: {\n        float: \"left\",\n        marginRight: \"10px\"\n      },\n      entry: {\n        display: \"inline\"\n      }\n    };\n    const prescriptions = this.state.prescriptions;\n    const sales = this.state.sales;\n    const prescriptionsHtml = prescriptions.map(prescription => {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, prescription.medicine.medicine_code), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, prescription.medicine.medical_name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, prescription.medicine.commercial_name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, prescription.quantity), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, currencyFormatter.format(prescription.medicine.cost * prescription.quantity)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, currencyFormatter.format(prescription.medicine.cost * prescription.quantity * (prescription.insurance_coverage / 100))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, currencyFormatter.format(prescription.medicine.cost * prescription.quantity - prescription.medicine.cost * prescription.quantity * (prescription.insurance_coverage / 100)))));\n    });\n    const salesHtml = sales.map(sale => {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, sale.medicine.medicine_code), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, sale.medicine.medical_name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, sale.medicine.commercial_name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, sale.quantity), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, currencyFormatter.format(sale.medicine.cost * sale.quantity)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, \"N/A\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }, currencyFormatter.format(sale.medicine.cost * sale.quantity))));\n    });\n    let subtotal = prescriptions.reduce((a, prescription) => a + prescription.medicine.cost * prescription.quantity - prescription.medicine.cost * prescription.quantity * (prescription.insurance_coverage / 100), 0);\n    subtotal += sales.reduce((a, sale) => a + sale.medicine.cost * sale.quantity, 0);\n    const tax = subtotal * .055;\n    const total = subtotal * 1.055;\n    const totalHtml = /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, \" \"))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, \"Subtotal:\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, currencyFormatter.format(subtotal))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \"Tax (5.5%):\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, currencyFormatter.format(tax))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, \"Total:\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, currencyFormatter.format(total))));\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"card card-body bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: \"1px solid black\",\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/logo.png',\n      alt: \"logo image\",\n      style: {\n        width: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 41\n      }\n    }, \"Peach Insurance\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 41\n      }\n    }, \"La Crosse, WI 54601\"), /*#__PURE__*/React.createElement(\"label\", {\n      style: classes.p_label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 41\n      }\n    }, \"Website: \"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://138.49.101.87/peachinsurance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 41\n      }\n    }, \"138.49.101.87/peachinsurance\")))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: classes.p_label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, \"Date: \"), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"entry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }, new Date(this.state.order.order_date).toDateString())), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: classes.p_label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }, \"Patient: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }, this.state.order.patient_first_name, \" \", this.state.order.patient_last_name)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"bill\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 41\n      }\n    }, \"Item Code\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 41\n      }\n    }, \"Medical Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 41\n      }\n    }, \"Commercial Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 41\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 41\n      }\n    }, \"Cost of Medicine\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 41\n      }\n    }, \"Insurance Payment\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 41\n      }\n    }, \"Patient Pays\")), prescriptionsHtml, salesHtml, totalHtml))))));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {\n  app_login\n};\nexport default connect(mapState, mapDispatch)(OrderBill);","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/orders/orderBill.js"],"names":["React","Typography","connect","app_login","getMedicine","Container","Col","Row","getOrder","getPrescriptionsByOrderId","getSalesByOrderId","Fragment","currencyFormatter","Intl","NumberFormat","style","currency","OrderBill","Component","state","order","prescriptions","sales","componentDidMount","medicine_order_id","props","match","params","setState","order_id","i","length","prescription","medicine","medicine_id","sale","render","classes","paper","marginTop","display","flexDirection","alignItems","form","width","submit","margin","p_label","float","marginRight","entry","prescriptionsHtml","map","medicine_code","medical_name","commercial_name","quantity","format","cost","insurance_coverage","salesHtml","subtotal","reduce","a","tax","total","totalHtml","border","padding","process","env","PUBLIC_URL","Date","order_date","toDateString","patient_first_name","patient_last_name","mapState","user","mapDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getMedicine } from '../medicines/medicinesService';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { getOrder } from './ordersService';\nimport { getPrescriptionsByOrderId } from '../prescriptions/prescriptionsService';\nimport { getSalesByOrderId } from '../sales/salesService';\nimport { Fragment } from 'react';\n\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n});\n\nexport class OrderBill extends React.Component {\n\n    state = {\n        order: {},\n        prescriptions: [],\n        sales: [],\n    }\n\n    async componentDidMount() {\n        const medicine_order_id = this.props.match.params.order;\n        const order = await getOrder(medicine_order_id);\n        this.setState({ order });\n\n        if (order && order.order_id != -1) {\n            const prescriptions = await getPrescriptionsByOrderId(order.order_id)\n            if (prescriptions) {\n                for (var i = 0; i < prescriptions.length; i++) {\n                    const prescription = prescriptions[i];\n                    prescription.medicine = await getMedicine(prescription.medicine_id);\n                }\n                this.setState({ prescriptions });\n            }\n        }\n\n        let sales = await getSalesByOrderId(order.medicine_order_id)\n        if (sales) {\n            for (var i = 0; i < sales.length; i++) {\n                const sale = sales[i];\n                sale.medicine = await getMedicine(sale.medicine_id);\n            }\n            this.setState({ sales });\n        }\n\n    }\n    render() {\n        const classes = {\n            paper: {\n                marginTop: \"10px\",\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n            },\n            form: {\n                width: '100%',\n                marginTop: \"10px\"\n            },\n            submit: {\n                margin: \"10px\"\n            },\n            p_label: {\n                float: \"left\",\n                marginRight: \"10px\"\n            },\n            entry: {\n                display: \"inline\"\n            }\n        };\n        const prescriptions = this.state.prescriptions;\n        const sales = this.state.sales;\n        const prescriptionsHtml = prescriptions.map(prescription => {\n            return (\n                <Fragment>\n                    <tr>\n                        <td>{prescription.medicine.medicine_code}</td>\n                        <td>{prescription.medicine.medical_name}</td>\n                        <td>{prescription.medicine.commercial_name}</td>\n                        <td>{prescription.quantity}</td>\n                        <td>{currencyFormatter.format(prescription.medicine.cost * prescription.quantity)}</td>\n                        <td>{currencyFormatter.format(prescription.medicine.cost * prescription.quantity * (prescription.insurance_coverage / 100))}</td>\n                        <td>{currencyFormatter.format((prescription.medicine.cost * prescription.quantity) - (prescription.medicine.cost * prescription.quantity * (prescription.insurance_coverage / 100)))}</td>\n                    </tr>\n                </Fragment>\n            );\n        });\n\n        const salesHtml = sales.map(sale => {\n            return (\n                <Fragment>\n                    <tr>\n                        <td>{sale.medicine.medicine_code}</td>\n                        <td>{sale.medicine.medical_name}</td>\n                        <td>{sale.medicine.commercial_name}</td>\n                        <td>{sale.quantity}</td>\n                        <td>{currencyFormatter.format(sale.medicine.cost * sale.quantity)}</td>\n                        <td>N/A</td>\n                        <td>{currencyFormatter.format(sale.medicine.cost * sale.quantity)}</td>\n                    </tr>\n                </Fragment>\n            );\n        });\n\n        let subtotal = prescriptions.reduce((a, prescription) => a + (prescription.medicine.cost * prescription.quantity) - (prescription.medicine.cost * prescription.quantity * (prescription.insurance_coverage / 100)), 0);\n        subtotal += sales.reduce((a, sale) => a + (sale.medicine.cost * sale.quantity), 0)\n        const tax = subtotal * .055;\n        const total = subtotal * 1.055;\n        const totalHtml = (\n            <Fragment>\n                <tr>\n                    <td><pre> </pre></td>\n                    <td><pre> </pre></td>\n                    <td><pre> </pre></td>\n                    <td><pre> </pre></td>\n                    <td><pre> </pre></td>\n                    <td><pre> </pre></td>\n                    <td><pre> </pre></td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td>Subtotal:</td>\n                    <td>{currencyFormatter.format(subtotal)}</td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td>Tax (5.5%):</td>\n                    <td>{currencyFormatter.format(tax)}</td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td>Total:</td>\n                    <td>{currencyFormatter.format(total)}</td>\n                </tr>\n            </Fragment>\n        );\n\n        return (\n            <Container fluid className=\"card card-body bg-light\">\n                <Row>\n                    <Col>\n                        <div style={{ border: \"1px solid black\", padding: \"10px\" }}>\n                            <Container>\n                                <Row>\n                                    <Col sm=\"2\">\n                                        <img src={process.env.PUBLIC_URL + '/logo.png'} alt=\"logo image\" style={{ width: \"100px\" }}></img>\n                                    </Col>\n                                    <Col>\n                                        <h1>Peach Insurance</h1>\n                                        <h3>La Crosse, WI 54601</h3>\n                                        <label style={classes.p_label}>Website: </label>\n                                        <a href=\"http://138.49.101.87/peachinsurance\">138.49.101.87/peachinsurance</a>\n                                    </Col>\n                                </Row>\n                            </Container>\n                            <hr></hr>\n                            <div>\n                                <label style={classes.p_label}>Date: </label>\n                                <p class=\"entry\">{new Date(this.state.order.order_date).toDateString()}</p>\n                            </div>\n                            <div>\n                                <label style={classes.p_label}>Patient: </label>\n                                <p>{this.state.order.patient_first_name} {this.state.order.patient_last_name}</p>\n                            </div>\n                            {/* <div>\n                    <label style={classes.p_label}>Physician: </label>\n                    <p>{this.state.prescription.physician_first_name} {this.state.order.physician_last_name}</p>\n                    <hr></hr>\n                </div> */}\n                            <div>\n                                <table className=\"bill\" style={{ width: \"100%\" }}>\n                                    <tr>\n                                        <th>Item Code</th>\n                                        <th>Medical Name</th>\n                                        <th>Commercial Name</th>\n                                        <th>Quantity</th>\n                                        <th>Cost of Medicine</th>\n                                        <th>Insurance Payment</th>\n                                        <th>Patient Pays</th>\n\n                                    </tr>\n                                    {prescriptionsHtml}\n                                    {salesHtml}\n                                    {totalHtml}\n                                </table>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n\n}\n\nconst mapState = (state) => { return { user: state.user } };\nconst mapDispatch = { app_login };\n\nexport default connect(mapState, mapDispatch)(OrderBill);"]},"metadata":{},"sourceType":"module"}