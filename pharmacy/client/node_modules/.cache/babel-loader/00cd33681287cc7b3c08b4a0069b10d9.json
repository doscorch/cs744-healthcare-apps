{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/prescriptionDetails.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getPrescription } from './prescriptionsService';\nimport Icon from '@material-ui/core/Icon';\nimport { getPhysician } from '../physicians/physiciansService';\nimport { getPatient } from '../patients/patientsService';\nimport { getMedicine } from '../medicines/medicinesService';\nexport class PrescriptionDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      prescription: {},\n      medicine: {},\n      patient: {},\n      physician: {}\n    };\n  }\n\n  async componentDidMount() {\n    const prescription_id = this.props.match.params.prescription;\n    const prescription = await getPrescription(prescription_id);\n    this.setState({\n      prescription\n    });\n\n    if (prescription && prescription.medicine_id) {\n      const medicine = await getMedicine(prescription.medicine_id);\n\n      if (medicine) {\n        this.setState({\n          medicine\n        });\n      }\n    }\n\n    if (prescription && prescription.physician_id) {\n      const physician = await getPhysician(prescription.physician_id);\n\n      if (physician) {\n        this.setState({\n          physician\n        });\n      }\n    }\n\n    if (prescription && prescription.patient_id) {\n      const patient = await getPatient(prescription.patient_id);\n\n      if (patient) {\n        this.setState({\n          patient\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"card card-body bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, \"Send Insurance Request \", /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-clipboard-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 52\n      }\n    })))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Patient Name:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, prescription.patient_first_name, \" \", prescription.patient_last_name)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \"Date of Birth:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, prescription.patient_date_of_birth)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"Address:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, prescription.patien_address, \" \", prescription.patient_address)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Prescription:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, prescription.prescription)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Quantity:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, prescription.quantity)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, \"Cost:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, this.state.medicine ? currencyFormatter.format(this.state.medicine.cost) : 0)));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {\n  app_login\n};\nexport default connect(mapState, mapDispatch)(PrescriptionDetails);","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/prescriptionDetails.js"],"names":["React","Typography","Container","connect","app_login","getPrescription","Icon","getPhysician","getPatient","getMedicine","PrescriptionDetails","Component","state","prescription","medicine","patient","physician","componentDidMount","prescription_id","props","match","params","setState","medicine_id","physician_id","patient_id","render","patient_first_name","patient_last_name","patient_date_of_birth","patien_address","patient_address","quantity","currencyFormatter","format","cost","mapState","user","mapDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getPrescription } from './prescriptionsService';\nimport Icon from '@material-ui/core/Icon';\nimport { getPhysician } from '../physicians/physiciansService';\nimport { getPatient } from '../patients/patientsService';\nimport { getMedicine } from '../medicines/medicinesService';\n\nexport class PrescriptionDetails extends React.Component {\n\n    state = {\n        prescription: {},\n        medicine: {},\n        patient: {},\n        physician: {},\n    }\n\n    async componentDidMount() {\n        const prescription_id = this.props.match.params.prescription;\n        const prescription = await getPrescription(prescription_id);\n        this.setState({ prescription });\n\n        if (prescription && prescription.medicine_id) {\n            const medicine = await getMedicine(prescription.medicine_id)\n            if (medicine) {\n                this.setState({ medicine });\n            }\n        }\n        if (prescription && prescription.physician_id) {\n            const physician = await getPhysician(prescription.physician_id)\n            if (physician) {\n                this.setState({ physician });\n            }\n        }\n        if (prescription && prescription.patient_id) {\n            const patient = await getPatient(prescription.patient_id)\n            if (patient) {\n                this.setState({ patient });\n            }\n        }\n    }\n    render() {\n        return (\n            <Container fluid className=\"card card-body bg-light\">\n                <Row>\n                    <Col>\n                        <h5>Send Insurance Request <i class=\"fas fa-clipboard-check\"></i></h5>\n                    </Col>\n                </Row>\n                <hr />\n                <Row>\n                    <Col sm={2}>\n                        <b>Patient Name:</b>\n                    </Col>\n                    <Col>\n                        {prescription.patient_first_name} {prescription.patient_last_name}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={2}>\n                        <b>Date of Birth:</b>\n                    </Col>\n                    <Col>\n                        {prescription.patient_date_of_birth}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={2}>\n                        <b>Address:</b>\n                    </Col>\n                    <Col>\n                        {prescription.patien_address} {prescription.patient_address}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={2}>\n                        <b>Prescription:</b>\n                    </Col>\n                    <Col>\n                        {prescription.prescription}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={2}>\n                        <b>Quantity:</b>\n                    </Col>\n                    <Col>\n                        {prescription.quantity}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={2}>\n                        <b>Cost:</b>\n                    </Col>\n                    <Col>\n                        {this.state.medicine ? currencyFormatter.format(this.state.medicine.cost) : 0}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n\n}\n\nconst mapState = (state) => { return { user: state.user } };\nconst mapDispatch = { app_login };\n\nexport default connect(mapState, mapDispatch)(PrescriptionDetails);"]},"metadata":{},"sourceType":"module"}