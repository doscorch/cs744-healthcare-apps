{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/orders/orderDetails.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getOrder } from './ordersService';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { getPrescriptionsByOrderId } from '../prescriptions/prescriptionsService';\nimport { PrescriptionStatus } from '../models/prescription';\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\nexport class OrderDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: {},\n      prescriptions: []\n    };\n  }\n\n  async componentDidMount() {\n    const order_id = this.props.match.params.order;\n    const order = await getOrder(order_id);\n    this.setState({\n      order\n    });\n\n    if (order && order.order_id != -1) {\n      const prescriptions = await getPrescriptionsByOrderId(order.order_id);\n\n      if (prescriptions) {\n        this.setState({\n          prescriptions\n        });\n      }\n    }\n  }\n\n  render() {\n    const classes = {\n      paper: {\n        marginTop: \"10px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      form: {\n        width: '100%',\n        marginTop: \"10px\"\n      },\n      submit: {\n        margin: \"10px\"\n      },\n      p_label: {\n        float: \"left\",\n        marginRight: \"10px\"\n      },\n      entry: {\n        display: \"inline\"\n      }\n    };\n    const order = this.state.order;\n    const prescriptions = this.state.prescriptions;\n    const orderHTML = order.medicine_order_id ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, \"Order\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, \"Date:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, new Date(order.order_date).toDateString())), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, \"Patient Name:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, order.patient_first_name, \" \", order.patient_last_name))) : \"\";\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"card card-body bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, orderHTML, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, \"Prescriptions\")))), prescriptions.map(p => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }\n      }, \"Description:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 37\n        }\n      }, p.prescription))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }\n      }, \"Dosage:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 37\n        }\n      }, p.dosage))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 37\n        }\n      }, \"Quantity:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }\n      }, p.quantity))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 37\n        }\n      }, \"Refill:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }\n      }, p.refill))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 37\n        }\n      }, \"Status:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }\n      }, PrescriptionStatus.GetTranslation(p.order_status)))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }\n      }));\n    }));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {\n  app_login\n};\nexport default connect(mapState, mapDispatch)(OrderDetails);","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/orders/orderDetails.js"],"names":["React","Typography","connect","app_login","getOrder","Container","Col","Row","getPrescriptionsByOrderId","PrescriptionStatus","currencyFormatter","Intl","NumberFormat","style","currency","OrderDetails","Component","state","order","prescriptions","componentDidMount","order_id","props","match","params","setState","render","classes","paper","marginTop","display","flexDirection","alignItems","form","width","submit","margin","p_label","float","marginRight","entry","orderHTML","medicine_order_id","Date","order_date","toDateString","patient_first_name","patient_last_name","map","p","prescription","dosage","quantity","refill","GetTranslation","order_status","mapState","user","mapDispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,yBAAT,QAA0C,uCAA1C;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AAEA,MAAMC,iBAAiB,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AACrDC,EAAAA,KAAK,EAAE,UAD8C;AAErDC,EAAAA,QAAQ,EAAE;AAF2C,CAA/B,CAA1B;AAKA,OAAO,MAAMC,YAAN,SAA2Bf,KAAK,CAACgB,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAE9CC,KAF8C,GAEtC;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,aAAa,EAAE;AAFX,KAFsC;AAAA;;AAOvB,QAAjBC,iBAAiB,GAAG;AACtB,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBN,KAAzC;AACA,UAAMA,KAAK,GAAG,MAAMd,QAAQ,CAACiB,QAAD,CAA5B;AACA,SAAKI,QAAL,CAAc;AAAEP,MAAAA;AAAF,KAAd;;AAEA,QAAIA,KAAK,IAAIA,KAAK,CAACG,QAAN,IAAkB,CAAC,CAAhC,EAAmC;AAC/B,YAAMF,aAAa,GAAG,MAAMX,yBAAyB,CAACU,KAAK,CAACG,QAAP,CAArD;;AACA,UAAIF,aAAJ,EAAmB;AACf,aAAKM,QAAL,CAAc;AAAEN,UAAAA;AAAF,SAAd;AACH;AACJ;AACJ;;AACDO,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAE,MADR;AAEHC,QAAAA,OAAO,EAAE,MAFN;AAGHC,QAAAA,aAAa,EAAE,QAHZ;AAIHC,QAAAA,UAAU,EAAE;AAJT,OADK;AAOZC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE,MADL;AAEFL,QAAAA,SAAS,EAAE;AAFT,OAPM;AAWZM,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AADJ,OAXI;AAcZC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,WAAW,EAAE;AAFR,OAdG;AAkBZC,MAAAA,KAAK,EAAE;AACHV,QAAAA,OAAO,EAAE;AADN;AAlBK,KAAhB;AAsBA,UAAMZ,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AACA,UAAMC,aAAa,GAAG,KAAKF,KAAL,CAAWE,aAAjC;AACA,UAAMsB,SAAS,GAAGvB,KAAK,CAACwB,iBAAN,gBAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAJ,CADJ,CADJ,CAFJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,IAAIC,IAAJ,CAASzB,KAAK,CAAC0B,UAAf,EAA2BC,YAA3B,EADL,CAJJ,CAPJ,eAeI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK3B,KAAK,CAAC4B,kBADX,OACgC5B,KAAK,CAAC6B,iBADtC,CAJJ,CAfJ,CAFU,GA2BZ,EA3BN;AA6BA,wBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,yBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,SADL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAJ,CADJ,CADJ,CAHJ,EAQKtB,aAAa,CAAC6B,GAAd,CAAkBC,CAAC,IAAI;AACpB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,CAAC,CAACC,YAAT,CADJ,CAJJ,CADJ,eASI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,CAAC,CAACE,MAAT,CADJ,CAJJ,CATJ,eAiBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOF,CAAC,CAACG,QAAT,CADJ,CAJJ,CAjBJ,eAyBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOH,CAAC,CAACI,MAAT,CADJ,CAJJ,CAzBJ,eAiCI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO5C,kBAAkB,CAAC6C,cAAnB,CAAkCL,CAAC,CAACM,YAApC,CAAP,CADJ,CAJJ,CAjCJ,eAyCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzCJ,CADJ;AA6CH,KA9CA,CARL,CADJ;AA2DH;;AApI6C;;AAyIlD,MAAMC,QAAQ,GAAIvC,KAAD,IAAW;AAAE,SAAO;AAAEwC,IAAAA,IAAI,EAAExC,KAAK,CAACwC;AAAd,GAAP;AAA6B,CAA3D;;AACA,MAAMC,WAAW,GAAG;AAAEvD,EAAAA;AAAF,CAApB;AAEA,eAAeD,OAAO,CAACsD,QAAD,EAAWE,WAAX,CAAP,CAA+B3C,YAA/B,CAAf","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getOrder } from './ordersService';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { getPrescriptionsByOrderId } from '../prescriptions/prescriptionsService';\nimport { PrescriptionStatus } from '../models/prescription';\n\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n});\n\nexport class OrderDetails extends React.Component {\n\n    state = {\n        order: {},\n        prescriptions: [],\n    }\n\n    async componentDidMount() {\n        const order_id = this.props.match.params.order;\n        const order = await getOrder(order_id);\n        this.setState({ order });\n\n        if (order && order.order_id != -1) {\n            const prescriptions = await getPrescriptionsByOrderId(order.order_id)\n            if (prescriptions) {\n                this.setState({ prescriptions });\n            }\n        }\n    }\n    render() {\n        const classes = {\n            paper: {\n                marginTop: \"10px\",\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n            },\n            form: {\n                width: '100%',\n                marginTop: \"10px\"\n            },\n            submit: {\n                margin: \"10px\"\n            },\n            p_label: {\n                float: \"left\",\n                marginRight: \"10px\"\n            },\n            entry: {\n                display: \"inline\"\n            }\n        };\n        const order = this.state.order;\n        const prescriptions = this.state.prescriptions;\n        const orderHTML = order.medicine_order_id\n            ? (\n                <div>\n                    <hr></hr>\n                    <Row>\n                        <Col>\n                            <h5><span>Order</span></h5>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={3} >\n                            <span>Date:</span>\n                        </Col>\n                        <Col>\n                            {new Date(order.order_date).toDateString()}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={3} >\n                            <span>Patient Name:</span>\n                        </Col>\n                        <Col>\n                            {order.patient_first_name} {order.patient_last_name}\n                        </Col>\n                    </Row>\n                </div>\n            )\n            : \"\";\n\n        return (\n            <Container fluid className=\"card card-body bg-light\">\n                {orderHTML}\n                <hr />\n                <Row>\n                    <Col>\n                        <h5><span>Prescriptions</span></h5>\n                    </Col>\n                </Row>\n                {prescriptions.map(p => {\n                    return (\n                        <div>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Description:</span>\n                                </Col>\n                                <Col>\n                                    <span>{p.prescription}</span>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Dosage:</span>\n                                </Col>\n                                <Col>\n                                    <span>{p.dosage}</span>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Quantity:</span>\n                                </Col>\n                                <Col>\n                                    <span>{p.quantity}</span>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Refill:</span>\n                                </Col>\n                                <Col>\n                                    <span>{p.refill}</span>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Status:</span>\n                                </Col>\n                                <Col>\n                                    <span>{PrescriptionStatus.GetTranslation(p.order_status)}</span>\n                                </Col>\n                            </Row>\n                            <br />\n                        </div>\n                    )\n                })}\n\n            </Container>\n        );\n    }\n\n\n}\n\nconst mapState = (state) => { return { user: state.user } };\nconst mapDispatch = { app_login };\n\nexport default connect(mapState, mapDispatch)(OrderDetails);"]},"metadata":{},"sourceType":"module"}