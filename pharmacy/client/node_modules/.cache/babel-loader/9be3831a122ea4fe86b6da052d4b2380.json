{"ast":null,"code":"const Base = require('./base');\n\nclass AxiosService extends Base {\n  request(options, params) {\n    const config = Object.assign({\n      url: options.url,\n      method: options.method,\n      data: options.body,\n      headers: Object.assign({\n        Accept: 'application/json'\n      }, this.options.headers, options.headers)\n    }, params.connection);\n    return this.connection.request(config).then(res => res.data).catch(error => {\n      const response = error.response || error;\n      throw response instanceof Error ? response : response.data || response;\n    });\n  }\n\n}\n\nmodule.exports = AxiosService;","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/healthcare/client/node_modules/@feathersjs/rest-client/lib/axios.js"],"names":["Base","require","AxiosService","request","options","params","config","Object","assign","url","method","data","body","headers","Accept","connection","then","res","catch","error","response","Error","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,MAAMC,YAAN,SAA2BF,IAA3B,CAAgC;AAC9BG,EAAAA,OAAO,CAAEC,OAAF,EAAWC,MAAX,EAAmB;AACxB,UAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC3BC,MAAAA,GAAG,EAAEL,OAAO,CAACK,GADc;AAE3BC,MAAAA,MAAM,EAAEN,OAAO,CAACM,MAFW;AAG3BC,MAAAA,IAAI,EAAEP,OAAO,CAACQ,IAHa;AAI3BC,MAAAA,OAAO,EAAEN,MAAM,CAACC,MAAP,CAAc;AACrBM,QAAAA,MAAM,EAAE;AADa,OAAd,EAEN,KAAKV,OAAL,CAAaS,OAFP,EAEgBT,OAAO,CAACS,OAFxB;AAJkB,KAAd,EAOZR,MAAM,CAACU,UAPK,CAAf;AASA,WAAO,KAAKA,UAAL,CAAgBZ,OAAhB,CAAwBG,MAAxB,EACJU,IADI,CACCC,GAAG,IAAIA,GAAG,CAACN,IADZ,EAEJO,KAFI,CAEEC,KAAK,IAAI;AACd,YAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAN,IAAkBD,KAAnC;AAEA,YAAMC,QAAQ,YAAYC,KAApB,GAA4BD,QAA5B,GAAwCA,QAAQ,CAACT,IAAT,IAAiBS,QAA/D;AACD,KANI,CAAP;AAOD;;AAlB6B;;AAqBhCE,MAAM,CAACC,OAAP,GAAiBrB,YAAjB","sourcesContent":["const Base = require('./base');\n\nclass AxiosService extends Base {\n  request (options, params) {\n    const config = Object.assign({\n      url: options.url,\n      method: options.method,\n      data: options.body,\n      headers: Object.assign({\n        Accept: 'application/json'\n      }, this.options.headers, options.headers)\n    }, params.connection);\n\n    return this.connection.request(config)\n      .then(res => res.data)\n      .catch(error => {\n        const response = error.response || error;\n\n        throw response instanceof Error ? response : (response.data || response);\n      });\n  }\n}\n\nmodule.exports = AxiosService;\n"]},"metadata":{},"sourceType":"script"}