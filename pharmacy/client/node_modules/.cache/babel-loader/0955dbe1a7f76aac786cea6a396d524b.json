{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/physicians/physicianManager.js\";\nimport * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { Select, MenuItem } from '@material-ui/core';\nimport { getPhysicians, patchPhysician } from '../auth/usersService';\nimport { PhysicianType, PhysicianStatus } from '../models/user';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Route, Link } from 'react-router-dom';\nexport default class PhysicianManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: []\n    };\n\n    this.getData = () => {\n      return getPhysicians().then(users => {\n        this.setState({\n          users: users\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const tableRef = React.createRef();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      as: Link,\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 52\n      }\n    }), \" Register Physician\"), /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef,\n      options: {\n        sorting: true,\n        search: true,\n        paging: false\n      },\n      title: \"Physicians\",\n      columns: [// { title: 'Id', field: '_id' },\n      {\n        title: 'First Name',\n        field: 'first_name',\n        validate: u => u.first_name == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Last Name',\n        field: 'last_name',\n        validate: u => u.last_name == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Healthcare Institution',\n        field: 'healthcare_institution',\n        validate: u => u.healthcare_institution == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'License Number',\n        field: 'licence_number',\n        validate: u => u.licence_number == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }],\n      data: this.state.users,\n      editable: {\n        onRowUpdate: (newData, oldData) => {\n          return patchPhysician(newData.user_id, newData).then(_ => this.getData());\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/physicians/physicianManager.js"],"names":["React","MaterialTable","Select","MenuItem","getPhysicians","patchPhysician","PhysicianType","PhysicianStatus","Navbar","Nav","Route","Link","PhysicianManager","Component","state","users","getData","then","setState","componentDidMount","render","tableRef","createRef","sorting","search","paging","title","field","validate","u","first_name","isValid","helperText","last_name","healthcare_institution","licence_number","onRowUpdate","newData","oldData","user_id","_"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { Select, MenuItem } from '@material-ui/core'\nimport { getPhysicians, patchPhysician } from '../auth/usersService';\nimport { PhysicianType, PhysicianStatus } from '../models/user';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Route, Link } from 'react-router-dom';\n\nexport default class PhysicianManager extends React.Component {\n    state = {\n        users: []\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData = () => {\n        return getPhysicians()\n            .then(users => {\n                this.setState({ users: users })\n            })\n    }\n\n    render() {\n        const tableRef = React.createRef();\n        return (\n            <div>\n                <Nav.Link as={Link} to=\"/register\"><i className=\"fas fa-plus\"></i> Register Physician</Nav.Link>\n                <MaterialTable\n                    tableRef={tableRef}\n                    options={{\n                        sorting: true,\n                        search: true,\n                        paging: false,\n                    }}\n                    title=\"Physicians\"\n                    columns={[\n                        // { title: 'Id', field: '_id' },\n                        { title: 'First Name', field: 'first_name', validate: u => u.first_name == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                        { title: 'Last Name', field: 'last_name', validate: u => u.last_name == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                        { title: 'Healthcare Institution', field: 'healthcare_institution', validate: u => u.healthcare_institution == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                        { title: 'License Number', field: 'licence_number', validate: u => u.licence_number == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                    ]}\n                    data={this.state.users}\n                    editable={{\n                        onRowUpdate: (newData, oldData) => {\n                            return patchPhysician(newData.user_id, newData).then(_ => this.getData())\n                        },\n                    }}\n                />\n            </div>\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}