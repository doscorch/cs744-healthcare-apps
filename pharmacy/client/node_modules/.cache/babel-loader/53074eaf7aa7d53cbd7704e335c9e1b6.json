{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/orders/orderDetails.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getOrder } from './ordersService';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { getPrescriptionsByOrderId } from '../prescriptions/prescriptionsService';\nimport { PrescriptionStatus } from '../models/prescription';\nimport { getMedicine } from '../medicines/medicinesService';\nimport { getSalesByOrderId } from '../sales/salesService';\nimport { Card } from '@material-ui/core';\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\nexport class OrderDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: {},\n      prescriptions: [],\n      sales: []\n    };\n  }\n\n  async componentDidMount() {\n    const order_id = this.props.match.params.order;\n    const order = await getOrder(order_id);\n    this.setState({\n      order\n    });\n\n    if (order && order.order_id != -1) {\n      const prescriptions = await getPrescriptionsByOrderId(order.order_id);\n\n      if (prescriptions) {\n        this.setState({\n          prescriptions\n        });\n      }\n\n      const sales = await getSalesByOrderId(order.order_id);\n\n      if (sales) {\n        sales = sales.map(async s => {\n          return { ...s,\n            medicine: await getMedicine(s.medicine_id)\n          };\n        });\n        this.setState({\n          sales\n        });\n      }\n    }\n  }\n\n  render() {\n    const classes = {\n      paper: {\n        marginTop: \"10px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      form: {\n        width: '100%',\n        marginTop: \"10px\"\n      },\n      submit: {\n        margin: \"10px\"\n      },\n      p_label: {\n        float: \"left\",\n        marginRight: \"10px\"\n      },\n      entry: {\n        display: \"inline\"\n      }\n    };\n    const order = this.state.order;\n    const prescriptions = this.state.prescriptions;\n    const sales = this.state.sales;\n    const orderHTML = order.medicine_order_id ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, \"Order\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, \"Date:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, new Date(order.order_date).toDateString())), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"Patient Name:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, order.patient_first_name, \" \", order.patient_last_name))) : \"\";\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"card card-body bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, orderHTML, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), prescriptions.length ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }, \"Prescriptions\")))) : \"\", prescriptions.map(p => {\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 37\n        }\n      }, \"Description:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 37\n        }\n      }, p.prescription))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 37\n        }\n      }, \"Dosage:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }\n      }, p.dosage))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 37\n        }\n      }, \"Quantity:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 37\n        }\n      }, p.quantity))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 37\n        }\n      }, \"Refill:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 37\n        }\n      }, p.refill))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 37\n        }\n      }, \"Status:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 37\n        }\n      }, PrescriptionStatus.GetTranslation(p.order_status)))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }\n      }));\n    }), sales.length ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }, \"Sales\")))) : \"\", sales.map(s => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 37\n        }\n      }, \"Item Number:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 37\n        }\n      }, s.medicine.medicine_code))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 37\n        }\n      }, \"Medical Name:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 37\n        }\n      }, s.medicine.medical_name))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 37\n        }\n      }, \"Commercial Name:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 37\n        }\n      }, s.medicine.commercial_name))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 37\n        }\n      }, \"Quantity:\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 37\n        }\n      }, s.quantity))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 29\n        }\n      }));\n    }));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {\n  app_login\n};\nexport default connect(mapState, mapDispatch)(OrderDetails);","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/orders/orderDetails.js"],"names":["React","Typography","connect","app_login","getOrder","Container","Col","Row","getPrescriptionsByOrderId","PrescriptionStatus","getMedicine","getSalesByOrderId","Card","currencyFormatter","Intl","NumberFormat","style","currency","OrderDetails","Component","state","order","prescriptions","sales","componentDidMount","order_id","props","match","params","setState","map","s","medicine","medicine_id","render","classes","paper","marginTop","display","flexDirection","alignItems","form","width","submit","margin","p_label","float","marginRight","entry","orderHTML","medicine_order_id","Date","order_date","toDateString","patient_first_name","patient_last_name","length","p","prescription","dosage","quantity","refill","GetTranslation","order_status","medicine_code","medical_name","commercial_name","mapState","user","mapDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getOrder } from './ordersService';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { getPrescriptionsByOrderId } from '../prescriptions/prescriptionsService';\nimport { PrescriptionStatus } from '../models/prescription';\nimport { getMedicine } from '../medicines/medicinesService';\nimport { getSalesByOrderId } from '../sales/salesService';\nimport { Card } from '@material-ui/core';\n\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n});\n\nexport class OrderDetails extends React.Component {\n\n    state = {\n        order: {},\n        prescriptions: [],\n        sales: [],\n    }\n\n    async componentDidMount() {\n        const order_id = this.props.match.params.order;\n        const order = await getOrder(order_id);\n        this.setState({ order });\n\n        if (order && order.order_id != -1) {\n            const prescriptions = await getPrescriptionsByOrderId(order.order_id)\n            if (prescriptions) {\n                this.setState({ prescriptions });\n            }\n            const sales = await getSalesByOrderId(order.order_id)\n            if (sales) {\n                sales = sales.map(async s => { return { ...s, medicine: await getMedicine(s.medicine_id) } })\n                this.setState({ sales });\n            }\n        }\n    }\n    render() {\n        const classes = {\n            paper: {\n                marginTop: \"10px\",\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n            },\n            form: {\n                width: '100%',\n                marginTop: \"10px\"\n            },\n            submit: {\n                margin: \"10px\"\n            },\n            p_label: {\n                float: \"left\",\n                marginRight: \"10px\"\n            },\n            entry: {\n                display: \"inline\"\n            }\n        };\n        const order = this.state.order;\n        const prescriptions = this.state.prescriptions;\n        const sales = this.state.sales;\n\n        const orderHTML = order.medicine_order_id\n            ? (\n                <div>\n                    <hr></hr>\n                    <Row>\n                        <Col>\n                            <h5><span>Order</span></h5>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={3} >\n                            <span>Date:</span>\n                        </Col>\n                        <Col>\n                            {new Date(order.order_date).toDateString()}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={3} >\n                            <span>Patient Name:</span>\n                        </Col>\n                        <Col>\n                            {order.patient_first_name} {order.patient_last_name}\n                        </Col>\n                    </Row>\n                </div>\n            )\n            : \"\";\n\n        return (\n            <Container fluid className=\"card card-body bg-light\">\n                {orderHTML}\n\n                <hr />\n\n                {prescriptions.length\n                    ? (\n                        <Row>\n                            <Col>\n                                <h5><span>Prescriptions</span></h5>\n                            </Col>\n                        </Row>\n                    )\n                    : \"\"}\n                {prescriptions.map(p => {\n                    return (\n                        <Card>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Description:</span>\n                                </Col>\n                                <Col>\n                                    <span>{p.prescription}</span>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Dosage:</span>\n                                </Col>\n                                <Col>\n                                    <span>{p.dosage}</span>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Quantity:</span>\n                                </Col>\n                                <Col>\n                                    <span>{p.quantity}</span>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Refill:</span>\n                                </Col>\n                                <Col>\n                                    <span>{p.refill}</span>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Status:</span>\n                                </Col>\n                                <Col>\n                                    <span>{PrescriptionStatus.GetTranslation(p.order_status)}</span>\n                                </Col>\n                            </Row>\n                            <br />\n                        </Card>\n                    )\n                })}\n                {sales.length\n                    ? (\n                        <Row>\n                            <Col>\n                                <h5><span>Sales</span></h5>\n                            </Col>\n                        </Row>\n                    )\n                    : \"\"}\n                {sales.map(s => {\n                    return (\n                        <div>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Item Number:</span>\n                                </Col>\n                                <Col>\n                                    <span>{s.medicine.medicine_code}</span>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Medical Name:</span>\n                                </Col>\n                                <Col>\n                                    <span>{s.medicine.medical_name}</span>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Commercial Name:</span>\n                                </Col>\n                                <Col>\n                                    <span>{s.medicine.commercial_name}</span>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col sm=\"2\">\n                                    <span>Quantity:</span>\n                                </Col>\n                                <Col>\n                                    <span>{s.quantity}</span>\n                                </Col>\n                            </Row>\n                            <br />\n                        </div>\n                    )\n                })}\n\n            </Container>\n        );\n    }\n\n\n}\n\nconst mapState = (state) => { return { user: state.user } };\nconst mapDispatch = { app_login };\n\nexport default connect(mapState, mapDispatch)(OrderDetails);"]},"metadata":{},"sourceType":"module"}