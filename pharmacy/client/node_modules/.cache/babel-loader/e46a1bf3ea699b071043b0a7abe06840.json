{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/verifyPatient.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getPrescription } from './prescriptionsService';\nimport Icon from '@material-ui/core/Icon';\nimport { Button, Container, Col, Row } from 'react-bootstrap';\nimport Alert from '@material-ui/lab/Alert';\nimport MaterialTable from 'material-table';\nimport TextField from '@material-ui/core/TextField';\nimport { createPatient, getPatients, patchPatient, deletePatient } from './patientsService';\nimport US_States from '../models/states';\nimport { Select, MenuItem } from '@material-ui/core';\nconst initState = {\n  prescription: \"\"\n};\nexport class VerifyPatient extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initState,\n      prescription: \"\",\n      patients: []\n    };\n\n    this.changeForm = e => {\n      let propName = e.target.name;\n      let propValue = e.target.value;\n      let state = { ...this.state\n      };\n      state[propName] = propValue;\n      this.setState(state);\n    };\n  }\n\n  async componentDidMount() {\n    const prescription_id = this.props.match.params.prescription;\n    const prescription = await getPrescription(prescription_id);\n\n    if (prescription.error) {\n      this.setState({\n        error: prescription.error\n      });\n      return;\n    }\n\n    let state = { ...this.state\n    };\n    state['prescription'] = prescription;\n    this.setState(state);\n  }\n\n  render() {\n    const prescription = this.state.prescription;\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"card card-body bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef,\n      options: {\n        sorting: true,\n        search: true,\n        paging: false,\n        editable: true\n      },\n      title: \"Patients\",\n      columns: [{\n        title: 'First name',\n        field: 'first_name',\n        validate: u => u.first_name == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Last name',\n        field: 'last_name',\n        validate: u => u.last_name == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Date of birth',\n        type: 'date',\n        field: 'birth_date',\n        validate: u => u.birth_date == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'Address',\n        field: 'address',\n        validate: u => u.address == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'City',\n        field: 'city',\n        validate: u => u.city == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        }\n      }, {\n        title: 'State',\n        field: 'state',\n        render: u => /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 50\n          }\n        }, u.state),\n        validate: u => u.state == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : {\n          isValid: true\n        },\n        editComponent: props => /*#__PURE__*/React.createElement(Select, {\n          id: \"state\",\n          value: props.value,\n          onChange: e => props.onChange(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 41\n          }\n        }, US_States.map(s => /*#__PURE__*/React.createElement(MenuItem, {\n          value: s.abbreviation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 65\n          }\n        }, s.abbreviation)))\n      }, {\n        title: 'Zipcode',\n        field: 'zipcode',\n        validate: u => u.zipcode == \"\" ? {\n          isValid: false,\n          helperText: \"required\"\n        } : !zipRegex.test(u.zipcode) && u.zipcode != undefined ? {\n          isValid: false,\n          helperText: \"Invalid format (NNNNN, NNNNN-NNNN)\"\n        } : {\n          isValid: true\n        }\n      }],\n      data: this.state.patients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 26\n      }\n    }, \"Patient Name\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, prescription.patient_first_name, \" \", prescription.patient_last_name), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, prescription.patient_first_name, \" \", prescription.patient_last_name)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 26\n      }\n    }, \"Date of Birth\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, prescription.patient_date_of_birth), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, prescription.patient_date_of_birth)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 26\n      }\n    }, \"Address\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, prescription.patient_address, \" \", prescription.patient_address), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, prescription.patient_address, \" \", prescription.patient_address)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Verify\"))));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {\n  app_login\n};\nexport default connect(mapState, mapDispatch)(VerifyPatient);","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/verifyPatient.js"],"names":["React","Typography","connect","app_login","getPrescription","Icon","Button","Container","Col","Row","Alert","MaterialTable","TextField","createPatient","getPatients","patchPatient","deletePatient","US_States","Select","MenuItem","initState","prescription","VerifyPatient","Component","state","patients","changeForm","e","propName","target","name","propValue","value","setState","componentDidMount","prescription_id","props","match","params","error","render","tableRef","sorting","search","paging","editable","title","field","validate","u","first_name","isValid","helperText","last_name","type","birth_date","address","city","editComponent","onChange","map","s","abbreviation","zipcode","zipRegex","test","undefined","patient_first_name","patient_last_name","patient_date_of_birth","patient_address","mapState","user","mapDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getPrescription } from './prescriptionsService';\nimport Icon from '@material-ui/core/Icon';\nimport { Button, Container, Col, Row } from 'react-bootstrap';\nimport Alert from '@material-ui/lab/Alert';\nimport MaterialTable from 'material-table';\nimport TextField from '@material-ui/core/TextField';\nimport { createPatient, getPatients, patchPatient, deletePatient } from './patientsService';\nimport US_States from '../models/states';\nimport { Select, MenuItem } from '@material-ui/core'\n\nconst initState = {\n    prescription: \"\"\n}\n\nexport class VerifyPatient extends React.Component {\n\n    state = {\n        ...initState,\n        prescription: \"\",\n        patients: []\n    }\n\n    changeForm = (e) => {\n        let propName = e.target.name;\n        let propValue = e.target.value;\n        let state = { ...this.state };\n        state[propName] = propValue;\n        this.setState(state);\n    }\n\n    async componentDidMount() {\n        const prescription_id = this.props.match.params.prescription;\n        const prescription = await getPrescription(prescription_id);\n        if (prescription.error) {\n            this.setState({ error: prescription.error });\n            return;\n        }\n        let state = { ...this.state };\n        state['prescription'] = prescription;\n        this.setState(state);\n    }\n    render() {\n        const prescription = this.state.prescription;\n        return (\n            <Container className=\"card card-body bg-light\">\n                <Row>\n                    <Col>\n                        <MaterialTable\n                            tableRef={tableRef}\n                            options={{\n                                sorting: true,\n                                search: true,\n                                paging: false,\n                                editable: true,\n                            }}\n                            title=\"Patients\"\n                            columns={[\n                                { title: 'First name', field: 'first_name', validate: u => u.first_name == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                                { title: 'Last name', field: 'last_name', validate: u => u.last_name == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                                { title: 'Date of birth', type: 'date', field: 'birth_date', validate: u => u.birth_date == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                                { title: 'Address', field: 'address', validate: u => u.address == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                                { title: 'City', field: 'city', validate: u => u.city == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true } },\n                                {\n                                    title: 'State',\n                                    field: 'state',\n                                    render: u => <span>{u.state}</span>,\n                                    validate: u => u.state == \"\" ? { isValid: false, helperText: \"required\" } : { isValid: true },\n                                    editComponent: props => (\n                                        <Select\n                                            id=\"state\"\n                                            value={props.value}\n                                            onChange={e => props.onChange(e.target.value)}\n                                        >\n                                            {US_States.map(s => <MenuItem value={s.abbreviation}>{s.abbreviation}</MenuItem>)}\n                                        </Select>),\n                                },\n                                { title: 'Zipcode', field: 'zipcode', validate: u => u.zipcode == \"\" ? { isValid: false, helperText: \"required\" } : (!zipRegex.test(u.zipcode) && u.zipcode != undefined ? { isValid: false, helperText: \"Invalid format (NNNNN, NNNNN-NNNN)\" } : { isValid: true }) },\n                            ]}\n                            data={this.state.patients}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col><b>Patient Name</b></Col>\n                    <Col>{prescription.patient_first_name} {prescription.patient_last_name}</Col>\n                    <Col>{prescription.patient_first_name} {prescription.patient_last_name}</Col>\n                </Row>\n                <Row>\n                    <Col><b>Date of Birth</b></Col>\n                    <Col>{prescription.patient_date_of_birth}</Col>\n                    <Col>{prescription.patient_date_of_birth}</Col>\n                </Row>\n                <Row>\n                    <Col><b>Address</b></Col>\n                    <Col>{prescription.patient_address} {prescription.patient_address}</Col>\n                    <Col>{prescription.patient_address} {prescription.patient_address}</Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Button>Verify</Button>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n\n}\n\nconst mapState = (state) => { return { user: state.user } };\nconst mapDispatch = { app_login };\n\nexport default connect(mapState, mapDispatch)(VerifyPatient);"]},"metadata":{},"sourceType":"module"}