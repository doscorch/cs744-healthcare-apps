{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/verifyInsuranceRequest.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getPrescription, patchPrescription, sendInsuranceRequest } from './prescriptionsService';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { Button } from '@material-ui/core';\nimport { getMedicines } from '../medicines/medicinesService';\nimport Alert from '@material-ui/lab/Alert';\nimport { PrescriptionStatus } from '../models/prescription';\nconst initState = {\n  prescription: \"\"\n};\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\nexport class VerifyInsuranceRequest extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initState,\n      prescription: \"\",\n      error: \"\",\n      success: \"\"\n    };\n\n    this.changeForm = e => {\n      let propName = e.target.name;\n      let propValue = e.target.value;\n      let state = { ...this.state\n      };\n      state[propName] = propValue;\n      this.setState(state);\n    };\n\n    this.send = () => {\n      const prescription = this.state.prescription;\n      sendInsuranceRequest(prescription.prescription_id).then(_ => {\n        patchPrescription(prescription.prescription_id, {\n          order_status: PrescriptionStatus.Pending_Insurance\n        }).then(_ => {\n          this.setState({\n            success: \"Insurance Request Sent\"\n          });\n        });\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const prescription_id = this.props.match.params.prescription;\n    const prescription = await getPrescription(prescription_id);\n\n    if (prescription.error) {\n      this.setState({\n        error: prescription.error\n      });\n      return;\n    }\n\n    let state = { ...this.state\n    };\n    state['prescription'] = prescription;\n    this.setState(state);\n    getMedicines().then(ms => this.setState({\n      medicine: ms.find(m => m.medicine_id == prescription.medicine_id)\n    }));\n  }\n\n  render() {\n    const prescription = this.state.prescription;\n    let error = this.state.error ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 40\n      }\n    }, this.state.error) : \"\";\n    let success = this.state.success ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 44\n      }\n    }, this.state.success) : \"\";\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"card card-body bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, \"Send Insurance Request \", /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-clipboard-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 52\n      }\n    })))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Patient Name:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, prescription.patient_first_name, \" \", prescription.patient_last_name)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"Date of Birth:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, prescription.patient_date_of_birth)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, \"Address:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, prescription.patien_address, \" \", prescription.patient_address)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, \"Prescription:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, prescription.prescription)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, \"Quantity:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, prescription.quantity)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, \"Cost:\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, this.state.medicine ? currencyFormatter.format(this.state.medicine.cost) : 0)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.send,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"Send Insurance Request\", /*#__PURE__*/React.createElement(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 111\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-paper-plane\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 123\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, error, success)));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {\n  app_login\n};\nexport default connect(mapState, mapDispatch)(VerifyInsuranceRequest);","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/verifyInsuranceRequest.js"],"names":["React","connect","app_login","getPrescription","patchPrescription","sendInsuranceRequest","Container","Col","Row","Button","getMedicines","Alert","PrescriptionStatus","initState","prescription","currencyFormatter","Intl","NumberFormat","style","currency","VerifyInsuranceRequest","Component","state","error","success","changeForm","e","propName","target","name","propValue","value","setState","send","prescription_id","then","_","order_status","Pending_Insurance","componentDidMount","props","match","params","ms","medicine","find","m","medicine_id","render","patient_first_name","patient_last_name","patient_date_of_birth","patien_address","patient_address","quantity","format","cost","mapState","user","mapDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getPrescription, patchPrescription, sendInsuranceRequest } from './prescriptionsService';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { Button } from '@material-ui/core';\nimport { getMedicines } from '../medicines/medicinesService';\nimport Alert from '@material-ui/lab/Alert';\nimport { PrescriptionStatus } from '../models/prescription';\n\nconst initState = {\n    prescription: \"\"\n}\n\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n});\n\nexport class VerifyInsuranceRequest extends React.Component {\n\n    state = {\n        ...initState,\n        prescription: \"\",\n        error: \"\",\n        success: \"\"\n    }\n\n    changeForm = (e) => {\n        let propName = e.target.name;\n        let propValue = e.target.value;\n        let state = { ...this.state };\n        state[propName] = propValue;\n        this.setState(state);\n    }\n\n    async componentDidMount() {\n        const prescription_id = this.props.match.params.prescription;\n        const prescription = await getPrescription(prescription_id);\n        if (prescription.error) {\n            this.setState({ error: prescription.error });\n            return;\n        }\n        let state = { ...this.state };\n        state['prescription'] = prescription;\n        this.setState(state);\n\n        getMedicines().then(ms => this.setState({ medicine: ms.find(m => m.medicine_id == prescription.medicine_id) }))\n    }\n\n    send = () => {\n        const prescription = this.state.prescription;\n        sendInsuranceRequest(prescription.prescription_id).then(_ => {\n            patchPrescription(prescription.prescription_id, { order_status: PrescriptionStatus.Pending_Insurance }).then(_ => {\n                this.setState({ success: \"Insurance Request Sent\" })\n            })\n        })\n    }\n\n    render() {\n        const prescription = this.state.prescription\n        let error = this.state.error ? <Alert severity=\"error\">{this.state.error}</Alert> : \"\";\n        let success = this.state.success ? <Alert severity=\"success\">{this.state.success}</Alert> : \"\";\n        return (\n            <Container fluid className=\"card card-body bg-light\">\n                <Row>\n                    <Col>\n                        <h5>Send Insurance Request <i class=\"fas fa-clipboard-check\"></i></h5>\n                    </Col>\n                </Row>\n                <hr />\n                <Row>\n                    <Col sm={2}>\n                        <b>Patient Name:</b>\n                    </Col>\n                    <Col>\n                        {prescription.patient_first_name} {prescription.patient_last_name}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={2}>\n                        <b>Date of Birth:</b>\n                    </Col>\n                    <Col>\n                        {prescription.patient_date_of_birth}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={2}>\n                        <b>Address:</b>\n                    </Col>\n                    <Col>\n                        {prescription.patien_address} {prescription.patient_address}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={2}>\n                        <b>Prescription:</b>\n                    </Col>\n                    <Col>\n                        {prescription.prescription}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={2}>\n                        <b>Quantity:</b>\n                    </Col>\n                    <Col>\n                        {prescription.quantity}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={2}>\n                        <b>Cost:</b>\n                    </Col>\n                    <Col>\n                        {this.state.medicine ? currencyFormatter.format(this.state.medicine.cost) : 0}\n                    </Col>\n                </Row>\n                <br />\n                <Row>\n                    <Col>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.send}>Send Insurance Request<pre> </pre><i class=\"fas fa-paper-plane\"></i></Button>\n                    </Col>\n\n                </Row>\n                <Row>\n                    <Col>\n                        {error}\n                        {success}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n\n}\n\nconst mapState = (state) => { return { user: state.user } };\nconst mapDispatch = { app_login };\n\nexport default connect(mapState, mapDispatch)(VerifyInsuranceRequest);"]},"metadata":{},"sourceType":"module"}