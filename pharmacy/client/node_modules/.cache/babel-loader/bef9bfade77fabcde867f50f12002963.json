{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/verifyInsuranceRequest.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getPrescription } from './prescriptionsService';\nimport Icon from '@material-ui/core/Icon';\nconst initState = {\n  prescription: \"\"\n};\nexport class VerifyInsuranceRequest extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initState,\n      prescription: \"\",\n      error: \"\",\n      success: \"\"\n    };\n\n    this.changeForm = e => {\n      let propName = e.target.name;\n      let propValue = e.target.value;\n      let state = { ...this.state\n      };\n      state[propName] = propValue;\n      this.setState(state);\n    };\n  }\n\n  async componentDidMount() {\n    const prescription_id = this.props.match.params.prescription;\n    const prescription = await getPrescription(prescription_id);\n\n    if (prescription.error) {\n      this.setState({\n        error: prescription.error\n      });\n      return;\n    }\n\n    let state = { ...this.state\n    };\n    state['prescription'] = prescription;\n    this.setState(state);\n  }\n\n  render() {\n    const prescription = this.state.prescription;\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"card card-body bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"Verify Insurance Request \", /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-clipboard-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 54\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Patient Name\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, prescription.patient_first_name, \" \", prescription.patient_last_name)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Date of Birth\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, prescription.patient_date_of_birth)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, prescription.patien_address, \" \", prescription.patient_address)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"Prescription\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, prescription.prescription)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, prescription.quantity)));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {\n  app_login\n};\nexport default connect(mapState, mapDispatch)(VerifyInsuranceRequest);","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/verifyInsuranceRequest.js"],"names":["React","Typography","Container","Alert","connect","app_login","getPrescription","Icon","initState","prescription","VerifyInsuranceRequest","Component","state","error","success","changeForm","e","propName","target","name","propValue","value","setState","componentDidMount","prescription_id","props","match","params","render","patient_first_name","patient_last_name","patient_date_of_birth","patien_address","patient_address","quantity","mapState","user","mapDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Alert from '@material-ui/lab/Alert';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { getPrescription } from './prescriptionsService';\nimport Icon from '@material-ui/core/Icon';\n\nconst initState = {\n    prescription: \"\"\n}\n\nexport class VerifyInsuranceRequest extends React.Component {\n\n    state = {\n        ...initState,\n        prescription: \"\",\n        error: \"\",\n        success: \"\"\n    }\n\n    changeForm = (e) => {\n        let propName = e.target.name;\n        let propValue = e.target.value;\n        let state = { ...this.state };\n        state[propName] = propValue;\n        this.setState(state);\n    }\n\n    async componentDidMount() {\n        const prescription_id = this.props.match.params.prescription;\n        const prescription = await getPrescription(prescription_id);\n        if (prescription.error) {\n            this.setState({ error: prescription.error });\n            return;\n        }\n        let state = { ...this.state };\n        state['prescription'] = prescription;\n        this.setState(state);\n    }\n    render() {\n        const prescription = this.state.prescription\n\n        return (\n            <Container fluid className=\"card card-body bg-light\">\n                <Row>\n                    <Col>\n                        <h6>Verify Insurance Request <i class=\"fas fa-clipboard-check\"></i></h6>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        Patient Name\n                    </Col>\n                    <Col>\n                        {prescription.patient_first_name} {prescription.patient_last_name}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        Date of Birth\n                    </Col>\n                    <Col>\n                        {prescription.patient_date_of_birth}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        Address\n                    </Col>\n                    <Col>\n                        {prescription.patien_address} {prescription.patient_address}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        Prescription\n                    </Col>\n                    <Col>\n                        {prescription.prescription}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        Quantity\n                    </Col>\n                    <Col>\n                        {prescription.quantity}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n\n}\n\nconst mapState = (state) => { return { user: state.user } };\nconst mapDispatch = { app_login };\n\nexport default connect(mapState, mapDispatch)(VerifyInsuranceRequest);"]},"metadata":{},"sourceType":"module"}