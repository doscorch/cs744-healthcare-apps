{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/orders/addOTC.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport MaterialTable from 'material-table';\nimport { PrescriptionStatus } from '../models/prescription';\nimport { getMedicines, patchMedicine } from '../medicines/medicinesService';\nimport { Button, Input, InputLabel } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nconst initState = {\n  prescription: \"\"\n};\nexport class ADDOTC extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initState,\n      medicines: [],\n      quantity: 1\n    };\n\n    this.changeForm = e => {\n      let propName = e.target.name;\n      let propValue = e.target.value;\n      let state = { ...this.state\n      };\n      state[propName] = propValue;\n      this.setState(state);\n    };\n\n    this.process = () => {\n      if (this.state.quantity < 0) {\n        this.setState({\n          error: \"please enter a valid quantity\"\n        });\n      } else {\n        this.setState({\n          success: \"added otc medicine to order\"\n        });\n      }\n    };\n\n    this.clearMedicine = () => {\n      this.setState({\n        medicine: undefined\n      });\n    };\n  }\n\n  async componentDidMount() {\n    getMedicines().then(medicines => {\n      medicines = medicines.filter(m => !m.requires_prescription);\n      this.setState({\n        medicines: medicines\n      });\n    });\n  }\n\n  render() {\n    const tableRef1 = React.createRef();\n    let error = this.state.error ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 40\n      }\n    }, this.state.error) : \"\";\n    let success = this.state.success ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 44\n      }\n    }, this.state.success) : \"\";\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"card card-body bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 26\n      }\n    }, \"Add OTC Medicine \", /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-prescription-bottle-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 47\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), this.state.medicine ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, this.state.medicine.medical_name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, this.state.medicine.quantity), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.clearMedicine,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, \"X\")) : /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef1,\n      options: {\n        sorting: true,\n        search: true,\n        paging: true,\n        editable: false,\n        pageSize: 5\n      },\n      title: \"Medicine Stock\",\n      columns: [{\n        title: 'Medical Name',\n        field: \"medical_name\"\n      }, {\n        title: 'Commercial Name',\n        field: \"commercial_name\"\n      }, {\n        title: 'Type',\n        field: 'medicine_type',\n        lookup: {\n          1: 'capsule',\n          2: 'tablet',\n          3: 'liquid'\n        }\n      }, {\n        title: 'Recommended Dosage',\n        field: \"recommended_dosage\"\n      }, {\n        title: 'Quantity Available',\n        field: \"quantity\"\n      }],\n      data: this.state.medicines,\n      actions: [{\n        icon: 'check',\n        tooltip: 'Use',\n        onClick: (event, row) => {\n          this.setState({\n            medicine: row\n          });\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, \"Quantity Needed:\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"value\",\n      type: \"number\",\n      value: this.state.quantity,\n      name: \"quantity\",\n      onChange: this.changeForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: !this.state.medicine || this.state.success || this.state.error,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.process,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"Add to Order\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, error, success)));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {\n  app_login\n};\nexport default connect(mapState, mapDispatch)(ADDOTC);","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/orders/addOTC.js"],"names":["React","connect","app_login","Container","Col","Row","MaterialTable","PrescriptionStatus","getMedicines","patchMedicine","Button","Input","InputLabel","Alert","initState","prescription","ADDOTC","Component","state","medicines","quantity","changeForm","e","propName","target","name","propValue","value","setState","process","error","success","clearMedicine","medicine","undefined","componentDidMount","then","filter","m","requires_prescription","render","tableRef1","createRef","medical_name","sorting","search","paging","editable","pageSize","title","field","lookup","icon","tooltip","onClick","event","row","mapState","user","mapDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport MaterialTable from 'material-table';\nimport { PrescriptionStatus } from '../models/prescription';\nimport { getMedicines, patchMedicine } from '../medicines/medicinesService';\nimport { Button, Input, InputLabel } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nconst initState = {\n    prescription: \"\"\n}\n\nexport class ADDOTC extends React.Component {\n\n    state = {\n        ...initState,\n        medicines: [],\n        quantity: 1,\n    }\n\n    changeForm = (e) => {\n        let propName = e.target.name;\n        let propValue = e.target.value;\n        let state = { ...this.state };\n        state[propName] = propValue;\n        this.setState(state);\n    }\n\n    process = () => {\n        if (this.state.quantity < 0) {\n            this.setState({ error: \"please enter a valid quantity\" })\n\n        }\n        else {\n\n            this.setState({ success: \"added otc medicine to order\" })\n        }\n    }\n\n    clearMedicine = () => {\n        this.setState({ medicine: undefined });\n    }\n\n    async componentDidMount() {\n        getMedicines()\n            .then(medicines => {\n                medicines = medicines.filter(m => !m.requires_prescription)\n                this.setState({ medicines: medicines })\n            })\n    }\n\n    render() {\n        const tableRef1 = React.createRef();\n        let error = this.state.error ? <Alert severity=\"error\">{this.state.error}</Alert> : \"\";\n        let success = this.state.success ? <Alert severity=\"success\">{this.state.success}</Alert> : \"\";\n        return (\n            <Container fluid className=\"card card-body bg-light\">\n                <Row>\n                    <Col><h5>Add OTC Medicine <i class=\"fas fa-prescription-bottle-alt\"></i></h5></Col>\n                </Row>\n                <br />\n\n                {this.state.medicine\n                    ? (\n                        <div>\n                            <div>{this.state.medicine.medical_name}</div>\n                            <div>{this.state.medicine.quantity}</div>\n                            <Button onClick={this.clearMedicine}>X</Button>\n                        </div>\n                    )\n                    : (\n                        <Row>\n                            <Col>\n                                <MaterialTable\n                                    tableRef={tableRef1}\n                                    options={{\n                                        sorting: true,\n                                        search: true,\n                                        paging: true,\n                                        editable: false,\n                                        pageSize: 5,\n                                    }}\n                                    title=\"Medicine Stock\"\n                                    columns={[\n                                        { title: 'Medical Name', field: \"medical_name\" },\n                                        { title: 'Commercial Name', field: \"commercial_name\" },\n                                        { title: 'Type', field: 'medicine_type', lookup: { 1: 'capsule', 2: 'tablet', 3: 'liquid' }, },\n                                        { title: 'Recommended Dosage', field: \"recommended_dosage\" },\n                                        { title: 'Quantity Available', field: \"quantity\" },\n                                    ]}\n                                    data={this.state.medicines}\n                                    actions={[\n                                        {\n                                            icon: 'check',\n                                            tooltip: 'Use',\n                                            onClick: (event, row) => {\n                                                this.setState({ medicine: row });\n                                            }\n                                        },\n                                    ]}\n                                />\n                            </Col>\n                        </Row>\n                    )\n                }\n\n\n                <br></br>\n                <Row>\n                    <Col>\n                        <InputLabel>Quantity Needed:</InputLabel>\n                        <Input type=\"value\" type=\"number\" value={this.state.quantity} name=\"quantity\" onChange={this.changeForm} />\n                    </Col>\n                </Row>\n                <br />\n                <Row>\n                    <Col>\n                        <Button disabled={!this.state.medicine || this.state.success || this.state.error} variant=\"contained\" color=\"primary\" onClick={this.process}>Add to Order</Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        {error}\n                        {success}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n\n}\n\nconst mapState = (state) => { return { user: state.user } };\nconst mapDispatch = { app_login };\n\nexport default connect(mapState, mapDispatch)(ADDOTC);"]},"metadata":{},"sourceType":"module"}