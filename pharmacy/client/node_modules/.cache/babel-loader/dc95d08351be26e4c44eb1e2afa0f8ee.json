{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/prescriptionManager.js\";\nimport * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { getPrescriptions, patchPrescription, createPrescription, deletePrescription } from './prescriptionsService';\nimport { PrescriptionStatus } from '../models/prescription';\nexport default class PrescriptionManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      prescriptions: []\n    };\n\n    this.getData = () => {\n      return getPrescriptions().then(prescriptions => {\n        this.setState({\n          prescriptions: prescriptions\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const tableRef = React.createRef();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef,\n      options: {\n        sorting: true,\n        search: true,\n        paging: false\n      },\n      title: \"Prescriptions\",\n      columns: [{\n        title: 'Order date',\n        field: 'order_date'\n      }, {\n        title: 'Patient name',\n        render: p => p.patient_first_name + \" \" + p.patient_last_name\n      }, {\n        title: 'Prescription',\n        field: 'prescription'\n      }, {\n        title: 'Status',\n        field: 'order_status'\n      }],\n      data: this.state.prescriptions,\n      actions: [{\n        icon: 'update',\n        tooltip: 'Process',\n        onClick: (event, row) => {\n          const prescription_id = row.prescription_id;\n\n          switch (row.order_status) {\n            case PrescriptionStatus.Ready:\n              this.props.history.push(\"/verify-patient/\" + prescription_id);\n              break;\n\n            case PrescriptionStatus.Verified_Patient:\n              this.props.history.push(\"/verify-physician/\" + prescription_id);\n              break;\n\n            case PrescriptionStatus.Verified_Patient:\n              this.props.history.push(\"/verify-physician/\" + prescription_id);\n              break;\n\n            case PrescriptionStatus.Verified_Patient:\n              this.props.history.push(\"/verify-physician/\" + prescription_id);\n              break;\n          }\n        }\n      }, {\n        icon: 'file_copy',\n        tooltip: 'View Details',\n        onClick: (event, row) => {\n          const prescription_id = row.prescription_id;\n          this.props.history.push(\"/prescriptions/\" + prescription_id);\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/pharmacy/client/src/prescriptions/prescriptionManager.js"],"names":["React","MaterialTable","getPrescriptions","patchPrescription","createPrescription","deletePrescription","PrescriptionStatus","PrescriptionManager","Component","state","prescriptions","getData","then","setState","componentDidMount","render","tableRef","createRef","sorting","search","paging","title","field","p","patient_first_name","patient_last_name","icon","tooltip","onClick","event","row","prescription_id","order_status","Ready","props","history","push","Verified_Patient"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { getPrescriptions, patchPrescription, createPrescription, deletePrescription } from './prescriptionsService';\nimport { PrescriptionStatus } from '../models/prescription';\nexport default class PrescriptionManager extends React.Component {\n    state = {\n        prescriptions: []\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData = () => {\n        return getPrescriptions()\n            .then(prescriptions => {\n                this.setState({ prescriptions: prescriptions })\n            })\n    }\n\n    render() {\n        const tableRef = React.createRef();\n        return (\n            <div>\n                <MaterialTable\n                    tableRef={tableRef}\n                    options={{\n                        sorting: true,\n                        search: true,\n                        paging: false,\n                    }}\n                    title=\"Prescriptions\"\n                    columns={[\n                        { title: 'Order date', field: 'order_date' },\n                        { title: 'Patient name', render: p => (p.patient_first_name + \" \" + p.patient_last_name) },\n                        { title: 'Prescription', field: 'prescription' },\n                        { title: 'Status', field: 'order_status' },\n                    ]}\n                    data={this.state.prescriptions}\n                    actions={[\n                        {\n                            icon: 'update',\n                            tooltip: 'Process',\n                            onClick: (event, row) => {\n                                const prescription_id = row.prescription_id;\n                                switch (row.order_status) {\n                                    case PrescriptionStatus.Ready:\n                                        this.props.history.push(\"/verify-patient/\" + prescription_id);\n                                        break;\n                                    case PrescriptionStatus.Verified_Patient:\n                                        this.props.history.push(\"/verify-physician/\" + prescription_id);\n                                        break;\n                                    case PrescriptionStatus.Verified_Patient:\n                                        this.props.history.push(\"/verify-physician/\" + prescription_id);\n                                        break;\n                                    case PrescriptionStatus.Verified_Patient:\n                                        this.props.history.push(\"/verify-physician/\" + prescription_id);\n                                        break;\n                                }\n                            }\n                        },\n                        {\n                            icon: 'file_copy',\n                            tooltip: 'View Details',\n                            onClick: (event, row) => {\n                                const prescription_id = row.prescription_id;\n                                this.props.history.push(\"/prescriptions/\" + prescription_id);\n                            }\n                        },\n                    ]}\n                />\n            </div>\n\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}