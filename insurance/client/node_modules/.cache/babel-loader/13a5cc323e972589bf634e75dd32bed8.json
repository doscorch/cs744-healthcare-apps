{"ast":null,"code":"import _objectSpread from\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import reducers from\".\";var STORAGE_KEY=\"user\";var init=function init(){var saved=sessionStorage.getItem(STORAGE_KEY);if(saved)saved=JSON.parse(saved);return saved||{};};var reduce=function reduce(state,action){switch(action.type){case\"LOGIN\":{return _objectSpread({},action.user);}case\"LOGOUT\":{return{};}default:return state;}};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:init();var action=arguments.length>1?arguments[1]:undefined;state=reduce(state,action);sessionStorage.setItem(STORAGE_KEY,JSON.stringify(state));return state;};export default reducer;","map":{"version":3,"sources":["/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/src/redux/reducers/userReducer.js"],"names":["reducers","STORAGE_KEY","init","saved","sessionStorage","getItem","JSON","parse","reduce","state","action","type","user","reducer","setItem","stringify"],"mappings":"mLAAA,MAAOA,CAAAA,QAAP,KAAqB,GAArB,CAEA,GAAMC,CAAAA,WAAW,CAAG,MAApB,CACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACf,GAAIC,CAAAA,KAAK,CAAGC,cAAc,CAACC,OAAf,CAAuBJ,WAAvB,CAAZ,CACA,GAAIE,KAAJ,CACIA,KAAK,CAAGG,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAR,CACJ,MAAOA,CAAAA,KAAK,EAAI,EAAhB,CACH,CALD,CAOA,GAAMK,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAC9B,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,OAAL,CAAc,CACV,wBACOD,MAAM,CAACE,IADd,EAGH,CACD,IAAK,QAAL,CAAe,CACX,MAAO,EAAP,CAGH,CACD,QACI,MAAOH,CAAAA,KAAP,CAZR,CAcH,CAfD,CAgBA,GAAMI,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAA4B,IAA3BJ,CAAAA,KAA2B,2DAAnBP,IAAI,EAAe,IAAXQ,CAAAA,MAAW,2CACxCD,KAAK,CAAGD,MAAM,CAACC,KAAD,CAAQC,MAAR,CAAd,CACAN,cAAc,CAACU,OAAf,CAAuBb,WAAvB,CAAoCK,IAAI,CAACS,SAAL,CAAeN,KAAf,CAApC,EACA,MAAOA,CAAAA,KAAP,CACH,CAJD,CAMA,cAAeI,CAAAA,OAAf","sourcesContent":["import reducers from \".\";\n\nconst STORAGE_KEY = \"user\";\nconst init = () => {\n    let saved = sessionStorage.getItem(STORAGE_KEY);\n    if (saved)\n        saved = JSON.parse(saved);\n    return saved || {};\n}\n\nconst reduce = (state, action) => {\n    switch (action.type) {\n        case \"LOGIN\": {\n            return {\n                ...action.user,\n            };\n        }\n        case \"LOGOUT\": {\n            return {\n\n            };\n        }\n        default:\n            return state;\n    }\n}\nconst reducer = (state = init(), action) => {\n    state = reduce(state, action);\n    sessionStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}