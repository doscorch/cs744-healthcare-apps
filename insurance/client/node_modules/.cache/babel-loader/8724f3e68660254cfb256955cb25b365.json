{"ast":null,"code":"import reducers from \".\";\nconst STORAGE_KEY = \"ymca-user\";\n\nconst init = () => {\n  let saved = sessionStorage.getItem(STORAGE_KEY);\n  if (saved) saved = JSON.parse(saved);\n  return saved || {};\n};\n\nconst reduce = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      {\n        return { ...action.user\n        };\n      }\n\n    case \"LOGOUT\":\n      {\n        return {};\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst reducer = (state = init(), action) => {\n  state = reduce(state, action);\n  sessionStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/healthcare/client/src/redux/reducers/userReducer.js"],"names":["reducers","STORAGE_KEY","init","saved","sessionStorage","getItem","JSON","parse","reduce","state","action","type","user","reducer","setItem","stringify"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,GAArB;AAEA,MAAMC,WAAW,GAAG,WAApB;;AACA,MAAMC,IAAI,GAAG,MAAM;AACf,MAAIC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuBJ,WAAvB,CAAZ;AACA,MAAIE,KAAJ,EACIA,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAR;AACJ,SAAOA,KAAK,IAAI,EAAhB;AACH,CALD;;AAOA,MAAMK,MAAM,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,OAAL;AAAc;AACV,eAAO,EACH,GAAGD,MAAM,CAACE;AADP,SAAP;AAGH;;AACD,SAAK,QAAL;AAAe;AACX,eAAO,EAAP;AAGH;;AACD;AACI,aAAOH,KAAP;AAZR;AAcH,CAfD;;AAgBA,MAAMI,OAAO,GAAG,CAACJ,KAAK,GAAGP,IAAI,EAAb,EAAiBQ,MAAjB,KAA4B;AACxCD,EAAAA,KAAK,GAAGD,MAAM,CAACC,KAAD,EAAQC,MAAR,CAAd;AACAN,EAAAA,cAAc,CAACU,OAAf,CAAuBb,WAAvB,EAAoCK,IAAI,CAACS,SAAL,CAAeN,KAAf,CAApC;AACA,SAAOA,KAAP;AACH,CAJD;;AAMA,eAAeI,OAAf","sourcesContent":["import reducers from \".\";\n\nconst STORAGE_KEY = \"ymca-user\";\nconst init = () => {\n    let saved = sessionStorage.getItem(STORAGE_KEY);\n    if (saved)\n        saved = JSON.parse(saved);\n    return saved || {};\n}\n\nconst reduce = (state, action) => {\n    switch (action.type) {\n        case \"LOGIN\": {\n            return {\n                ...action.user,\n            };\n        }\n        case \"LOGOUT\": {\n            return {\n\n            };\n        }\n        default:\n            return state;\n    }\n}\nconst reducer = (state = init(), action) => {\n    state = reduce(state, action);\n    sessionStorage.setItem(STORAGE_KEY, JSON.stringify(state));\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}