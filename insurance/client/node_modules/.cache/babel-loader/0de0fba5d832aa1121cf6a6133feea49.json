{"ast":null,"code":"var _jsxFileName = \"D:\\\\School work\\\\CS 744\\\\cs744-healthcare-apps\\\\healthcare\\\\client\\\\src\\\\users\\\\userManager.js\";\nimport * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { Select, MenuItem } from '@material-ui/core';\nimport { getUsers, patchUser } from '../auth/usersService';\nexport default class UserManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: []\n    };\n\n    this.getData = () => {\n      let url = 'http://localhost:3030/users';\n      return getUsers().then(users => {\n        this.setState({\n          users: users\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const tableRef = React.createRef();\n    return /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef,\n      options: {\n        sorting: true,\n        search: true,\n        paging: false\n      },\n      title: \"Users\",\n      columns: [// { title: 'Id', field: '_id' },\n      {\n        title: 'Username',\n        field: 'username',\n        editable: false\n      }, {\n        title: 'First Name',\n        field: 'firstName'\n      }, {\n        title: 'Last Name',\n        field: 'lastName'\n      }, {\n        title: 'User Role',\n        field: 'userRole',\n        editComponent: props => /*#__PURE__*/React.createElement(Select, {\n          id: \"userrole\",\n          value: props.value || false,\n          onChange: e => props.onChange(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(MenuItem, {\n          value: \"physician\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }\n        }, \"physician\"), /*#__PURE__*/React.createElement(MenuItem, {\n          value: \"patient\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }\n        }, \"patient\"), /*#__PURE__*/React.createElement(MenuItem, {\n          value: \"admin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }\n        }, \"admin\"))\n      }, {\n        title: 'Is Active',\n        field: 'isActive',\n        render: row => /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 41\n          }\n        }, String(typeof row.isActive === \"undefined\" ? true : row.isActive)),\n        editComponent: props => /*#__PURE__*/React.createElement(Select, {\n          id: \"isActive\",\n          value: typeof props.value === \"undefined\" ? true : props.value,\n          onChange: e => props.onChange(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(MenuItem, {\n          value: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }\n        }, \"true\"), /*#__PURE__*/React.createElement(MenuItem, {\n          value: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }\n        }, \"false\"))\n      }],\n      data: this.state.users,\n      editable: {\n        onRowUpdate: (newData, oldData) => {\n          return patchUser(newData).then(_ => this.getData());\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/School work/CS 744/cs744-healthcare-apps/healthcare/client/src/users/userManager.js"],"names":["React","MaterialTable","Select","MenuItem","getUsers","patchUser","UserManager","Component","state","users","getData","url","then","setState","componentDidMount","render","tableRef","createRef","sorting","search","paging","title","field","editable","editComponent","props","value","e","onChange","target","row","String","isActive","onRowUpdate","newData","oldData","_"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,mBAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,sBAApC;AAEA,eAAe,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACrDC,KADqD,GAC7C;AACJC,MAAAA,KAAK,EAAE;AADH,KAD6C;;AAAA,SASrDC,OATqD,GAS3C,MAAM;AACZ,UAAIC,GAAG,GAAG,6BAAV;AACA,aAAOP,QAAQ,GACVQ,IADE,CACGH,KAAK,IAAI;AACX,aAAKI,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAEA;AAAT,SAAd;AACH,OAHE,CAAP;AAIH,KAfoD;AAAA;;AAKrDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,OAAL;AACH;;AAUDK,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAGhB,KAAK,CAACiB,SAAN,EAAjB;AACA,wBACI,oBAAC,aAAD;AACI,MAAA,QAAQ,EAAED,QADd;AAEI,MAAA,OAAO,EAAE;AACLE,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,MAAM,EAAE,IAFH;AAGLC,QAAAA,MAAM,EAAE;AAHH,OAFb;AAOI,MAAA,KAAK,EAAC,OAPV;AAQI,MAAA,OAAO,EAAE,CACL;AACA;AAAEC,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,KAAK,EAAE,UAA5B;AAAwCC,QAAAA,QAAQ,EAAE;AAAlD,OAFK,EAGL;AAAEF,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAHK,EAIL;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAJK,EAKL;AACID,QAAAA,KAAK,EAAE,WADX;AAEIC,QAAAA,KAAK,EAAE,UAFX;AAGIE,QAAAA,aAAa,EAAEC,KAAK,iBAChB,oBAAC,MAAD;AACI,UAAA,EAAE,EAAC,UADP;AAEI,UAAA,KAAK,EAAEA,KAAK,CAACC,KAAN,IAAe,KAF1B;AAGI,UAAA,QAAQ,EAAEC,CAAC,IAAIF,KAAK,CAACG,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASH,KAAxB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKI,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALJ,eAMI,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANJ,eAOI,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ;AAJR,OALK,EAmBL;AACIL,QAAAA,KAAK,EAAE,WADX;AAEIC,QAAAA,KAAK,EAAE,UAFX;AAGIP,QAAAA,MAAM,EAAEe,GAAG,iBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOC,MAAM,CAAC,OAAOD,GAAG,CAACE,QAAX,KAAwB,WAAxB,GAAsC,IAAtC,GAA6CF,GAAG,CAACE,QAAlD,CAAb,CAHpB;AAIIR,QAAAA,aAAa,EAAEC,KAAK,iBAChB,oBAAC,MAAD;AACI,UAAA,EAAE,EAAC,UADP;AAEI,UAAA,KAAK,EAAE,OAAOA,KAAK,CAACC,KAAb,KAAuB,WAAvB,GAAqC,IAArC,GAA4CD,KAAK,CAACC,KAF7D;AAGI,UAAA,QAAQ,EAAEC,CAAC,IAAIF,KAAK,CAACG,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASH,KAAxB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKI,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ;AALR,OAnBK,CARb;AA0CI,MAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWC,KA1CrB;AA2CI,MAAA,QAAQ,EAAE;AACNwB,QAAAA,WAAW,EAAE,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAC/B,iBAAO9B,SAAS,CAAC6B,OAAD,CAAT,CAAmBtB,IAAnB,CAAwBwB,CAAC,IAAI,KAAK1B,OAAL,EAA7B,CAAP;AACH;AAHK,OA3Cd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAmDH;;AAtEoD","sourcesContent":["import * as React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { Select, MenuItem } from '@material-ui/core'\r\nimport { getUsers, patchUser } from '../auth/usersService';\r\n\r\nexport default class UserManager extends React.Component {\r\n    state = {\r\n        users: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        let url = 'http://localhost:3030/users'\r\n        return getUsers()\r\n            .then(users => {\r\n                this.setState({ users: users })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const tableRef = React.createRef();\r\n        return (\r\n            <MaterialTable\r\n                tableRef={tableRef}\r\n                options={{\r\n                    sorting: true,\r\n                    search: true,\r\n                    paging: false,\r\n                }}\r\n                title=\"Users\"\r\n                columns={[\r\n                    // { title: 'Id', field: '_id' },\r\n                    { title: 'Username', field: 'username', editable: false },\r\n                    { title: 'First Name', field: 'firstName' },\r\n                    { title: 'Last Name', field: 'lastName' },\r\n                    {\r\n                        title: 'User Role',\r\n                        field: 'userRole',\r\n                        editComponent: props => (\r\n                            <Select\r\n                                id=\"userrole\"\r\n                                value={props.value || false}\r\n                                onChange={e => props.onChange(e.target.value)}\r\n                            >\r\n                                <MenuItem value={\"physician\"}>physician</MenuItem>\r\n                                <MenuItem value={\"patient\"}>patient</MenuItem>\r\n                                <MenuItem value={\"admin\"}>admin</MenuItem>\r\n                            </Select>),\r\n                    },\r\n                    {\r\n                        title: 'Is Active',\r\n                        field: 'isActive',\r\n                        render: row => (<span>{String(typeof row.isActive === \"undefined\" ? true : row.isActive)}</span>),\r\n                        editComponent: props => (\r\n                            <Select\r\n                                id=\"isActive\"\r\n                                value={typeof props.value === \"undefined\" ? true : props.value}\r\n                                onChange={e => props.onChange(e.target.value)}\r\n                            >\r\n                                <MenuItem value={true}>true</MenuItem>\r\n                                <MenuItem value={false}>false</MenuItem>\r\n                            </Select>),\r\n                    },\r\n                ]}\r\n                data={this.state.users}\r\n                editable={{\r\n                    onRowUpdate: (newData, oldData) => {\r\n                        return patchUser(newData).then(_ => this.getData())\r\n                    },\r\n                }}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}