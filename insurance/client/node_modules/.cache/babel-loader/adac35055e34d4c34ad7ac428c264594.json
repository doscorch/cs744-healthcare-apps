{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/healthcare/client/src/auth/securityQuestion.js\";\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Alert from '@material-ui/lab/Alert';\nimport { getUser, loginUser } from './usersService';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nconst initState = {\n  answer: \"answer\",\n  question_id: \"\",\n  question: \"Where did you go to middle school?\",\n  error: \"\"\n};\nexport class SecurityQuestion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initState\n    };\n\n    this.submitAnswer = e => {};\n\n    this.changeForm = e => {\n      let propName = e.target.name;\n      let propValue = e.target.value;\n      let state = { ...this.state\n      };\n      state[propName] = propValue;\n      this.setState(state);\n    };\n  }\n\n  render() {\n    const classes = {\n      paper: {\n        marginTop: \"10px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      form: {\n        width: '100%',\n        marginTop: \"10px\"\n      },\n      submit: {\n        margin: \"10px\"\n      }\n    };\n    let alert = this.state.error ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 40\n      }\n    }, this.state.error) : \"\";\n    return /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: classes.papper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Security Question\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h4\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, this.state.question), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true,\n      name: \"answer\",\n      label: \"Answer\",\n      id: \"security_answer\",\n      required: true,\n      autoFocus: true,\n      autoComplete: \"auto-answer\",\n      onChange: this.changeForm,\n      value: this.state.answer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      style: classes.submit,\n      onClick: this.submitAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Submit\")), alert));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {\n  app_login\n};\nexport default connect(mapState, mapDispatch)(SecurityQuestion);","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/healthcare/client/src/auth/securityQuestion.js"],"names":["React","Avatar","Button","TextField","Link","Grid","Container","Typography","Alert","getUser","loginUser","connect","app_login","initState","answer","question_id","question","error","SecurityQuestion","Component","state","submitAnswer","e","changeForm","propName","target","name","propValue","value","setState","render","classes","paper","marginTop","display","flexDirection","alignItems","form","width","submit","margin","alert","papper","mapState","user","mapDispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { getUser, loginUser } from './usersService';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nconst initState = {\n    answer: \"answer\",\n    question_id: \"\",\n    question: \"Where did you go to middle school?\",\n    error: \"\"\n}\n\nexport class SecurityQuestion extends React.Component{\n    state = {\n        ...initState\n    }\n\n    submitAnswer =  (e) => {\n\n    }\n\n    changeForm = (e) => {\n        let propName = e.target.name;\n        let propValue = e.target.value;\n        let state = { ...this.state };\n        state[propName] = propValue;\n        this.setState(state);\n    }\n\n    render() {\n        const classes = {\n            paper: {\n                marginTop: \"10px\",\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n            },\n            form: {\n                width: '100%',\n                marginTop: \"10px\",\n            },\n            submit: {\n                margin: \"10px\",\n            },\n        };\n\n        let alert = this.state.error ? <Alert severity=\"error\">{this.state.error}</Alert> : \"\";\n\n        return(\n            <Container component=\"main\" maxWidth=\"xs\">\n                <div style={classes.papper}>\n                    <Typography component=\"h1\" variant=\"h5\">Security Question</Typography>\n                    <Grid container justify=\"center\">\n                        <Typography component=\"h4\" variant=\"h5\">{this.state.question}</Typography>\n                        <TextField \n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            name=\"answer\"\n                            label= \"Answer\"\n                            id=\"security_answer\"\n                            required\n                            autoFocus\n                            autoComplete=\"auto-answer\"\n                            onChange={this.changeForm}\n                            value={this.state.answer} />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={classes.submit}\n                            onClick={this.submitAnswer}>\n                            Submit\n                        </Button>\n                    </Grid>\n                    {alert}\n                </div>\n            </Container>\n        );\n    }\n}\n\nconst mapState = (state) => { return { user: state.user } };\nconst mapDispatch = { app_login };\n\nexport default connect(mapState, mapDispatch)(SecurityQuestion);"]},"metadata":{},"sourceType":"module"}