{"ast":null,"code":"import { ERROR } from \"../errorHandling\";\nimport client from \"../serviceClient/apiClient\";\n/**\r\n * Gets all policies\r\n */\n\nexport const getAllPolicies = async () => {\n  return client.get('/policy/getAllPolicies').then(res => {\n    return {\n      data: res.data\n    };\n  });\n};\n/**\r\n * Gets drugs of a policy\r\n */\n\nexport const getDrugsFromPolicyId = async policy_id => {\n  return client.get('/policy/getDrugs/' + policy_id).then(res => {\n    return {\n      data: res.data\n    };\n  });\n};\n/**\r\n * Gets all drugs\r\n */\n\nexport const getAllDrugs = async () => {\n  return client.get('/policy/getAllDrugs').then(res => {\n    return {\n      data: res.data\n    };\n  });\n};\n/**\r\n * Create policy\r\n */\n\nexport const createPolicy = async (code, policy_name, age_limit, max_coverage_per_year, percent_coverage, premium_per_month, selectedDrugIds) => {\n  let args = {\n    code,\n    policy_name,\n    age_limit: Number(age_limit),\n    max_coverage_per_year: Number(max_coverage_per_year),\n    percent_coverage: Number(percent_coverage),\n    premium_per_month: Number(premium_per_month),\n    selectedDrugIds,\n    policy_status: 1\n  };\n  return client.post('/policy/createPolicy', args).then(res => {\n    return {\n      data: res.data\n    };\n  });\n};\nexport const updatePolicy = async (policy_id, code, policy_name, age_limit, max_coverage_per_year, percent_coverage, premium_per_month, policy_status, selectedDrugIds) => {\n  let args = {\n    policy_id,\n    code,\n    policy_name,\n    age_limit,\n    max_coverage_per_year,\n    percent_coverage,\n    premium_per_month,\n    policy_status,\n    selectedDrugIds\n  };\n  return client.post('/policy/updatePolicy', args).then(res => {\n    return {\n      data: res.data\n    };\n  });\n};\nexport const getPolicyHoldersWithPolicy = async policy_id => {\n  let args = {\n    policy_id\n  };\n  return client.post('/policy/getPolicyHoldersWithPolicy', args).then(res => {\n    return {\n      data: res.data\n    };\n  });\n};","map":{"version":3,"sources":["D:/GitHub/cs744-healthcare-apps/insurance/client/src/policy/policyService.js"],"names":["ERROR","client","getAllPolicies","get","then","res","data","getDrugsFromPolicyId","policy_id","getAllDrugs","createPolicy","code","policy_name","age_limit","max_coverage_per_year","percent_coverage","premium_per_month","selectedDrugIds","args","Number","policy_status","post","updatePolicy","getPolicyHoldersWithPolicy"],"mappings":"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","sourcesContent":["import { ERROR } from \"../errorHandling\";\r\nimport client from \"../serviceClient/apiClient\";\r\n\r\n/**\r\n * Gets all policies\r\n */\r\n export const getAllPolicies = async () => {\r\n    return client.get('/policy/getAllPolicies').then(res => {\r\n        return {\r\n            data: res.data\r\n        };\r\n    });\r\n}\r\n\r\n/**\r\n * Gets drugs of a policy\r\n */\r\n export const getDrugsFromPolicyId = async (policy_id) => {\r\n    return client.get('/policy/getDrugs/' + policy_id).then(res => {\r\n        return {\r\n            data: res.data\r\n        };\r\n    });\r\n}\r\n\r\n/**\r\n * Gets all drugs\r\n */\r\n export const getAllDrugs = async () => {\r\n    return client.get('/policy/getAllDrugs').then(res => {\r\n        return {\r\n            data: res.data\r\n        };\r\n    });\r\n}\r\n\r\n/**\r\n * Create policy\r\n */\r\n export const createPolicy = async (code, policy_name, age_limit, max_coverage_per_year, percent_coverage, premium_per_month, selectedDrugIds) => {\r\n    let args = {\r\n        code,\r\n        policy_name,\r\n        age_limit: Number(age_limit),\r\n        max_coverage_per_year: Number(max_coverage_per_year),\r\n        percent_coverage: Number(percent_coverage),\r\n        premium_per_month: Number(premium_per_month),\r\n\r\n        selectedDrugIds,\r\n        policy_status: 1,\r\n    };\r\n\r\n    return client.post('/policy/createPolicy', args).then(res => {\r\n        return {\r\n            data: res.data\r\n        };\r\n    });\r\n}\r\n\r\nexport const updatePolicy = async (policy_id, code, policy_name, age_limit, max_coverage_per_year, percent_coverage, premium_per_month, policy_status, selectedDrugIds) => {\r\n    let args = {\r\n        policy_id,\r\n        code,\r\n        policy_name,\r\n        age_limit,\r\n        max_coverage_per_year,\r\n        percent_coverage,\r\n        premium_per_month,\r\n        policy_status,\r\n\r\n        selectedDrugIds,\r\n    };\r\n\r\n    return client.post('/policy/updatePolicy', args).then(res => {\r\n        return {\r\n            data: res.data\r\n        };\r\n    });\r\n}\r\n\r\n\r\nexport const getPolicyHoldersWithPolicy = async(policy_id) => {\r\n    let args = {policy_id};\r\n    return client.post('/policy/getPolicyHoldersWithPolicy', args).then(res => {\r\n        return {\r\n            data: res.data\r\n        };\r\n    });\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}