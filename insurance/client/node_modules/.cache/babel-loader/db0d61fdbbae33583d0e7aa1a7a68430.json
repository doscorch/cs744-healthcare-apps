{"ast":null,"code":"var _classCallCheck = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Base = require('./base');\n\nvar AngularService = /*#__PURE__*/function (_Base) {\n  \"use strict\";\n\n  _inherits(AngularService, _Base);\n\n  var _super = _createSuper(AngularService);\n\n  function AngularService() {\n    _classCallCheck(this, AngularService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AngularService, [{\n    key: \"request\",\n    value: function request(options, params) {\n      var http = this.connection;\n      var Headers = this.options.Headers;\n\n      if (!http || !Headers) {\n        throw new Error(\"Please pass angular's 'http' (instance) and and object with 'Headers' (class) to feathers-rest\");\n      }\n\n      var url = options.url;\n      var _params$connection = params.connection,\n          connection = _params$connection === void 0 ? {} : _params$connection;\n      var headers = new Headers(Object.assign({\n        Accept: 'application/json'\n      }, this.options.headers, options.headers, connection.headers));\n      var requestOptions = Object.assign({\n        method: options.method,\n        body: options.body\n      }, connection, {\n        headers: headers\n      });\n      return new Promise(function (resolve, reject) {\n        http.request(url, requestOptions).subscribe(resolve, reject);\n      }).then(function (res) {\n        return res.json();\n      }).catch(function (error) {\n        var response = error.response || error;\n        throw response instanceof Error ? response : response.json() || response;\n      });\n    }\n  }]);\n\n  return AngularService;\n}(Base);\n\nmodule.exports = AngularService;","map":{"version":3,"sources":["/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/@feathersjs/rest-client/lib/angular.js"],"names":["Base","require","AngularService","options","params","http","connection","Headers","Error","url","headers","Object","assign","Accept","requestOptions","method","body","Promise","resolve","reject","request","subscribe","then","res","json","catch","error","response","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;IAEMC,c;;;;;;;;;;;;;;;4BACKC,O,EAASC,M,EAAQ;AACxB,UAAMC,IAAI,GAAG,KAAKC,UAAlB;AACA,UAAMC,OAAO,GAAG,KAAKJ,OAAL,CAAaI,OAA7B;;AAEA,UAAI,CAACF,IAAD,IAAS,CAACE,OAAd,EAAuB;AACrB,cAAM,IAAIC,KAAJ,kGAAN;AACD;;AAED,UAAMC,GAAG,GAAGN,OAAO,CAACM,GAApB;AARwB,+BASIL,MATJ,CAShBE,UATgB;AAAA,UAShBA,UATgB,mCASH,EATG;AAUxB,UAAMI,OAAO,GAAG,IAAIH,OAAJ,CACdI,MAAM,CAACC,MAAP,CACE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADF,EAEE,KAAKV,OAAL,CAAaO,OAFf,EAGEP,OAAO,CAACO,OAHV,EAIEJ,UAAU,CAACI,OAJb,CADc,CAAhB;AAQA,UAAMI,cAAc,GAAGH,MAAM,CAACC,MAAP,CAAc;AACnCG,QAAAA,MAAM,EAAEZ,OAAO,CAACY,MADmB;AAEnCC,QAAAA,IAAI,EAAEb,OAAO,CAACa;AAFqB,OAAd,EAGpBV,UAHoB,EAGR;AAAEI,QAAAA,OAAO,EAAPA;AAAF,OAHQ,CAAvB;AAKA,aAAO,IAAIO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCd,QAAAA,IAAI,CAACe,OAAL,CAAaX,GAAb,EAAkBK,cAAlB,EACGO,SADH,CACaH,OADb,EACsBC,MADtB;AAED,OAHM,EAIJG,IAJI,CAIC,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAJJ,EAKJC,KALI,CAKE,UAAAC,KAAK,EAAI;AACd,YAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAN,IAAkBD,KAAnC;AAEA,cAAMC,QAAQ,YAAYnB,KAApB,GAA4BmB,QAA5B,GAAwCA,QAAQ,CAACH,IAAT,MAAmBG,QAAjE;AACD,OATI,CAAP;AAUD;;;;EAlC0B3B,I;;AAqC7B4B,MAAM,CAACC,OAAP,GAAiB3B,cAAjB","sourcesContent":["const Base = require('./base');\n\nclass AngularService extends Base {\n  request (options, params) {\n    const http = this.connection;\n    const Headers = this.options.Headers;\n\n    if (!http || !Headers) {\n      throw new Error(`Please pass angular's 'http' (instance) and and object with 'Headers' (class) to feathers-rest`);\n    }\n\n    const url = options.url;\n    const { connection = {} } = params;\n    const headers = new Headers(\n      Object.assign(\n        { Accept: 'application/json' },\n        this.options.headers,\n        options.headers,\n        connection.headers\n      )\n    );\n    const requestOptions = Object.assign({\n      method: options.method,\n      body: options.body\n    }, connection, { headers });\n\n    return new Promise((resolve, reject) => {\n      http.request(url, requestOptions)\n        .subscribe(resolve, reject);\n    })\n      .then(res => res.json())\n      .catch(error => {\n        const response = error.response || error;\n\n        throw response instanceof Error ? response : (response.json() || response);\n      });\n  }\n}\n\nmodule.exports = AngularService;\n"]},"metadata":{},"sourceType":"script"}