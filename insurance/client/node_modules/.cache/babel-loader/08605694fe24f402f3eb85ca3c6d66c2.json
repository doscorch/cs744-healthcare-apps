{"ast":null,"code":"var _jsxFileName = \"/Users/doscorch/Desktop/cs744 project/healthcare/client/src/auth/myAccount.js\";\nimport React from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LinkDom from '@material-ui/core/Link';\nimport { TextField } from '@material-ui/core';\nimport MaterialTable from 'material-table';\n\nclass MyAccount extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      enrollments: [],\n      programs: []\n    };\n  }\n\n  render() {\n    const tableRef = React.createRef();\n    const user = this.props.user;\n\n    const getData = (resolve, reject) => {\n      const userId = this.props.user._id; // get programs\n\n      fetch('http://localhost:3030/programs').then(response => response.json()).then(p => {\n        const programs = p.data; // get enrollments by userid\n\n        fetch('http://localhost:3030/enrollments?userId=' + userId).then(response => response.json()).then(e => {\n          const enrollments = e.data; // map together my account enrollments data\n\n          const result = enrollments.map(e => {\n            const program = programs.find(p => p._id == e.programId);\n            return {\n              programId: program._id,\n              title: program.title,\n              status: e.isApproved ? \"approved\" : \"pending\"\n            };\n          });\n          resolve({\n            data: result\n          });\n        });\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      bg: \"light\",\n      style: {\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 37\n      }\n    }, \"Account Information\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }, user.firstName), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    }, user.lastName), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 37\n      }\n    }, user.username), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }, \"Account Type\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }\n    }, user.userRole), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }, \"Enrollments\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef,\n      options: {\n        search: false,\n        paging: false,\n        toolbar: false,\n        sorting: true\n      },\n      columns: [{\n        title: 'Program',\n        field: 'title'\n      }, {\n        title: \"Status\",\n        field: \"status\"\n      }, {\n        title: 'Details',\n        field: 'link',\n        render: row => /*#__PURE__*/React.createElement(LinkDom, {\n          href: \"/programs/\" + row.programId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 65\n          }\n        }, \"Details \", /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-sm fa-share-square\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 118\n          }\n        }))\n      }],\n      data: _ => new Promise(getData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    })))))));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {};\nexport default connect(mapState, mapDispatch)(MyAccount);","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/healthcare/client/src/auth/myAccount.js"],"names":["React","Container","Row","Col","Card","connect","Link","LinkDom","TextField","MaterialTable","MyAccount","Component","state","enrollments","programs","render","tableRef","createRef","user","props","getData","resolve","reject","userId","_id","fetch","then","response","json","p","data","e","result","map","program","find","programId","title","status","isApproved","padding","firstName","lastName","username","userRole","search","paging","toolbar","sorting","field","row","_","Promise","mapState","mapDispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,iBAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,SAAN,SAAwBV,KAAK,CAACW,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAD4B;AAAA;;AAMpCC,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAGhB,KAAK,CAACiB,SAAN,EAAjB;AACA,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAxB;;AACA,UAAME,OAAO,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACjC,YAAMC,MAAM,GAAG,KAAKJ,KAAL,CAAWD,IAAX,CAAgBM,GAA/B,CADiC,CAEjC;;AACAC,MAAAA,KAAK,CAAC,gCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,CAAC,IAAI;AACP,cAAMf,QAAQ,GAAGe,CAAC,CAACC,IAAnB,CADO,CAEP;;AACAL,QAAAA,KAAK,CAAC,8CAA8CF,MAA/C,CAAL,CACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUK,CAAC,IAAI;AACP,gBAAMlB,WAAW,GAAGkB,CAAC,CAACD,IAAtB,CADO,CAEP;;AACA,gBAAME,MAAM,GAAGnB,WAAW,CAACoB,GAAZ,CAAgBF,CAAC,IAAI;AAChC,kBAAMG,OAAO,GAAGpB,QAAQ,CAACqB,IAAT,CAAcN,CAAC,IAAIA,CAAC,CAACL,GAAF,IAASO,CAAC,CAACK,SAA9B,CAAhB;AACA,mBAAO;AACHA,cAAAA,SAAS,EAAEF,OAAO,CAACV,GADhB;AAEHa,cAAAA,KAAK,EAAEH,OAAO,CAACG,KAFZ;AAGHC,cAAAA,MAAM,EAAEP,CAAC,CAACQ,UAAF,GAAe,UAAf,GAA4B;AAHjC,aAAP;AAKH,WAPc,CAAf;AAQAlB,UAAAA,OAAO,CAAC;AAAES,YAAAA,IAAI,EAAEE;AAAR,WAAD,CAAP;AACH,SAdL;AAeH,OApBL;AAqBH,KAxBD;;AAyBA,wBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAiB,MAAA,KAAK,EAAE;AAAEQ,QAAAA,OAAO,EAAE;AAAX,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAItB,IAAI,CAACuB,SAAT,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIvB,IAAI,CAACwB,QAAT,CANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIxB,IAAI,CAACyB,QAAT,CARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIzB,IAAI,CAAC0B,QAAT,CAVJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,eAaI,oBAAC,aAAD;AACI,MAAA,QAAQ,EAAE5B,QADd;AAEI,MAAA,OAAO,EAAE;AACL6B,QAAAA,MAAM,EAAE,KADH;AAELC,QAAAA,MAAM,EAAE,KAFH;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAFb;AAQI,MAAA,OAAO,EAAE,CACL;AAAEX,QAAAA,KAAK,EAAE,SAAT;AAAoBY,QAAAA,KAAK,EAAE;AAA3B,OADK,EAEL;AAAEZ,QAAAA,KAAK,EAAE,QAAT;AAAmBY,QAAAA,KAAK,EAAE;AAA1B,OAFK,EAGL;AACIZ,QAAAA,KAAK,EAAE,SADX;AAEIY,QAAAA,KAAK,EAAE,MAFX;AAGIlC,QAAAA,MAAM,EAAEmC,GAAG,iBAAK,oBAAC,OAAD;AAAS,UAAA,IAAI,EAAE,eAAeA,GAAG,CAACd,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAqD;AAAG,UAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArD;AAHpB,OAHK,CARb;AAkBI,MAAA,IAAI,EAAEe,CAAC,IAAI,IAAIC,OAAJ,CAAYhC,OAAZ,CAlBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ,CADJ,CADJ,CADJ,CADJ,CADJ;AA8CH;;AAhFmC;;AAoFxC,MAAMiC,QAAQ,GAAIzC,KAAD,IAAW;AAAE,SAAO;AAAEM,IAAAA,IAAI,EAAEN,KAAK,CAACM;AAAd,GAAP;AAA6B,CAA3D;;AACA,MAAMoC,WAAW,GAAG,EAApB;AAEA,eAAejD,OAAO,CAACgD,QAAD,EAAWC,WAAX,CAAP,CAA+B5C,SAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LinkDom from '@material-ui/core/Link';\nimport { TextField } from '@material-ui/core'\nimport MaterialTable from 'material-table'\n\nclass MyAccount extends React.Component {\n    state = {\n        enrollments: [],\n        programs: [],\n    }\n\n    render() {\n        const tableRef = React.createRef();\n        const user = this.props.user;\n        const getData = (resolve, reject) => {\n            const userId = this.props.user._id;\n            // get programs\n            fetch('http://localhost:3030/programs')\n                .then(response => response.json())\n                .then(p => {\n                    const programs = p.data;\n                    // get enrollments by userid\n                    fetch('http://localhost:3030/enrollments?userId=' + userId)\n                        .then(response => response.json())\n                        .then(e => {\n                            const enrollments = e.data;\n                            // map together my account enrollments data\n                            const result = enrollments.map(e => {\n                                const program = programs.find(p => p._id == e.programId);\n                                return {\n                                    programId: program._id,\n                                    title: program.title,\n                                    status: e.isApproved ? \"approved\" : \"pending\"\n                                };\n                            });\n                            resolve({ data: result });\n                        });\n                });\n        };\n        return (\n            <Container fluid>\n                <Row>\n                    <Col>\n                        <Card bg=\"light\" style={{ padding: \"10px\" }}>\n                            <Row>\n                                <Col>\n                                    <h4>Account Information</h4>\n                                    <hr></hr>\n                                    <h6>First Name</h6>\n                                    <p>{user.firstName}</p>\n                                    <h6>Last Name</h6>\n                                    <p>{user.lastName}</p>\n                                    <h6>Username</h6>\n                                    <p>{user.username}</p>\n                                    <h6>Account Type</h6>\n                                    <p>{user.userRole}</p>\n                                    <h4>Enrollments</h4>\n                                    <hr></hr>\n                                    <MaterialTable\n                                        tableRef={tableRef}\n                                        options={{\n                                            search: false,\n                                            paging: false,\n                                            toolbar: false,\n                                            sorting: true,\n                                        }}\n                                        columns={[\n                                            { title: 'Program', field: 'title' },\n                                            { title: \"Status\", field: \"status\" },\n                                            {\n                                                title: 'Details',\n                                                field: 'link',\n                                                render: row => (<LinkDom href={\"/programs/\" + row.programId}>Details <i className=\"fa fa-sm fa-share-square\"></i>\n                                                </LinkDom>),\n                                            },\n                                        ]}\n                                        data={_ => new Promise(getData)}\n                                    />\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\n\nconst mapState = (state) => { return { user: state.user } };\nconst mapDispatch = {};\n\nexport default connect(mapState, mapDispatch)(MyAccount);"]},"metadata":{},"sourceType":"module"}