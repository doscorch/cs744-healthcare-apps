{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\cs744-healthcare-apps\\\\insurance\\\\client\\\\src\\\\request\\\\requestManager.js\";\nimport * as React from 'react';\nimport MaterialTable from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport { Select, MenuItem } from '@material-ui/core';\nimport { UserType, UserStatus } from '../models/user';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Route, Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { getAllRequests, getDrug, requestAction, applyTransaction } from './requestService';\nimport { getAllPolicies, getPolicyByPatientPharmacyUpdate } from '../policy/policyService';\nimport { getAllPolicyHolders } from '../policyHolder/policyHolderService';\nexport default class RequestManager extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      requests: []\n    };\n  }\n\n  showAcceptButton(r) {\n    if (r.request_status == 2) {\n      return /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => {\n          this.request(r, true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }\n      }, \"Accept\");\n    }\n  }\n\n  showDenyButton(r) {\n    if (r.request_status == 2 || r.request_status == 3 || r.request_status == 4) {\n      return /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => {\n          this.request(r, false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }\n      }, \"Deny\");\n    }\n  }\n\n  async request(request, accept) {\n    let ph = await getAllPolicyHolders();\n    ph = ph.data;\n    console.log(ph);\n    console.log(request);\n    let policyHolder = null;\n\n    for (let i = 0; i < ph.length; i++) {\n      ph[i]['date_of_birth'] = ph[i]['date_of_birth'].split('T')[0];\n      ph[i]['start_date'] = ph[i]['start_date'].split('T')[0];\n      ph[i]['end_date'] = ph[i]['end_date'].split('T')[0];\n\n      if (ph[i].first_name == request.first_name && ph[i].last_name == request.last_name && ph[i].address == request.address && ph[i].date_of_birth == request.date_of_birth) {\n        policyHolder = ph[i];\n        break;\n      }\n    }\n\n    request.covered = 0;\n    request.policy = null;\n\n    if (policyHolder != null) {\n      let policies = await getAllPolicies();\n      policies = policies.data;\n      let policy = null;\n\n      for (let i = 0; i < policies.length; i++) {\n        if (policies[i].policy_id == policyHolder.policy_id) {\n          policy = policies[i];\n          break;\n        }\n      }\n\n      let remaining = Number(policyHolder.amount_remaining);\n      let paid = Number(policyHolder.amount_paid);\n      let amount = request.amount;\n      let per = policy.percent_coverage / 100;\n      let covered = (amount * per).toFixed(2);\n\n      if (remaining < covered) {\n        covered = remaining;\n      }\n\n      paid += covered;\n      remaining -= covered;\n      request.paid = paid;\n      request.remaining = remaining;\n      request.covered = covered;\n      request.policy = policy;\n    }\n\n    request.policy_holder = policyHolder;\n    request.old_request_status = request.request_status;\n\n    if (accept) {\n      request.request_status = 1;\n    } else {\n      if (request.old_request_status == 2) {\n        request.request_status = 0;\n      } else if (request.old_request_status == 3) {\n        request.request_status = 5;\n      } else if (request.old_request_status == 4) {\n        request.request_status = 6;\n      }\n    }\n\n    console.log('request!');\n    console.log(request);\n    let res = await requestAction(request);\n    console.log('res');\n    console.log(res);\n    this.componentDidMount();\n  }\n\n  async componentDidMount() {\n    console.log('getting requests');\n    let result = await getAllRequests();\n    console.log(result);\n    console.log('update requests');\n    let requests = result.data; // format date\n\n    for (let i = 0; i < requests.length; i++) {\n      let payload = JSON.parse(requests[i]['payload']);\n      payload.request_id = requests[i].request_id;\n\n      if (requests[i].request_status == 2 || requests[i].request_status == 3 || requests[i].request_status == 4) {\n        await getPolicyByPatientPharmacyUpdate(payload);\n      }\n    }\n\n    console.log('getting requests (again)');\n    result = await getAllRequests();\n    console.log(result);\n    requests = result.data; // format date\n\n    for (let i = 0; i < requests.length; i++) {\n      requests[i]['date_of_birth'] = requests[i]['date_of_birth'].split('T')[0];\n      requests[i]['request_date'] = requests[i]['request_date'].split('T')[0];\n      let payload = JSON.parse(requests[i]['payload']);\n      requests[i]['drug_name'] = payload.medicine.medical_name;\n      requests[i]['drug_code'] = payload.medicine.medicine_code;\n      requests[i]['commercial_name'] = payload.medicine.commercial_name;\n    }\n\n    requests.sort(function (a, b) {\n      let bVal = b.request_status;\n      let aVal = a.request_status;\n\n      if (bVal == 5 || bVal == 6) {\n        bVal = 0;\n      }\n\n      if (aVal == 5 || aVal == 6) {\n        aVal = 0;\n      }\n\n      return bVal - aVal;\n    });\n    this.setState({\n      requests: requests\n    });\n  }\n\n  translateStatus(status) {\n    if (status == 3) {\n      return 'Pending';\n    } else if (status == 4) {\n      return 'Pending';\n    } else if (status == 2) {\n      return 'Pending';\n    } else if (status == 1) {\n      return 'Accepted';\n    } else if (status == 0) {\n      return 'Denied';\n    } else if (status == 6) {\n      return 'Denied (No coverage)';\n    } else if (status == 5) {\n      return 'Denied (Not a policy holder)';\n    }\n  }\n\n  render() {\n    const tableRef = React.createRef();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: tableRef,\n      options: {\n        sorting: true,\n        search: true,\n        paging: false\n      },\n      title: \"Requests\",\n      columns: [{\n        title: 'Status',\n        field: 'request_id',\n        render: r => this.translateStatus(r.request_status),\n        customSort: (a, b) => {\n          return b.request_status - a.request_status;\n        }\n      }, {\n        title: 'Request Date',\n        field: 'request_date'\n      }, {\n        title: 'First Name',\n        field: 'first_name'\n      }, {\n        title: 'Last Name',\n        field: 'last_name'\n      }, {\n        title: 'Address',\n        field: 'address'\n      }, {\n        title: 'Date of Birth',\n        field: 'date_of_birth'\n      }, {\n        title: 'Amount',\n        field: 'amount',\n        render: r => /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 74\n          }\n        }, \"$\", r.amount)\n      }, {\n        title: 'Medical Name',\n        field: 'drug_name'\n      }, {\n        title: 'Commercial Name',\n        field: 'commercial_name'\n      }, {\n        title: 'Code',\n        field: 'drug_code'\n      }, {\n        title: '',\n        field: '',\n        render: r => this.showAcceptButton(r)\n      }, {\n        title: '',\n        field: '',\n        render: r => this.showDenyButton(r)\n      }],\n      data: this.state.requests,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/GitHub/cs744-healthcare-apps/insurance/client/src/request/requestManager.js"],"names":["React","MaterialTable","Button","Select","MenuItem","UserType","UserStatus","Navbar","Nav","Route","Link","Typography","ExpandMoreIcon","getAllRequests","getDrug","requestAction","applyTransaction","getAllPolicies","getPolicyByPatientPharmacyUpdate","getAllPolicyHolders","RequestManager","Component","state","requests","showAcceptButton","r","request_status","request","showDenyButton","accept","ph","data","console","log","policyHolder","i","length","split","first_name","last_name","address","date_of_birth","covered","policy","policies","policy_id","remaining","Number","amount_remaining","paid","amount_paid","amount","per","percent_coverage","toFixed","policy_holder","old_request_status","res","componentDidMount","result","payload","JSON","parse","request_id","medicine","medical_name","medicine_code","commercial_name","sort","a","b","bVal","aVal","setState","translateStatus","status","render","tableRef","createRef","sorting","search","paging","title","field","customSort"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,mBAAjC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,gBAArC;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,iBAA5B;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAAQC,cAAR,EAAwBC,OAAxB,EAAiCC,aAAjC,EAAgDC,gBAAhD,QAAuE,kBAAvE;AACA,SAAQC,cAAR,EAAwBC,gCAAxB,QAA+D,yBAA/D;AACA,SAAQC,mBAAR,QAAkC,qCAAlC;AAGA,eAAe,MAAMC,cAAN,SAA6BpB,KAAK,CAACqB,SAAnC,CAA6C;AAAA;AAAA;AAAA,SACxDC,KADwD,GAChD;AACJC,MAAAA,QAAQ,EAAE;AADN,KADgD;AAAA;;AAKxDC,EAAAA,gBAAgB,CAACC,CAAD,EAAI;AAChB,QAAIA,CAAC,CAACC,cAAF,IAAoB,CAAxB,EAA2B;AACvB,0BAAO,oBAAC,MAAD;AACP,QAAA,IAAI,EAAC,QADE;AAEP,QAAA,SAAS,MAFF;AAGP,QAAA,OAAO,EAAC,WAHD;AAIP,QAAA,KAAK,EAAC,SAJC;AAKP,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKC,OAAL,CAAaF,CAAb,EAAgB,IAAhB;AAAsB,SAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAQH;AACJ;;AAEDG,EAAAA,cAAc,CAACH,CAAD,EAAI;AACd,QAAIA,CAAC,CAACC,cAAF,IAAoB,CAApB,IAAyBD,CAAC,CAACC,cAAF,IAAoB,CAA7C,IAAkDD,CAAC,CAACC,cAAF,IAAoB,CAA1E,EAA6E;AACzE,0BAAO,oBAAC,MAAD;AACP,QAAA,IAAI,EAAC,QADE;AAEP,QAAA,SAAS,MAFF;AAGP,QAAA,OAAO,EAAC,WAHD;AAIP,QAAA,KAAK,EAAC,WAJC;AAKP,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKC,OAAL,CAAaF,CAAb,EAAgB,KAAhB;AAAuB,SALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAQH;AACJ;;AAEY,QAAPE,OAAO,CAACA,OAAD,EAAUE,MAAV,EAAkB;AAC3B,QAAIC,EAAE,GAAG,MAAMX,mBAAmB,EAAlC;AACAW,IAAAA,EAAE,GAAGA,EAAE,CAACC,IAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACA,QAAIO,YAAY,GAAG,IAAnB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,EAAE,CAACM,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAChCL,MAAAA,EAAE,CAACK,CAAD,CAAF,CAAM,eAAN,IAAyBL,EAAE,CAACK,CAAD,CAAF,CAAM,eAAN,EAAuBE,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CAAzB;AACAP,MAAAA,EAAE,CAACK,CAAD,CAAF,CAAM,YAAN,IAAsBL,EAAE,CAACK,CAAD,CAAF,CAAM,YAAN,EAAoBE,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAtB;AACAP,MAAAA,EAAE,CAACK,CAAD,CAAF,CAAM,UAAN,IAAoBL,EAAE,CAACK,CAAD,CAAF,CAAM,UAAN,EAAkBE,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAApB;;AACA,UAAIP,EAAE,CAACK,CAAD,CAAF,CAAMG,UAAN,IAAoBX,OAAO,CAACW,UAA5B,IAA0CR,EAAE,CAACK,CAAD,CAAF,CAAMI,SAAN,IAAmBZ,OAAO,CAACY,SAArE,IACGT,EAAE,CAACK,CAAD,CAAF,CAAMK,OAAN,IAAiBb,OAAO,CAACa,OAD5B,IACuCV,EAAE,CAACK,CAAD,CAAF,CAAMM,aAAN,IAAuBd,OAAO,CAACc,aAD1E,EACyF;AAEjFP,QAAAA,YAAY,GAAGJ,EAAE,CAACK,CAAD,CAAjB;AACA;AACP;AACJ;;AAEDR,IAAAA,OAAO,CAACe,OAAR,GAAkB,CAAlB;AACAf,IAAAA,OAAO,CAACgB,MAAR,GAAiB,IAAjB;;AACA,QAAIT,YAAY,IAAI,IAApB,EAA0B;AACtB,UAAIU,QAAQ,GAAG,MAAM3B,cAAc,EAAnC;AACA2B,MAAAA,QAAQ,GAAGA,QAAQ,CAACb,IAApB;AACA,UAAIY,MAAM,GAAG,IAAb;;AAEA,WAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGS,QAAQ,CAACR,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,YAAIS,QAAQ,CAACT,CAAD,CAAR,CAAYU,SAAZ,IAAyBX,YAAY,CAACW,SAA1C,EAAqD;AACjDF,UAAAA,MAAM,GAAGC,QAAQ,CAACT,CAAD,CAAjB;AACA;AACH;AACJ;;AAED,UAAIW,SAAS,GAAGC,MAAM,CAACb,YAAY,CAACc,gBAAd,CAAtB;AACA,UAAIC,IAAI,GAAGF,MAAM,CAACb,YAAY,CAACgB,WAAd,CAAjB;AAEA,UAAIC,MAAM,GAAGxB,OAAO,CAACwB,MAArB;AACA,UAAIC,GAAG,GAAGT,MAAM,CAACU,gBAAP,GAA0B,GAApC;AAEA,UAAIX,OAAO,GAAG,CAACS,MAAM,GAAGC,GAAV,EAAeE,OAAf,CAAuB,CAAvB,CAAd;;AAGA,UAAIR,SAAS,GAAGJ,OAAhB,EAAyB;AACrBA,QAAAA,OAAO,GAAGI,SAAV;AACH;;AAEDG,MAAAA,IAAI,IAAIP,OAAR;AACAI,MAAAA,SAAS,IAAIJ,OAAb;AAEAf,MAAAA,OAAO,CAACsB,IAAR,GAAeA,IAAf;AACAtB,MAAAA,OAAO,CAACmB,SAAR,GAAoBA,SAApB;AACAnB,MAAAA,OAAO,CAACe,OAAR,GAAkBA,OAAlB;AACAf,MAAAA,OAAO,CAACgB,MAAR,GAAiBA,MAAjB;AAEH;;AAEDhB,IAAAA,OAAO,CAAC4B,aAAR,GAAwBrB,YAAxB;AACAP,IAAAA,OAAO,CAAC6B,kBAAR,GAA6B7B,OAAO,CAACD,cAArC;;AAEA,QAAIG,MAAJ,EAAY;AACRF,MAAAA,OAAO,CAACD,cAAR,GAAyB,CAAzB;AACH,KAFD,MAEO;AACH,UAAIC,OAAO,CAAC6B,kBAAR,IAA8B,CAAlC,EAAqC;AACjC7B,QAAAA,OAAO,CAACD,cAAR,GAAyB,CAAzB;AACH,OAFD,MAEO,IAAIC,OAAO,CAAC6B,kBAAR,IAA8B,CAAlC,EAAqC;AACxC7B,QAAAA,OAAO,CAACD,cAAR,GAAyB,CAAzB;AACH,OAFM,MAEA,IAAIC,OAAO,CAAC6B,kBAAR,IAA8B,CAAlC,EAAqC;AACxC7B,QAAAA,OAAO,CAACD,cAAR,GAAyB,CAAzB;AACH;AACJ;;AAEDM,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACA,QAAI8B,GAAG,GAAG,MAAM1C,aAAa,CAACY,OAAD,CAA7B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;AACA,SAAKC,iBAAL;AACH;;AAEsB,QAAjBA,iBAAiB,GAAG;AACtB1B,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,QAAI0B,MAAM,GAAG,MAAM9C,cAAc,EAAjC;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY0B,MAAZ;AAEA3B,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,QAAIV,QAAQ,GAAGoC,MAAM,CAAC5B,IAAtB,CAPsB,CAStB;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,QAAQ,CAACa,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,UAAIyB,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWvC,QAAQ,CAACY,CAAD,CAAR,CAAY,SAAZ,CAAX,CAAd;AACAyB,MAAAA,OAAO,CAACG,UAAR,GAAqBxC,QAAQ,CAACY,CAAD,CAAR,CAAY4B,UAAjC;;AACA,UAAIxC,QAAQ,CAACY,CAAD,CAAR,CAAYT,cAAZ,IAA8B,CAA9B,IAAmCH,QAAQ,CAACY,CAAD,CAAR,CAAYT,cAAZ,IAA8B,CAAjE,IAAsEH,QAAQ,CAACY,CAAD,CAAR,CAAYT,cAAZ,IAA8B,CAAxG,EAA2G;AACvG,cAAMR,gCAAgC,CAAC0C,OAAD,CAAtC;AACH;AACJ;;AAED5B,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEA0B,IAAAA,MAAM,GAAG,MAAM9C,cAAc,EAA7B;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY0B,MAAZ;AACApC,IAAAA,QAAQ,GAAGoC,MAAM,CAAC5B,IAAlB,CAtBsB,CAwBtB;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,QAAQ,CAACa,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCZ,MAAAA,QAAQ,CAACY,CAAD,CAAR,CAAY,eAAZ,IAA+BZ,QAAQ,CAACY,CAAD,CAAR,CAAY,eAAZ,EAA6BE,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAA/B;AACAd,MAAAA,QAAQ,CAACY,CAAD,CAAR,CAAY,cAAZ,IAA8BZ,QAAQ,CAACY,CAAD,CAAR,CAAY,cAAZ,EAA4BE,KAA5B,CAAkC,GAAlC,EAAuC,CAAvC,CAA9B;AACA,UAAIuB,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWvC,QAAQ,CAACY,CAAD,CAAR,CAAY,SAAZ,CAAX,CAAd;AACAZ,MAAAA,QAAQ,CAACY,CAAD,CAAR,CAAY,WAAZ,IAA2ByB,OAAO,CAACI,QAAR,CAAiBC,YAA5C;AACA1C,MAAAA,QAAQ,CAACY,CAAD,CAAR,CAAY,WAAZ,IAA2ByB,OAAO,CAACI,QAAR,CAAiBE,aAA5C;AACA3C,MAAAA,QAAQ,CAACY,CAAD,CAAR,CAAY,iBAAZ,IAAiCyB,OAAO,CAACI,QAAR,CAAiBG,eAAlD;AACH;;AACD5C,IAAAA,QAAQ,CAAC6C,IAAT,CAAc,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACzB,UAAIC,IAAI,GAAGD,CAAC,CAAC5C,cAAb;AACA,UAAI8C,IAAI,GAAGH,CAAC,CAAC3C,cAAb;;AACA,UAAI6C,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,CAAzB,EAA4B;AACxBA,QAAAA,IAAI,GAAG,CAAP;AACH;;AACD,UAAIC,IAAI,IAAI,CAAR,IAAaA,IAAI,IAAI,CAAzB,EAA4B;AACxBA,QAAAA,IAAI,GAAG,CAAP;AACH;;AACD,aAAOD,IAAI,GAAGC,IAAd;AACH,KAVD;AAWA,SAAKC,QAAL,CAAc;AAAElD,MAAAA,QAAQ,EAAEA;AAAZ,KAAd;AAEH;;AAEDmD,EAAAA,eAAe,CAACC,MAAD,EAAS;AACpB,QAAIA,MAAM,IAAI,CAAd,EAAiB;AACb,aAAO,SAAP;AACH,KAFD,MAEO,IAAIA,MAAM,IAAI,CAAd,EAAiB;AACpB,aAAO,SAAP;AACH,KAFM,MAEA,IAAIA,MAAM,IAAI,CAAd,EAAiB;AACtB,aAAO,SAAP;AACD,KAFM,MAEA,IAAIA,MAAM,IAAI,CAAd,EAAiB;AACtB,aAAO,UAAP;AACD,KAFM,MAEA,IAAIA,MAAM,IAAI,CAAd,EAAiB;AACpB,aAAO,QAAP;AACH,KAFM,MAEA,IAAIA,MAAM,IAAI,CAAd,EAAiB;AACpB,aAAO,sBAAP;AACH,KAFM,MAEA,IAAIA,MAAM,IAAI,CAAd,EAAiB;AACpB,aAAO,8BAAP;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG7E,KAAK,CAAC8E,SAAN,EAAjB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AACI,MAAA,QAAQ,EAAED,QADd;AAEI,MAAA,OAAO,EAAE;AACLE,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,MAAM,EAAE,IAFH;AAGLC,QAAAA,MAAM,EAAE;AAHH,OAFb;AAOI,MAAA,KAAK,EAAC,UAPV;AAQI,MAAA,OAAO,EAAE,CACL;AAAEC,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE,YAA1B;AAAwCP,QAAAA,MAAM,EAAEnD,CAAC,IAAI,KAAKiD,eAAL,CAAqBjD,CAAC,CAACC,cAAvB,CAArD;AAA6F0D,QAAAA,UAAU,EACvG,CAACf,CAAD,EAAIC,CAAJ,KAAU;AACN,iBAAOA,CAAC,CAAC5C,cAAF,GAAmB2C,CAAC,CAAC3C,cAA5B;AACH;AAHD,OADK,EAML;AAAEwD,QAAAA,KAAK,EAAE,cAAT;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OANK,EAOL;AAAED,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,KAAK,EAAE;AAA9B,OAPK,EAQL;AAAED,QAAAA,KAAK,EAAE,WAAT;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OARK,EASL;AAAED,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OATK,EAUL;AAAED,QAAAA,KAAK,EAAE,eAAT;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAVK,EAWL;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,KAAK,EAAE,QAA1B;AAAoCP,QAAAA,MAAM,EAAEnD,CAAC,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAKA,CAAC,CAAC0B,MAAP;AAAjD,OAXK,EAYL;AAAE+B,QAAAA,KAAK,EAAE,cAAT;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAZK,EAaL;AAAED,QAAAA,KAAK,EAAE,iBAAT;AAA4BC,QAAAA,KAAK,EAAE;AAAnC,OAbK,EAcL;AAAED,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAdK,EAeL;AACID,QAAAA,KAAK,EAAE,EADX;AAEIC,QAAAA,KAAK,EAAE,EAFX;AAGIP,QAAAA,MAAM,EAAEnD,CAAC,IAAI,KAAKD,gBAAL,CAAsBC,CAAtB;AAHjB,OAfK,EAqBL;AACIyD,QAAAA,KAAK,EAAE,EADX;AAEIC,QAAAA,KAAK,EAAE,EAFX;AAGIP,QAAAA,MAAM,EAAEnD,CAAC,IAAI,KAAKG,cAAL,CAAoBH,CAApB;AAHjB,OArBK,CARb;AAqCI,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,QArCrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AA2CH;;AA5NuD","sourcesContent":["import * as React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Select, MenuItem } from '@material-ui/core'\r\nimport { UserType, UserStatus } from '../models/user';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {getAllRequests, getDrug, requestAction, applyTransaction} from './requestService';\r\nimport {getAllPolicies, getPolicyByPatientPharmacyUpdate} from '../policy/policyService';\r\nimport {getAllPolicyHolders} from '../policyHolder/policyHolderService';\r\n\r\n\r\nexport default class RequestManager extends React.Component {\r\n    state = {\r\n        requests: []\r\n    }\r\n\r\n    showAcceptButton(r) {\r\n        if (r.request_status == 2) {\r\n            return <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {this.request(r, true)}}>\r\n            Accept\r\n        </Button>;\r\n        }\r\n    }\r\n\r\n    showDenyButton(r) {\r\n        if (r.request_status == 2 || r.request_status == 3 || r.request_status == 4) {\r\n            return <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => {this.request(r, false)}}>\r\n            Deny\r\n        </Button>;\r\n        }\r\n    }\r\n\r\n    async request(request, accept) {\r\n        let ph = await getAllPolicyHolders();\r\n        ph = ph.data;\r\n        console.log(ph);\r\n        console.log(request);\r\n        let policyHolder = null;\r\n        for (let i = 0; i < ph.length; i++) {\r\n            ph[i]['date_of_birth'] = ph[i]['date_of_birth'].split('T')[0];\r\n            ph[i]['start_date'] = ph[i]['start_date'].split('T')[0];\r\n            ph[i]['end_date'] = ph[i]['end_date'].split('T')[0];\r\n            if (ph[i].first_name == request.first_name && ph[i].last_name == request.last_name\r\n                && ph[i].address == request.address && ph[i].date_of_birth == request.date_of_birth) {\r\n                \r\n                    policyHolder = ph[i];\r\n                    break;\r\n            }\r\n        }\r\n\r\n        request.covered = 0;\r\n        request.policy = null;\r\n        if (policyHolder != null) {\r\n            let policies = await getAllPolicies();\r\n            policies = policies.data;\r\n            let policy = null;\r\n    \r\n            for (let i = 0; i < policies.length; i++) {\r\n                if (policies[i].policy_id == policyHolder.policy_id) {\r\n                    policy = policies[i];\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            let remaining = Number(policyHolder.amount_remaining);\r\n            let paid = Number(policyHolder.amount_paid);\r\n    \r\n            let amount = request.amount;\r\n            let per = policy.percent_coverage / 100;\r\n    \r\n            let covered = (amount * per).toFixed(2);\r\n    \r\n    \r\n            if (remaining < covered) {\r\n                covered = remaining;\r\n            }\r\n    \r\n            paid += covered;\r\n            remaining -= covered;\r\n            \r\n            request.paid = paid;\r\n            request.remaining = remaining;\r\n            request.covered = covered;\r\n            request.policy = policy;\r\n\r\n        }\r\n\r\n        request.policy_holder = policyHolder;\r\n        request.old_request_status = request.request_status;\r\n\r\n        if (accept) {\r\n            request.request_status = 1;\r\n        } else {\r\n            if (request.old_request_status == 2) {\r\n                request.request_status = 0;\r\n            } else if (request.old_request_status == 3) {\r\n                request.request_status = 5;\r\n            } else if (request.old_request_status == 4) {\r\n                request.request_status = 6;\r\n            }\r\n        }\r\n\r\n        console.log('request!');\r\n        console.log(request);\r\n        let res = await requestAction(request);\r\n        console.log('res');\r\n        console.log(res);\r\n        this.componentDidMount();\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log('getting requests');\r\n\r\n        let result = await getAllRequests();\r\n        console.log(result);\r\n\r\n        console.log('update requests');\r\n        let requests = result.data;\r\n\r\n        // format date\r\n        for (let i = 0; i < requests.length; i++) {\r\n            let payload = JSON.parse(requests[i]['payload']);\r\n            payload.request_id = requests[i].request_id;\r\n            if (requests[i].request_status == 2 || requests[i].request_status == 3 || requests[i].request_status == 4) {\r\n                await getPolicyByPatientPharmacyUpdate(payload);\r\n            }\r\n        }\r\n        \r\n        console.log('getting requests (again)');\r\n\r\n        result = await getAllRequests();\r\n        console.log(result);\r\n        requests = result.data;\r\n\r\n        // format date\r\n        for (let i = 0; i < requests.length; i++) {\r\n            requests[i]['date_of_birth'] = requests[i]['date_of_birth'].split('T')[0];\r\n            requests[i]['request_date'] = requests[i]['request_date'].split('T')[0];\r\n            let payload = JSON.parse(requests[i]['payload']);\r\n            requests[i]['drug_name'] = payload.medicine.medical_name;\r\n            requests[i]['drug_code'] = payload.medicine.medicine_code;\r\n            requests[i]['commercial_name'] = payload.medicine.commercial_name;\r\n        }\r\n        requests.sort(function(a, b) {\r\n            let bVal = b.request_status;\r\n            let aVal = a.request_status;\r\n            if (bVal == 5 || bVal == 6) {\r\n                bVal = 0;\r\n            }\r\n            if (aVal == 5 || aVal == 6) {\r\n                aVal = 0;\r\n            }\r\n            return bVal - aVal;\r\n        });\r\n        this.setState({ requests: requests });\r\n\r\n    }\r\n\r\n    translateStatus(status) {\r\n        if (status == 3) {\r\n            return 'Pending';\r\n        } else if (status == 4) {\r\n            return 'Pending'\r\n        } else if (status == 2) {\r\n          return 'Pending';\r\n        } else if (status == 1) {\r\n          return 'Accepted';\r\n        } else if (status == 0) {\r\n            return 'Denied';\r\n        } else if (status == 6) {\r\n            return 'Denied (No coverage)';\r\n        } else if (status == 5) {\r\n            return 'Denied (Not a policy holder)';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const tableRef = React.createRef();\r\n        return (\r\n            <div>\r\n                <MaterialTable\r\n                    tableRef={tableRef}\r\n                    options={{\r\n                        sorting: true,\r\n                        search: true,\r\n                        paging: false,\r\n                    }}\r\n                    title=\"Requests\"\r\n                    columns={[\r\n                        { title: 'Status', field: 'request_id', render: r => this.translateStatus(r.request_status), customSort: \r\n                        (a, b) => {\r\n                            return b.request_status - a.request_status;\r\n                        }\r\n                        },\r\n                        { title: 'Request Date', field: 'request_date'},\r\n                        { title: 'First Name', field: 'first_name'},\r\n                        { title: 'Last Name', field: 'last_name'},\r\n                        { title: 'Address', field: 'address'},\r\n                        { title: 'Date of Birth', field: 'date_of_birth'},\r\n                        { title: 'Amount', field: 'amount', render: r => <p>${r.amount}</p>},\r\n                        { title: 'Medical Name', field: 'drug_name'},\r\n                        { title: 'Commercial Name', field: 'commercial_name'},\r\n                        { title: 'Code', field: 'drug_code'},\r\n                        {\r\n                            title: '',\r\n                            field: '',\r\n                            render: r => this.showAcceptButton(r)\r\n\r\n                        },\r\n                        {\r\n                            title: '',\r\n                            field: '',\r\n                            render: r => this.showDenyButton(r)\r\n\r\n                        },\r\n\r\n                    ]}\r\n                    data={this.state.requests}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}