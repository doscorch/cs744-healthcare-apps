{"ast":null,"code":"import _classCallCheck from\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from'react';import MaterialTable from'material-table';import{Select,MenuItem}from'@material-ui/core';import{getUsers,patchUser}from'../auth/usersService';var UserManager=/*#__PURE__*/function(_React$Component){_inherits(UserManager,_React$Component);var _super=_createSuper(UserManager);function UserManager(){var _this;_classCallCheck(this,UserManager);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={users:[]};_this.getData=function(){var url='http://localhost:3030/users';return getUsers().then(function(users){_this.setState({users:users});});};return _this;}_createClass(UserManager,[{key:\"componentDidMount\",value:function componentDidMount(){this.getData();}},{key:\"render\",value:function render(){var _this2=this;var tableRef=React.createRef();return/*#__PURE__*/React.createElement(MaterialTable,{tableRef:tableRef,options:{sorting:true,search:true,paging:false},title:\"Users\",columns:[// { title: 'Id', field: '_id' },\n{title:'Username',field:'username',editable:false},{title:'First Name',field:'firstName'},{title:'Last Name',field:'lastName'},{title:'User Role',field:'userRole',editComponent:function editComponent(props){return/*#__PURE__*/React.createElement(Select,{id:\"userrole\",value:props.value||false,onChange:function onChange(e){return props.onChange(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:\"physician\"},\"physician\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"patient\"},\"patient\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"admin\"},\"admin\"));}},{title:'Is Active',field:'isActive',render:function render(row){return/*#__PURE__*/React.createElement(\"span\",null,String(typeof row.isActive===\"undefined\"?true:row.isActive));},editComponent:function editComponent(props){return/*#__PURE__*/React.createElement(Select,{id:\"isActive\",value:typeof props.value===\"undefined\"?true:props.value,onChange:function onChange(e){return props.onChange(e.target.value);}},/*#__PURE__*/React.createElement(MenuItem,{value:true},\"true\"),/*#__PURE__*/React.createElement(MenuItem,{value:false},\"false\"));}}],data:this.state.users,editable:{onRowUpdate:function onRowUpdate(newData,oldData){return patchUser(newData).then(function(_){return _this2.getData();});}}});}}]);return UserManager;}(React.Component);export{UserManager as default};","map":{"version":3,"sources":["/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/src/users/userManager.js"],"names":["React","MaterialTable","Select","MenuItem","getUsers","patchUser","UserManager","state","users","getData","url","then","setState","tableRef","createRef","sorting","search","paging","title","field","editable","editComponent","props","value","e","onChange","target","render","row","String","isActive","onRowUpdate","newData","oldData","_","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport MaterialTable from 'material-table';\nimport { Select, MenuItem } from '@material-ui/core'\nimport { getUsers, patchUser } from '../auth/usersService';\n\nexport default class UserManager extends React.Component {\n    state = {\n        users: []\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData = () => {\n        let url = 'http://localhost:3030/users'\n        return getUsers()\n            .then(users => {\n                this.setState({ users: users })\n            })\n    }\n\n    render() {\n        const tableRef = React.createRef();\n        return (\n            <MaterialTable\n                tableRef={tableRef}\n                options={{\n                    sorting: true,\n                    search: true,\n                    paging: false,\n                }}\n                title=\"Users\"\n                columns={[\n                    // { title: 'Id', field: '_id' },\n                    { title: 'Username', field: 'username', editable: false },\n                    { title: 'First Name', field: 'firstName' },\n                    { title: 'Last Name', field: 'lastName' },\n                    {\n                        title: 'User Role',\n                        field: 'userRole',\n                        editComponent: props => (\n                            <Select\n                                id=\"userrole\"\n                                value={props.value || false}\n                                onChange={e => props.onChange(e.target.value)}\n                            >\n                                <MenuItem value={\"physician\"}>physician</MenuItem>\n                                <MenuItem value={\"patient\"}>patient</MenuItem>\n                                <MenuItem value={\"admin\"}>admin</MenuItem>\n                            </Select>),\n                    },\n                    {\n                        title: 'Is Active',\n                        field: 'isActive',\n                        render: row => (<span>{String(typeof row.isActive === \"undefined\" ? true : row.isActive)}</span>),\n                        editComponent: props => (\n                            <Select\n                                id=\"isActive\"\n                                value={typeof props.value === \"undefined\" ? true : props.value}\n                                onChange={e => props.onChange(e.target.value)}\n                            >\n                                <MenuItem value={true}>true</MenuItem>\n                                <MenuItem value={false}>false</MenuItem>\n                            </Select>),\n                    },\n                ]}\n                data={this.state.users}\n                editable={{\n                    onRowUpdate: (newData, oldData) => {\n                        return patchUser(newData).then(_ => this.getData())\n                    },\n                }}\n            />\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}