{"ast":null,"code":"var _classCallCheck = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Base = require('./base');\n\nvar RequestService = /*#__PURE__*/function (_Base) {\n  \"use strict\";\n\n  _inherits(RequestService, _Base);\n\n  var _super = _createSuper(RequestService);\n\n  function RequestService() {\n    _classCallCheck(this, RequestService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RequestService, [{\n    key: \"request\",\n    value: function request(options, params) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var _params$connection = params.connection,\n            connection = _params$connection === void 0 ? {} : _params$connection;\n        var headers = Object.assign({}, options.headers, connection.headers);\n\n        _this.connection(Object.assign({\n          json: true\n        }, options, params.connection, {\n          headers: headers\n        }), function (error, res, data) {\n          if (error) {\n            return reject(error);\n          }\n\n          if (!error && res.statusCode >= 400) {\n            if (typeof data === 'string') {\n              return reject(new Error(data));\n            }\n\n            data.response = res;\n            return reject(Object.assign(new Error(data.message), data));\n          }\n\n          resolve(data);\n        });\n      });\n    }\n  }]);\n\n  return RequestService;\n}(Base);\n\nmodule.exports = RequestService;","map":{"version":3,"sources":["/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/@feathersjs/rest-client/lib/request.js"],"names":["Base","require","RequestService","options","params","Promise","resolve","reject","connection","headers","Object","assign","json","error","res","data","statusCode","Error","response","message","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;IAEMC,c;;;;;;;;;;;;;;;4BACKC,O,EAASC,M,EAAQ;AAAA;;AACxB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAAA,iCACVH,MADU,CAC9BI,UAD8B;AAAA,YAC9BA,UAD8B,mCACjB,EADiB;AAEtC,YAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,OAAO,CAACM,OAA1B,EAAmCD,UAAU,CAACC,OAA9C,CAAhB;;AAEA,QAAA,KAAI,CAACD,UAAL,CAAgBE,MAAM,CAACC,MAAP,CAAc;AAC5BC,UAAAA,IAAI,EAAE;AADsB,SAAd,EAEbT,OAFa,EAEJC,MAAM,CAACI,UAFH,EAEe;AAAEC,UAAAA,OAAO,EAAPA;AAAF,SAFf,CAAhB,EAE6C,UAAUI,KAAV,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4B;AACvE,cAAIF,KAAJ,EAAW;AACT,mBAAON,MAAM,CAACM,KAAD,CAAb;AACD;;AAED,cAAI,CAACA,KAAD,IAAUC,GAAG,CAACE,UAAJ,IAAkB,GAAhC,EAAqC;AACnC,gBAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,qBAAOR,MAAM,CAAC,IAAIU,KAAJ,CAAUF,IAAV,CAAD,CAAb;AACD;;AAEDA,YAAAA,IAAI,CAACG,QAAL,GAAgBJ,GAAhB;AAEA,mBAAOP,MAAM,CAACG,MAAM,CAACC,MAAP,CAAc,IAAIM,KAAJ,CAAUF,IAAI,CAACI,OAAf,CAAd,EAAuCJ,IAAvC,CAAD,CAAb;AACD;;AAEDT,UAAAA,OAAO,CAACS,IAAD,CAAP;AACD,SAlBD;AAmBD,OAvBM,CAAP;AAwBD;;;;EA1B0Bf,I;;AA6B7BoB,MAAM,CAACC,OAAP,GAAiBnB,cAAjB","sourcesContent":["const Base = require('./base');\n\nclass RequestService extends Base {\n  request (options, params) {\n    return new Promise((resolve, reject) => {\n      const { connection = {} } = params;\n      const headers = Object.assign({}, options.headers, connection.headers);\n\n      this.connection(Object.assign({\n        json: true\n      }, options, params.connection, { headers }), function (error, res, data) {\n        if (error) {\n          return reject(error);\n        }\n\n        if (!error && res.statusCode >= 400) {\n          if (typeof data === 'string') {\n            return reject(new Error(data));\n          }\n\n          data.response = res;\n\n          return reject(Object.assign(new Error(data.message), data));\n        }\n\n        resolve(data);\n      });\n    });\n  }\n}\n\nmodule.exports = RequestService;\n"]},"metadata":{},"sourceType":"script"}