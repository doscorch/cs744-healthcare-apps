{"ast":null,"code":"var _classCallCheck = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Base = require('./base');\n\nvar AngularHttpService = /*#__PURE__*/function (_Base) {\n  \"use strict\";\n\n  _inherits(AngularHttpService, _Base);\n\n  var _super = _createSuper(AngularHttpService);\n\n  function AngularHttpService() {\n    _classCallCheck(this, AngularHttpService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AngularHttpService, [{\n    key: \"request\",\n    value: function request(options, params) {\n      var httpClient = this.connection;\n      var HttpHeaders = this.options.HttpHeaders;\n\n      if (!httpClient || !HttpHeaders) {\n        throw new Error(\"Please pass angular's 'httpClient' (instance) and and object with 'HttpHeaders' (class) to feathers-rest\");\n      }\n\n      var url = options.url;\n      var _params$connection = params.connection,\n          connection = _params$connection === void 0 ? {} : _params$connection;\n      var headers = new HttpHeaders(Object.assign({\n        Accept: 'application/json'\n      }, this.options.headers, options.headers, connection.headers));\n      var requestOptions = Object.assign({\n        // method: options.method,\n        body: options.body\n      }, params.connection, {\n        headers: headers\n      });\n      return new Promise(function (resolve, reject) {\n        httpClient.request(options.method, url, requestOptions).subscribe(resolve, reject);\n      }).catch(function (error) {\n        var e = error.error;\n\n        if (e) {\n          throw typeof e === 'string' ? JSON.parse(e) : e;\n        }\n\n        throw error;\n      });\n    }\n  }]);\n\n  return AngularHttpService;\n}(Base);\n\nmodule.exports = AngularHttpService;","map":{"version":3,"sources":["/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/@feathersjs/rest-client/lib/angular-http-client.js"],"names":["Base","require","AngularHttpService","options","params","httpClient","connection","HttpHeaders","Error","url","headers","Object","assign","Accept","requestOptions","body","Promise","resolve","reject","request","method","subscribe","catch","error","e","JSON","parse","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;IAEMC,kB;;;;;;;;;;;;;;;4BACKC,O,EAASC,M,EAAQ;AACxB,UAAMC,UAAU,GAAG,KAAKC,UAAxB;AACA,UAAMC,WAAW,GAAG,KAAKJ,OAAL,CAAaI,WAAjC;;AAEA,UAAI,CAACF,UAAD,IAAe,CAACE,WAApB,EAAiC;AAC/B,cAAM,IAAIC,KAAJ,4GAAN;AACD;;AAED,UAAMC,GAAG,GAAGN,OAAO,CAACM,GAApB;AARwB,+BASIL,MATJ,CAShBE,UATgB;AAAA,UAShBA,UATgB,mCASH,EATG;AAUxB,UAAMI,OAAO,GAAG,IAAIH,WAAJ,CACdI,MAAM,CAACC,MAAP,CACE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADF,EAEE,KAAKV,OAAL,CAAaO,OAFf,EAGEP,OAAO,CAACO,OAHV,EAIEJ,UAAU,CAACI,OAJb,CADc,CAAhB;AAQA,UAAMI,cAAc,GAAGH,MAAM,CAACC,MAAP,CAAc;AACnC;AACAG,QAAAA,IAAI,EAAEZ,OAAO,CAACY;AAFqB,OAAd,EAGpBX,MAAM,CAACE,UAHa,EAGD;AAAEI,QAAAA,OAAO,EAAPA;AAAF,OAHC,CAAvB;AAKA,aAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCb,QAAAA,UAAU,CAACc,OAAX,CAAmBhB,OAAO,CAACiB,MAA3B,EAAmCX,GAAnC,EAAwCK,cAAxC,EACGO,SADH,CACaJ,OADb,EACsBC,MADtB;AAED,OAHM,EAIJI,KAJI,CAIE,UAAAC,KAAK,EAAI;AACd,YAAMC,CAAC,GAAGD,KAAK,CAACA,KAAhB;;AAEA,YAAIC,CAAJ,EAAO;AACL,gBAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBC,IAAI,CAACC,KAAL,CAAWF,CAAX,CAAxB,GAAwCA,CAA/C;AACD;;AAED,cAAMD,KAAN;AACD,OAZI,CAAP;AAaD;;;;EArC8BvB,I;;AAwCjC2B,MAAM,CAACC,OAAP,GAAiB1B,kBAAjB","sourcesContent":["const Base = require('./base');\n\nclass AngularHttpService extends Base {\n  request (options, params) {\n    const httpClient = this.connection;\n    const HttpHeaders = this.options.HttpHeaders;\n\n    if (!httpClient || !HttpHeaders) {\n      throw new Error(`Please pass angular's 'httpClient' (instance) and and object with 'HttpHeaders' (class) to feathers-rest`);\n    }\n\n    const url = options.url;\n    const { connection = {} } = params;\n    const headers = new HttpHeaders(\n      Object.assign(\n        { Accept: 'application/json' },\n        this.options.headers,\n        options.headers,\n        connection.headers\n      )\n    );\n    const requestOptions = Object.assign({\n      // method: options.method,\n      body: options.body\n    }, params.connection, { headers });\n\n    return new Promise((resolve, reject) => {\n      httpClient.request(options.method, url, requestOptions)\n        .subscribe(resolve, reject);\n    })\n      .catch(error => {\n        const e = error.error;\n\n        if (e) {\n          throw (typeof e === 'string' ? JSON.parse(e) : e);\n        }\n\n        throw error;\n      });\n  }\n}\n\nmodule.exports = AngularHttpService;\n"]},"metadata":{},"sourceType":"script"}