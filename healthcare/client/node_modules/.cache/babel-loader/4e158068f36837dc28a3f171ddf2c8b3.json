{"ast":null,"code":"var _classCallCheck = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Base = require('./base');\n\nvar SuperagentService = /*#__PURE__*/function (_Base) {\n  \"use strict\";\n\n  _inherits(SuperagentService, _Base);\n\n  var _super = _createSuper(SuperagentService);\n\n  function SuperagentService() {\n    _classCallCheck(this, SuperagentService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SuperagentService, [{\n    key: \"request\",\n    value: function request(options, params) {\n      var superagent = this.connection(options.method, options.url).set(this.options.headers || {}).set('Accept', 'application/json').set(params.connection || {}).set(options.headers || {}).type(options.type || 'json');\n      return new Promise(function (resolve, reject) {\n        superagent.set(options.headers);\n\n        if (options.body) {\n          superagent.send(options.body);\n        }\n\n        superagent.end(function (error, res) {\n          if (error) {\n            try {\n              var response = error.response;\n              error = JSON.parse(error.response.text);\n              error.response = response;\n            } catch (e) {}\n\n            return reject(error);\n          }\n\n          resolve(res && res.body);\n        });\n      });\n    }\n  }]);\n\n  return SuperagentService;\n}(Base);\n\nmodule.exports = SuperagentService;","map":{"version":3,"sources":["/home/diedrick.nathan/cs744-healthcare-apps/healthcare/client/node_modules/@feathersjs/rest-client/lib/superagent.js"],"names":["Base","require","SuperagentService","options","params","superagent","connection","method","url","set","headers","type","Promise","resolve","reject","body","send","end","error","res","response","JSON","parse","text","e","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;IAEMC,iB;;;;;;;;;;;;;;;4BACKC,O,EAASC,M,EAAQ;AACxB,UAAMC,UAAU,GAAG,KAAKC,UAAL,CAAgBH,OAAO,CAACI,MAAxB,EAAgCJ,OAAO,CAACK,GAAxC,EAChBC,GADgB,CACZ,KAAKN,OAAL,CAAaO,OAAb,IAAwB,EADZ,EAEhBD,GAFgB,CAEZ,QAFY,EAEF,kBAFE,EAGhBA,GAHgB,CAGZL,MAAM,CAACE,UAAP,IAAqB,EAHT,EAIhBG,GAJgB,CAIZN,OAAO,CAACO,OAAR,IAAmB,EAJP,EAKhBC,IALgB,CAKXR,OAAO,CAACQ,IAAR,IAAgB,MALL,CAAnB;AAOA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCT,QAAAA,UAAU,CAACI,GAAX,CAAeN,OAAO,CAACO,OAAvB;;AAEA,YAAIP,OAAO,CAACY,IAAZ,EAAkB;AAChBV,UAAAA,UAAU,CAACW,IAAX,CAAgBb,OAAO,CAACY,IAAxB;AACD;;AAEDV,QAAAA,UAAU,CAACY,GAAX,CAAe,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACnC,cAAID,KAAJ,EAAW;AACT,gBAAI;AACF,kBAAME,QAAQ,GAAGF,KAAK,CAACE,QAAvB;AACAF,cAAAA,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACE,QAAN,CAAeG,IAA1B,CAAR;AACAL,cAAAA,KAAK,CAACE,QAAN,GAAiBA,QAAjB;AACD,aAJD,CAIE,OAAOI,CAAP,EAAU,CAAE;;AAEd,mBAAOV,MAAM,CAACI,KAAD,CAAb;AACD;;AAEDL,UAAAA,OAAO,CAACM,GAAG,IAAIA,GAAG,CAACJ,IAAZ,CAAP;AACD,SAZD;AAaD,OApBM,CAAP;AAqBD;;;;EA9B6Bf,I;;AAiChCyB,MAAM,CAACC,OAAP,GAAiBxB,iBAAjB","sourcesContent":["const Base = require('./base');\n\nclass SuperagentService extends Base {\n  request (options, params) {\n    const superagent = this.connection(options.method, options.url)\n      .set(this.options.headers || {})\n      .set('Accept', 'application/json')\n      .set(params.connection || {})\n      .set(options.headers || {})\n      .type(options.type || 'json');\n\n    return new Promise((resolve, reject) => {\n      superagent.set(options.headers);\n\n      if (options.body) {\n        superagent.send(options.body);\n      }\n\n      superagent.end(function (error, res) {\n        if (error) {\n          try {\n            const response = error.response;\n            error = JSON.parse(error.response.text);\n            error.response = response;\n          } catch (e) {}\n\n          return reject(error);\n        }\n\n        resolve(res && res.body);\n      });\n    });\n  }\n}\n\nmodule.exports = SuperagentService;\n"]},"metadata":{},"sourceType":"script"}