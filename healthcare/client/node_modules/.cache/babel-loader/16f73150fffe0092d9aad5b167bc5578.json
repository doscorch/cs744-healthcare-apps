{"ast":null,"code":"const Base = require('./base');\n\nclass RequestService extends Base {\n  request(options, params) {\n    return new Promise((resolve, reject) => {\n      const {\n        connection = {}\n      } = params;\n      const headers = Object.assign({}, options.headers, connection.headers);\n      this.connection(Object.assign({\n        json: true\n      }, options, params.connection, {\n        headers\n      }), function (error, res, data) {\n        if (error) {\n          return reject(error);\n        }\n\n        if (!error && res.statusCode >= 400) {\n          if (typeof data === 'string') {\n            return reject(new Error(data));\n          }\n\n          data.response = res;\n          return reject(Object.assign(new Error(data.message), data));\n        }\n\n        resolve(data);\n      });\n    });\n  }\n\n}\n\nmodule.exports = RequestService;","map":{"version":3,"sources":["/Users/doscorch/Desktop/cs744 project/healthcare/client/node_modules/@feathersjs/rest-client/lib/request.js"],"names":["Base","require","RequestService","request","options","params","Promise","resolve","reject","connection","headers","Object","assign","json","error","res","data","statusCode","Error","response","message","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,MAAMC,cAAN,SAA6BF,IAA7B,CAAkC;AAChCG,EAAAA,OAAO,CAAEC,OAAF,EAAWC,MAAX,EAAmB;AACxB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAM;AAAEC,QAAAA,UAAU,GAAG;AAAf,UAAsBJ,MAA5B;AACA,YAAMK,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,OAAO,CAACM,OAA1B,EAAmCD,UAAU,CAACC,OAA9C,CAAhB;AAEA,WAAKD,UAAL,CAAgBE,MAAM,CAACC,MAAP,CAAc;AAC5BC,QAAAA,IAAI,EAAE;AADsB,OAAd,EAEbT,OAFa,EAEJC,MAAM,CAACI,UAFH,EAEe;AAAEC,QAAAA;AAAF,OAFf,CAAhB,EAE6C,UAAUI,KAAV,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4B;AACvE,YAAIF,KAAJ,EAAW;AACT,iBAAON,MAAM,CAACM,KAAD,CAAb;AACD;;AAED,YAAI,CAACA,KAAD,IAAUC,GAAG,CAACE,UAAJ,IAAkB,GAAhC,EAAqC;AACnC,cAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,mBAAOR,MAAM,CAAC,IAAIU,KAAJ,CAAUF,IAAV,CAAD,CAAb;AACD;;AAEDA,UAAAA,IAAI,CAACG,QAAL,GAAgBJ,GAAhB;AAEA,iBAAOP,MAAM,CAACG,MAAM,CAACC,MAAP,CAAc,IAAIM,KAAJ,CAAUF,IAAI,CAACI,OAAf,CAAd,EAAuCJ,IAAvC,CAAD,CAAb;AACD;;AAEDT,QAAAA,OAAO,CAACS,IAAD,CAAP;AACD,OAlBD;AAmBD,KAvBM,CAAP;AAwBD;;AA1B+B;;AA6BlCK,MAAM,CAACC,OAAP,GAAiBpB,cAAjB","sourcesContent":["const Base = require('./base');\n\nclass RequestService extends Base {\n  request (options, params) {\n    return new Promise((resolve, reject) => {\n      const { connection = {} } = params;\n      const headers = Object.assign({}, options.headers, connection.headers);\n\n      this.connection(Object.assign({\n        json: true\n      }, options, params.connection, { headers }), function (error, res, data) {\n        if (error) {\n          return reject(error);\n        }\n\n        if (!error && res.statusCode >= 400) {\n          if (typeof data === 'string') {\n            return reject(new Error(data));\n          }\n\n          data.response = res;\n\n          return reject(Object.assign(new Error(data.message), data));\n        }\n\n        resolve(data);\n      });\n    });\n  }\n}\n\nmodule.exports = RequestService;\n"]},"metadata":{},"sourceType":"script"}