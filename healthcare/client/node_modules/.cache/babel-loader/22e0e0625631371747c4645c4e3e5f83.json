{"ast":null,"code":"var _jsxFileName = \"D:\\\\School work\\\\CS 744\\\\cs744-healthcare-apps\\\\healthcare\\\\client\\\\src\\\\auth\\\\securityQuestion.js\";\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Alert from '@material-ui/lab/Alert';\nimport { answerSecurityQuestion } from './usersService';\nimport { connect } from 'react-redux';\nimport { app_login } from '../redux/actions/userActions';\nconst initState = {\n  answer: \"answer\",\n  question_id: \"\",\n  question: \"Where did you go to middle school?\",\n  attempt_number: 1,\n  error: \"\"\n};\nexport class SecurityQuestion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initState\n    };\n\n    this.submitAnswer = async e => {\n      let success = await answerSecurityQuestion(user, this.state.question_id, this.state.answer, this.state.attempt_number);\n\n      if (!success) {\n        //Answered incorrectly\n        let next_attempt = this.attempt_number + 1;\n\n        if (this.next_attempt > 3) {\n          this.setState({\n            error: \"Security Questions failed: Please contact administrator.\"\n          });\n        }\n      } else {//Answered correctly\n      }\n    };\n\n    this.changeForm = e => {\n      let propName = e.target.name;\n      let propValue = e.target.value;\n      let state = { ...this.state\n      };\n      state[propName] = propValue;\n      this.setState(state);\n    };\n  }\n\n  render() {\n    const classes = {\n      paper: {\n        marginTop: \"10px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      form: {\n        width: '100%',\n        marginTop: \"10px\"\n      },\n      submit: {\n        margin: \"10px\"\n      }\n    };\n    let alert = this.state.error ? /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 40\n      }\n    }, this.state.error) : \"\";\n    return /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: classes.papper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"Security Question\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"h4\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, this.state.question), /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      fullWidth: true,\n      name: \"answer\",\n      label: \"Answer\",\n      id: \"security_answer\",\n      required: true,\n      autoFocus: true,\n      autoComplete: \"auto-answer\",\n      onChange: this.changeForm,\n      value: this.state.answer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      style: classes.submit,\n      onClick: this.submitAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Submit\")), alert));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatch = {\n  app_login\n};\nexport default connect(mapState, mapDispatch)(SecurityQuestion);","map":{"version":3,"sources":["D:/School work/CS 744/cs744-healthcare-apps/healthcare/client/src/auth/securityQuestion.js"],"names":["React","Avatar","Button","TextField","Link","Grid","Container","Typography","Alert","answerSecurityQuestion","connect","app_login","initState","answer","question_id","question","attempt_number","error","SecurityQuestion","Component","state","submitAnswer","e","success","user","next_attempt","setState","changeForm","propName","target","name","propValue","value","render","classes","paper","marginTop","display","flexDirection","alignItems","form","width","submit","margin","alert","papper","mapState","mapDispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,SAASC,sBAAT,QAAuC,gBAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE,QADM;AAEdC,EAAAA,WAAW,EAAE,EAFC;AAGdC,EAAAA,QAAQ,EAAE,oCAHI;AAIdC,EAAAA,cAAc,EAAE,CAJF;AAKdC,EAAAA,KAAK,EAAE;AALO,CAAlB;AAQA,OAAO,MAAMC,gBAAN,SAA+BlB,KAAK,CAACmB,SAArC,CAA8C;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC,EACJ,GAAGR;AADC,KADyC;;AAAA,SAKjDS,YALiD,GAKlC,MAAOC,CAAP,IAAa;AACxB,UAAIC,OAAO,GAAG,MAAMd,sBAAsB,CAACe,IAAD,EAAO,KAAKJ,KAAL,CAAWN,WAAlB,EACtC,KAAKM,KAAL,CAAWP,MAD2B,EACnB,KAAKO,KAAL,CAAWJ,cADQ,CAA1C;;AAGA,UAAG,CAACO,OAAJ,EAAY;AACR;AACA,YAAIE,YAAY,GAAG,KAAKT,cAAL,GAAoB,CAAvC;;AACA,YAAG,KAAKS,YAAL,GAAkB,CAArB,EAAuB;AACnB,eAAKC,QAAL,CAAc;AAAET,YAAAA,KAAK,EAAE;AAAT,WAAd;AACH;AACJ,OAND,MAMK,CACD;AAEH;AACJ,KAnBgD;;AAAA,SAqBjDU,UArBiD,GAqBnCL,CAAD,IAAO;AAChB,UAAIM,QAAQ,GAAGN,CAAC,CAACO,MAAF,CAASC,IAAxB;AACA,UAAIC,SAAS,GAAGT,CAAC,CAACO,MAAF,CAASG,KAAzB;AACA,UAAIZ,KAAK,GAAG,EAAE,GAAG,KAAKA;AAAV,OAAZ;AACAA,MAAAA,KAAK,CAACQ,QAAD,CAAL,GAAkBG,SAAlB;AACA,WAAKL,QAAL,CAAcN,KAAd;AACH,KA3BgD;AAAA;;AA6BjDa,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAE,MADR;AAEHC,QAAAA,OAAO,EAAE,MAFN;AAGHC,QAAAA,aAAa,EAAE,QAHZ;AAIHC,QAAAA,UAAU,EAAE;AAJT,OADK;AAOZC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE,MADL;AAEFL,QAAAA,SAAS,EAAE;AAFT,OAPM;AAWZM,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AADJ;AAXI,KAAhB;AAgBA,QAAIC,KAAK,GAAG,KAAKxB,KAAL,CAAWH,KAAX,gBAAmB,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKG,KAAL,CAAWH,KAApC,CAAnB,GAAwE,EAApF;AAEA,wBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAEiB,OAAO,CAACW,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,KAAKzB,KAAL,CAAWL,QAApD,CADJ,eAEI,oBAAC,SAAD;AACI,MAAA,OAAO,EAAC,UADZ;AAEI,MAAA,MAAM,EAAC,QAFX;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,IAAI,EAAC,QAJT;AAKI,MAAA,KAAK,EAAE,QALX;AAMI,MAAA,EAAE,EAAC,iBANP;AAOI,MAAA,QAAQ,MAPZ;AAQI,MAAA,SAAS,MARb;AASI,MAAA,YAAY,EAAC,aATjB;AAUI,MAAA,QAAQ,EAAE,KAAKY,UAVnB;AAWI,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWP,MAXtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAcI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,MAFb;AAGI,MAAA,OAAO,EAAC,WAHZ;AAII,MAAA,KAAK,EAAC,SAJV;AAKI,MAAA,KAAK,EAAEqB,OAAO,CAACQ,MALnB;AAMI,MAAA,OAAO,EAAE,KAAKrB,YANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,CAFJ,EA0BKuB,KA1BL,CADJ,CADJ;AAgCH;;AAhFgD;;AAmFrD,MAAME,QAAQ,GAAI1B,KAAD,IAAW;AAAE,SAAO;AAAEI,IAAAA,IAAI,EAAEJ,KAAK,CAACI;AAAd,GAAP;AAA6B,CAA3D;;AACA,MAAMuB,WAAW,GAAG;AAAEpC,EAAAA;AAAF,CAApB;AAEA,eAAeD,OAAO,CAACoC,QAAD,EAAWC,WAAX,CAAP,CAA+B7B,gBAA/B,CAAf","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { answerSecurityQuestion } from './usersService';\r\nimport { connect } from 'react-redux';\r\nimport { app_login } from '../redux/actions/userActions';\r\nconst initState = {\r\n    answer: \"answer\",\r\n    question_id: \"\",\r\n    question: \"Where did you go to middle school?\",\r\n    attempt_number: 1,\r\n    error: \"\"\r\n}\r\n\r\nexport class SecurityQuestion extends React.Component{\r\n    state = {\r\n        ...initState\r\n    }\r\n\r\n    submitAnswer = async (e) => {\r\n        let success = await answerSecurityQuestion(user, this.state.question_id, \r\n            this.state.answer, this.state.attempt_number);\r\n        \r\n        if(!success){\r\n            //Answered incorrectly\r\n            let next_attempt = this.attempt_number+1;\r\n            if(this.next_attempt>3){\r\n                this.setState({ error: \"Security Questions failed: Please contact administrator.\"})\r\n            }\r\n        }else{\r\n            //Answered correctly\r\n            \r\n        }\r\n    }\r\n\r\n    changeForm = (e) => {\r\n        let propName = e.target.name;\r\n        let propValue = e.target.value;\r\n        let state = { ...this.state };\r\n        state[propName] = propValue;\r\n        this.setState(state);\r\n    }\r\n\r\n    render() {\r\n        const classes = {\r\n            paper: {\r\n                marginTop: \"10px\",\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n            },\r\n            form: {\r\n                width: '100%',\r\n                marginTop: \"10px\",\r\n            },\r\n            submit: {\r\n                margin: \"10px\",\r\n            },\r\n        };\r\n\r\n        let alert = this.state.error ? <Alert severity=\"error\">{this.state.error}</Alert> : \"\";\r\n\r\n        return(\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <div style={classes.papper}>\r\n                    <Typography component=\"h1\" variant=\"h5\">Security Question</Typography>\r\n                    <Grid container justify=\"center\">\r\n                        <Typography component=\"h4\" variant=\"h5\">{this.state.question}</Typography>\r\n                        <TextField \r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            name=\"answer\"\r\n                            label= \"Answer\"\r\n                            id=\"security_answer\"\r\n                            required\r\n                            autoFocus\r\n                            autoComplete=\"auto-answer\"\r\n                            onChange={this.changeForm}\r\n                            value={this.state.answer} />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={classes.submit}\r\n                            onClick={this.submitAnswer}>\r\n                            Submit\r\n                        </Button>\r\n                    </Grid>\r\n                    {alert}\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = (state) => { return { user: state.user } };\r\nconst mapDispatch = { app_login };\r\n\r\nexport default connect(mapState, mapDispatch)(SecurityQuestion);"]},"metadata":{},"sourceType":"module"}